<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="classopen__spiel_1_1_policy" kind="class" language="C++" prot="public">
    <compoundname>open_spiel::Policy</compoundname>
    <derivedcompoundref refid="classopen__spiel_1_1_first_action_policy" prot="public" virt="non-virtual">open_spiel::FirstActionPolicy</derivedcompoundref>
    <derivedcompoundref refid="classopen__spiel_1_1_preferred_action_policy" prot="public" virt="non-virtual">open_spiel::PreferredActionPolicy</derivedcompoundref>
    <derivedcompoundref refid="classopen__spiel_1_1_tabular_policy" prot="public" virt="non-virtual">open_spiel::TabularPolicy</derivedcompoundref>
    <derivedcompoundref refid="classopen__spiel_1_1_uniform_policy" prot="public" virt="non-virtual">open_spiel::UniformPolicy</derivedcompoundref>
    <includes refid="policy_8h" local="no">policy.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classopen__spiel_1_1_policy_1ada2523d991dccc11adc1320d28423629" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual open_spiel::Policy::~Policy</definition>
        <argsstring>()=default</argsstring>
        <name>~Policy</name>
        <qualifiedname>open_spiel::Policy::~Policy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.h" line="71" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classopen__spiel_1_1_policy_1acd81eb036ef229697a18cebaa270083b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::pair&lt; std::vector&lt; <ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref> &gt;, std::vector&lt; double &gt; &gt;</type>
        <definition>virtual std::pair&lt; std::vector&lt; Action &gt;, std::vector&lt; double &gt; &gt; open_spiel::Policy::GetStatePolicyAsParallelVectors</definition>
        <argsstring>(const State &amp;state) const</argsstring>
        <name>GetStatePolicyAsParallelVectors</name>
        <qualifiedname>open_spiel::Policy::GetStatePolicyAsParallelVectors</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.h" line="75" column="3" bodyfile="open_spiel/policy.h" bodystart="75" bodyend="82"/>
        <references refid="classopen__spiel_1_1_policy_1ab5b6ff779e99ea042f7bb261e78ed6c6" compoundref="policy_8h" startline="116" endline="118">GetStatePolicy</references>
      </memberdef>
      <memberdef kind="function" id="classopen__spiel_1_1_policy_1a9acb6d6cb2f40f5ad6ac5490a4ec618c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::pair&lt; std::vector&lt; <ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref> &gt;, std::vector&lt; double &gt; &gt;</type>
        <definition>virtual std::pair&lt; std::vector&lt; Action &gt;, std::vector&lt; double &gt; &gt; open_spiel::Policy::GetStatePolicyAsParallelVectors</definition>
        <argsstring>(const std::string &amp;info_state) const</argsstring>
        <name>GetStatePolicyAsParallelVectors</name>
        <qualifiedname>open_spiel::Policy::GetStatePolicyAsParallelVectors</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>info_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.h" line="86" column="3" bodyfile="open_spiel/policy.h" bodystart="86" bodyend="93"/>
        <references refid="classopen__spiel_1_1_policy_1ab5b6ff779e99ea042f7bb261e78ed6c6" compoundref="policy_8h" startline="116" endline="118">GetStatePolicy</references>
      </memberdef>
      <memberdef kind="function" id="classopen__spiel_1_1_policy_1a65cde909235df749977cbaa0d3320186" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::unordered_map&lt; <ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref>, double &gt;</type>
        <definition>virtual std::unordered_map&lt; Action, double &gt; open_spiel::Policy::GetStatePolicyAsMap</definition>
        <argsstring>(const State &amp;state) const</argsstring>
        <name>GetStatePolicyAsMap</name>
        <qualifiedname>open_spiel::Policy::GetStatePolicyAsMap</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.h" line="95" column="30" bodyfile="open_spiel/policy.h" bodystart="95" bodyend="102"/>
        <references refid="classopen__spiel_1_1_policy_1ab5b6ff779e99ea042f7bb261e78ed6c6" compoundref="policy_8h" startline="116" endline="118">GetStatePolicy</references>
      </memberdef>
      <memberdef kind="function" id="classopen__spiel_1_1_policy_1ac4aa0cf8b821528b20fe70d0f30dbc4e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::unordered_map&lt; <ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref>, double &gt;</type>
        <definition>virtual std::unordered_map&lt; Action, double &gt; open_spiel::Policy::GetStatePolicyAsMap</definition>
        <argsstring>(const std::string &amp;info_state) const</argsstring>
        <name>GetStatePolicyAsMap</name>
        <qualifiedname>open_spiel::Policy::GetStatePolicyAsMap</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>info_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.h" line="104" column="30" bodyfile="open_spiel/policy.h" bodystart="104" bodyend="111"/>
        <references refid="classopen__spiel_1_1_policy_1ab5b6ff779e99ea042f7bb261e78ed6c6" compoundref="policy_8h" startline="116" endline="118">GetStatePolicy</references>
      </memberdef>
      <memberdef kind="function" id="classopen__spiel_1_1_policy_1ab5b6ff779e99ea042f7bb261e78ed6c6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceopen__spiel_1ac4ea6d9d7193ac74f6f333b954e3810f" kindref="member">ActionsAndProbs</ref></type>
        <definition>virtual ActionsAndProbs open_spiel::Policy::GetStatePolicy</definition>
        <argsstring>(const State &amp;state) const</argsstring>
        <name>GetStatePolicy</name>
        <qualifiedname>open_spiel::Policy::GetStatePolicy</qualifiedname>
        <reimplementedby refid="classopen__spiel_1_1_partial_tabular_policy_1a10ef080e41044e62f0704153d89ca016">GetStatePolicy</reimplementedby>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.h" line="116" column="27" bodyfile="open_spiel/policy.h" bodystart="116" bodyend="118"/>
        <references refid="classopen__spiel_1_1_policy_1ab5b6ff779e99ea042f7bb261e78ed6c6" compoundref="policy_8h" startline="116" endline="118">GetStatePolicy</references>
        <referencedby refid="classopen__spiel_1_1_policy_1ab5b6ff779e99ea042f7bb261e78ed6c6" compoundref="policy_8h" startline="116" endline="118">GetStatePolicy</referencedby>
        <referencedby refid="classopen__spiel_1_1_policy_1a17e0b9275e629f68174168f6abfcb54b" compoundref="policy_8h" startline="123" endline="126">GetStatePolicy</referencedby>
        <referencedby refid="classopen__spiel_1_1_policy_1a65cde909235df749977cbaa0d3320186" compoundref="policy_8h" startline="95" endline="102">GetStatePolicyAsMap</referencedby>
        <referencedby refid="classopen__spiel_1_1_policy_1ac4aa0cf8b821528b20fe70d0f30dbc4e" compoundref="policy_8h" startline="104" endline="111">GetStatePolicyAsMap</referencedby>
        <referencedby refid="classopen__spiel_1_1_policy_1acd81eb036ef229697a18cebaa270083b" compoundref="policy_8h" startline="75" endline="82">GetStatePolicyAsParallelVectors</referencedby>
        <referencedby refid="classopen__spiel_1_1_policy_1a9acb6d6cb2f40f5ad6ac5490a4ec618c" compoundref="policy_8h" startline="86" endline="93">GetStatePolicyAsParallelVectors</referencedby>
      </memberdef>
      <memberdef kind="function" id="classopen__spiel_1_1_policy_1a17e0b9275e629f68174168f6abfcb54b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceopen__spiel_1ac4ea6d9d7193ac74f6f333b954e3810f" kindref="member">ActionsAndProbs</ref></type>
        <definition>virtual ActionsAndProbs open_spiel::Policy::GetStatePolicy</definition>
        <argsstring>(const State &amp;state, Player player) const</argsstring>
        <name>GetStatePolicy</name>
        <qualifiedname>open_spiel::Policy::GetStatePolicy</qualifiedname>
        <reimplementedby refid="classopen__spiel_1_1_first_action_policy_1af1170c5460cac64d6321ab2a6fa1a181">GetStatePolicy</reimplementedby>
        <reimplementedby refid="classopen__spiel_1_1_partial_tabular_policy_1a4b45e04a9f0e67e35a0971ce79dba2d5">GetStatePolicy</reimplementedby>
        <reimplementedby refid="classopen__spiel_1_1_preferred_action_policy_1ad4cccc4bd0b7060f4d04a47f716a408a">GetStatePolicy</reimplementedby>
        <reimplementedby refid="classopen__spiel_1_1_uniform_policy_1af74a3922b9944a32fd4a82024a3b5721">GetStatePolicy</reimplementedby>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref></type>
          <declname>player</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.h" line="123" column="27" bodyfile="open_spiel/policy.h" bodystart="123" bodyend="126"/>
        <references refid="classopen__spiel_1_1_policy_1ab5b6ff779e99ea042f7bb261e78ed6c6" compoundref="policy_8h" startline="116" endline="118">GetStatePolicy</references>
      </memberdef>
      <memberdef kind="function" id="classopen__spiel_1_1_policy_1abbe4e1b820b5ca95e67b60de92d38370" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceopen__spiel_1ac4ea6d9d7193ac74f6f333b954e3810f" kindref="member">ActionsAndProbs</ref></type>
        <definition>virtual ActionsAndProbs open_spiel::Policy::GetStatePolicy</definition>
        <argsstring>(const std::string &amp;info_state) const</argsstring>
        <name>GetStatePolicy</name>
        <qualifiedname>open_spiel::Policy::GetStatePolicy</qualifiedname>
        <reimplementedby refid="classopen__spiel_1_1_partial_tabular_policy_1a0dcbfbc352298c4180bfabff8ac9d61a">GetStatePolicy</reimplementedby>
        <reimplementedby refid="classopen__spiel_1_1_tabular_policy_1a8eda4e771e35eacab6ec90b26b8aff15">GetStatePolicy</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>info_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.h" line="132" column="27" bodyfile="open_spiel/policy.h" bodystart="132" bodyend="134"/>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">open_spiel::SpielFatalError</references>
      </memberdef>
      <memberdef kind="function" id="classopen__spiel_1_1_policy_1a53e9086029e7365dc2f5d4a3fda33124" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string open_spiel::Policy::Serialize</definition>
        <argsstring>(int double_precision=-1, std::string delimiter=&quot;&lt;~&gt;&quot;) const</argsstring>
        <name>Serialize</name>
        <qualifiedname>open_spiel::Policy::Serialize</qualifiedname>
        <reimplementedby refid="classopen__spiel_1_1_first_action_policy_1a4b51bc6754d382aac6f47485a1797e80">Serialize</reimplementedby>
        <reimplementedby refid="classopen__spiel_1_1_preferred_action_policy_1a7d159ec9a8610fab3795cb18f3e83b6b">Serialize</reimplementedby>
        <reimplementedby refid="classopen__spiel_1_1_tabular_policy_1a933b8698b3924573c2f1c55b31f3c7a1">Serialize</reimplementedby>
        <reimplementedby refid="classopen__spiel_1_1_uniform_policy_1a37f911b641117b3d8f8f7279cbb13c87">Serialize</reimplementedby>
        <param>
          <type>int</type>
          <declname>double_precision</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>delimiter</declname>
          <defval>&quot;&lt;~&gt;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.h" line="143" column="23" bodyfile="open_spiel/policy.h" bodystart="143" bodyend="146"/>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">open_spiel::SpielFatalError</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>open_spiel::FirstActionPolicy</label>
        <link refid="classopen__spiel_1_1_first_action_policy"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>open_spiel::PartialTabularPolicy</label>
        <link refid="classopen__spiel_1_1_partial_tabular_policy"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>open_spiel::Policy</label>
        <link refid="classopen__spiel_1_1_policy"/>
      </node>
      <node id="3">
        <label>open_spiel::PreferredActionPolicy</label>
        <link refid="classopen__spiel_1_1_preferred_action_policy"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>open_spiel::TabularPolicy</label>
        <link refid="classopen__spiel_1_1_tabular_policy"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>open_spiel::UniformPolicy</label>
        <link refid="classopen__spiel_1_1_uniform_policy"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>open_spiel::Policy</label>
        <link refid="classopen__spiel_1_1_policy"/>
      </node>
    </collaborationgraph>
    <location file="open_spiel/policy.h" line="69" column="1" bodyfile="open_spiel/policy.h" bodystart="69" bodyend="147"/>
    <listofallmembers>
      <member refid="classopen__spiel_1_1_policy_1ab5b6ff779e99ea042f7bb261e78ed6c6" prot="public" virt="virtual"><scope>open_spiel::Policy</scope><name>GetStatePolicy</name></member>
      <member refid="classopen__spiel_1_1_policy_1a17e0b9275e629f68174168f6abfcb54b" prot="public" virt="virtual"><scope>open_spiel::Policy</scope><name>GetStatePolicy</name></member>
      <member refid="classopen__spiel_1_1_policy_1abbe4e1b820b5ca95e67b60de92d38370" prot="public" virt="virtual"><scope>open_spiel::Policy</scope><name>GetStatePolicy</name></member>
      <member refid="classopen__spiel_1_1_policy_1a65cde909235df749977cbaa0d3320186" prot="public" virt="virtual"><scope>open_spiel::Policy</scope><name>GetStatePolicyAsMap</name></member>
      <member refid="classopen__spiel_1_1_policy_1ac4aa0cf8b821528b20fe70d0f30dbc4e" prot="public" virt="virtual"><scope>open_spiel::Policy</scope><name>GetStatePolicyAsMap</name></member>
      <member refid="classopen__spiel_1_1_policy_1acd81eb036ef229697a18cebaa270083b" prot="public" virt="virtual"><scope>open_spiel::Policy</scope><name>GetStatePolicyAsParallelVectors</name></member>
      <member refid="classopen__spiel_1_1_policy_1a9acb6d6cb2f40f5ad6ac5490a4ec618c" prot="public" virt="virtual"><scope>open_spiel::Policy</scope><name>GetStatePolicyAsParallelVectors</name></member>
      <member refid="classopen__spiel_1_1_policy_1a53e9086029e7365dc2f5d4a3fda33124" prot="public" virt="virtual"><scope>open_spiel::Policy</scope><name>Serialize</name></member>
      <member refid="classopen__spiel_1_1_policy_1ada2523d991dccc11adc1320d28423629" prot="public" virt="virtual"><scope>open_spiel::Policy</scope><name>~Policy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
