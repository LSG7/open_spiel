<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="spiel__bots_8h" kind="file" language="C++">
    <compoundname>spiel_bots.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes refid="policy_8h" local="yes">open_spiel/policy.h</includes>
    <includes refid="spiel_8h" local="yes">open_spiel/spiel.h</includes>
    <includes refid="spiel__utils_8h" local="yes">open_spiel/spiel_utils.h</includes>
    <includedby refid="spiel__bots_8cc" local="yes">open_spiel/spiel_bots.cc</includedby>
    <incdepgraph>
      <node id="21">
        <label>open_spiel/game_parameters.h</label>
        <link refid="game__parameters_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>open_spiel/observer.h</label>
        <link refid="observer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>open_spiel/policy.h</label>
        <link refid="policy_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>open_spiel/spiel.h</label>
        <link refid="spiel_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>open_spiel/spiel_bots.h</label>
        <link refid="spiel__bots_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>open_spiel/spiel_globals.h</label>
        <link refid="spiel__globals_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>open_spiel/spiel_utils.h</label>
        <link refid="spiel__utils_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>algorithm</label>
      </node>
      <node id="24">
        <label>array</label>
      </node>
      <node id="25">
        <label>cmath</label>
      </node>
      <node id="26">
        <label>cstddef</label>
      </node>
      <node id="27">
        <label>cstdint</label>
      </node>
      <node id="10">
        <label>functional</label>
      </node>
      <node id="11">
        <label>iostream</label>
      </node>
      <node id="12">
        <label>map</label>
      </node>
      <node id="2">
        <label>memory</label>
      </node>
      <node id="13">
        <label>numeric</label>
      </node>
      <node id="8">
        <label>open_spiel/abseil-cpp/absl/algorithm/container.h</label>
      </node>
      <node id="34">
        <label>open_spiel/abseil-cpp/absl/base/attributes.h</label>
      </node>
      <node id="35">
        <label>open_spiel/abseil-cpp/absl/container/flat_hash_set.h</label>
      </node>
      <node id="36">
        <label>open_spiel/abseil-cpp/absl/container/inlined_vector.h</label>
      </node>
      <node id="16">
        <label>open_spiel/abseil-cpp/absl/random/bit_gen_ref.h</label>
      </node>
      <node id="29">
        <label>open_spiel/abseil-cpp/absl/random/uniform_real_distribution.h</label>
      </node>
      <node id="30">
        <label>open_spiel/abseil-cpp/absl/strings/str_cat.h</label>
      </node>
      <node id="17">
        <label>open_spiel/abseil-cpp/absl/strings/str_join.h</label>
      </node>
      <node id="37">
        <label>open_spiel/abseil-cpp/absl/strings/string_view.h</label>
      </node>
      <node id="18">
        <label>open_spiel/abseil-cpp/absl/synchronization/mutex.h</label>
      </node>
      <node id="31">
        <label>open_spiel/abseil-cpp/absl/time/clock.h</label>
      </node>
      <node id="32">
        <label>open_spiel/abseil-cpp/absl/time/time.h</label>
      </node>
      <node id="19">
        <label>open_spiel/abseil-cpp/absl/types/optional.h</label>
      </node>
      <node id="20">
        <label>open_spiel/abseil-cpp/absl/types/span.h</label>
      </node>
      <node id="39">
        <label>open_spiel/utils/serialization.h</label>
      </node>
      <node id="14">
        <label>random</label>
      </node>
      <node id="15">
        <label>sstream</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="28">
        <label>type_traits</label>
      </node>
      <node id="7">
        <label>unordered_map</label>
      </node>
      <node id="3">
        <label>utility</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>open_spiel/spiel_bots.cc</label>
        <link refid="spiel__bots_8cc"/>
      </node>
      <node id="1">
        <label>open_spiel/spiel_bots.h</label>
        <link refid="spiel__bots_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classopen__spiel_1_1_bot" prot="public">open_spiel::Bot</innerclass>
    <innerclass refid="classopen__spiel_1_1_bot_factory" prot="public">open_spiel::BotFactory</innerclass>
    <innerclass refid="classopen__spiel_1_1_bot_registerer" prot="public">open_spiel::BotRegisterer</innerclass>
    <innernamespace refid="namespaceopen__spiel">open_spiel</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="spiel__bots_8h_1a0c6979214263ab5701d37b2f741722c7" prot="public" static="no">
        <name>REGISTER_SPIEL_BOT</name>
        <param><defname>info</defname></param>
        <param><defname>factory</defname></param>
        <initializer>  BotRegisterer <ref refid="spiel_8h_1a2f18db18bca26cafa95e9719de4a41ef" kindref="member">CONCAT</ref>(bot, __COUNTER__)(info, std::make_unique&lt;factory&gt;());</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_bots.h" line="211" column="9" bodyfile="open_spiel/spiel_bots.h" bodystart="211" bodyend="212"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2021<sp/>DeepMind<sp/>Technologies<sp/>Limited</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPEN_SPIEL_SPIEL_BOTS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OPEN_SPIEL_SPIEL_BOTS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="policy_8h" kindref="compound">open_spiel/policy.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="spiel_8h" kindref="compound">open_spiel/spiel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="spiel__utils_8h" kindref="compound">open_spiel/spiel_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Bots<sp/>are<sp/>things<sp/>which<sp/>can<sp/>play<sp/>a<sp/>game.<sp/>Here<sp/>we<sp/>define<sp/>the<sp/>interface<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>various<sp/>features<sp/>of<sp/>a<sp/>bot,<sp/>and<sp/>some<sp/>trivial<sp/>uniform<sp/>and<sp/>fixed<sp/>action<sp/>bots.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Different<sp/>use-cases<sp/>include:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>play<sp/>a<sp/>bot<sp/>versus<sp/>another<sp/>bot<sp/>(we<sp/>just<sp/>need<sp/>an<sp/>action).<sp/>This<sp/>should<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>general<sp/>enough<sp/>to<sp/>support<sp/>simultaneous<sp/>games<sp/>(in<sp/>which<sp/>case<sp/>the<sp/>bot<sp/>needs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>to<sp/>know<sp/>a<sp/>player_id).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>restart<sp/>the<sp/>game<sp/>(to<sp/>the<sp/>initial<sp/>state,<sp/>and<sp/>an<sp/>arbitrary<sp/>state)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>interact<sp/>with<sp/>a<sp/>bot<sp/>and<sp/>study<sp/>its<sp/>behavior,<sp/>for<sp/>example<sp/>by<sp/>looking<sp/>at<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>policy<sp/>in<sp/>specific<sp/>states,<sp/>or<sp/>by<sp/>accessing<sp/>its<sp/>action<sp/>distribution.<sp/>This</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>implies<sp/>being<sp/>able<sp/>to<sp/>set<sp/>the<sp/>bot<sp/>into<sp/>a<sp/>specific<sp/>game<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Bots<sp/>can<sp/>differ,<sp/>in<sp/>particular<sp/>with<sp/>respect<sp/>to:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1.<sp/>Bot<sp/>determinism.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-<sp/>deterministic:<sp/>the<sp/>(state<sp/>-&gt;<sp/>action)<sp/>suggestion<sp/>is<sp/>deterministic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-<sp/>Explicit<sp/>Stochastic:<sp/>the<sp/>(state-&gt;<sp/>distribution<sp/>over<sp/>actions)<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>deterministic<sp/>and<sp/>the<sp/>bot<sp/>exposes<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-<sp/>Implicitly<sp/>stochastic:<sp/>even<sp/>though<sp/>the<sp/>(state<sp/>-&gt;<sp/>actions<sp/>distribution)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>may<sp/>exist<sp/>in<sp/>theory,<sp/>it&apos;s<sp/>intractable<sp/>or<sp/>not<sp/>implemented.<sp/>Thus,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>(state<sp/>-&gt;<sp/>action)<sp/>suggestion<sp/>is<sp/>stochastic.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2.<sp/>Bot<sp/>statefulness.<sp/>A<sp/>bot<sp/>can<sp/>be<sp/>stateless,<sp/>or<sp/>stateful<sp/>(the<sp/>policy<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>depend<sp/>on<sp/>the<sp/>history<sp/>of<sp/>states,<sp/>observations<sp/>and/or<sp/>actions).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopen__spiel" kindref="compound">open_spiel</ref><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>simple<sp/>bot<sp/>that<sp/>can<sp/>play<sp/>moves<sp/>and<sp/>be<sp/>restarted.<sp/>The<sp/>bot<sp/>may<sp/>be<sp/>stateful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>thus,<sp/>one<sp/>should<sp/>restart<sp/>it<sp/>to<sp/>provide<sp/>states<sp/>from<sp/>a<sp/>different<sp/>history<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>simultaneous<sp/>games,<sp/>or<sp/>for<sp/>bots<sp/>playing<sp/>as<sp/>a<sp/>single<sp/>player,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implementation<sp/>should<sp/>take<sp/>the<sp/>player_id<sp/>in<sp/>the<sp/>constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Optionally,<sp/>the<sp/>Bot<sp/>can<sp/>provide<sp/>additional<sp/>functionality<sp/>(see</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>`IsOverridable`<sp/>and<sp/>`ProvidesPolicy`).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>Python,<sp/>the<sp/>simplest<sp/>way<sp/>to<sp/>implement<sp/>such<sp/>a<sp/>bot<sp/>is:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>MyBot(pyspiel.Bot):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>def<sp/>__init__(self):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>pyspiel.Bot.__init__(self)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>#<sp/>If<sp/>you<sp/>do<sp/>implement<sp/>get_policy<sp/>and<sp/>step_with_policy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>def<sp/>provides_force_action(self):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>def<sp/>force_action(self,<sp/>state,<sp/>action):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classopen__spiel_1_1_bot" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1_bot" kindref="compound">Bot</ref><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructs<sp/>a<sp/>Bot<sp/>that<sp/>only<sp/>supports<sp/>`Step`<sp/>and<sp/>`Restart`<sp/>(maybe<sp/>RestartAt).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classopen__spiel_1_1_bot_1a19df23b2f1849d9d5288bc8e7c46bd0e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_bot_1a19df23b2f1849d9d5288bc8e7c46bd0e" kindref="member">~Bot</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Asks<sp/>the<sp/>bot<sp/>to<sp/>decide<sp/>on<sp/>an<sp/>action<sp/>to<sp/>play.<sp/>The<sp/>bot<sp/>should<sp/>be<sp/>able<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>safely<sp/>assumes<sp/>the<sp/>action<sp/>was<sp/>played.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classopen__spiel_1_1_bot_1af1fb47734c2143ce6b18701eddab8970" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref><sp/><ref refid="classopen__spiel_1_1_bot_1af1fb47734c2143ce6b18701eddab8970" kindref="member">Step</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref>&amp;<sp/>state)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Let<sp/>the<sp/>bot<sp/>know<sp/>that<sp/>a<sp/>different<sp/>player<sp/>made<sp/>an<sp/>action<sp/>at<sp/>a<sp/>given<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>state<sp/>is<sp/>the<sp/>state<sp/>at<sp/>which<sp/>the<sp/>`player_id`<sp/>player<sp/>decided<sp/>to<sp/>take</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>given<sp/>`action`<sp/>(but<sp/>before<sp/>it<sp/>is<sp/>applied<sp/>to<sp/>the<sp/>state).<sp/>Some<sp/>usage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>example<sp/>looks<sp/>like:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Player<sp/>current_player<sp/>=<sp/>state-&gt;CurrentPlayer();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Action<sp/>action<sp/>=<sp/>bots[current_player]-&gt;Step(*state);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>for<sp/>(Player<sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>num_players;<sp/>++p)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if<sp/>(p<sp/>!=<sp/>current_player)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>bots[p]-&gt;InformAction(*state,<sp/>current_player,<sp/>action);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>state-&gt;ApplyAction(action);<sp/><sp/>#<sp/>We<sp/>apply<sp/>the<sp/>action<sp/>after<sp/>informing<sp/>bots.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>useful<sp/>for<sp/>stateful<sp/>bots<sp/>so<sp/>they<sp/>know<sp/>that<sp/>the<sp/>state<sp/>of<sp/>the<sp/>game</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>has<sp/>advanced.<sp/>This<sp/>should<sp/>not<sp/>be<sp/>called<sp/>for<sp/>the<sp/>bot<sp/>that<sp/>generated<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>action<sp/>as<sp/>it<sp/>already<sp/>knows<sp/>the<sp/>action<sp/>it<sp/>took.<sp/>As<sp/>most<sp/>bots<sp/>are<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>stateful,<sp/>the<sp/>default<sp/>implementation<sp/>is<sp/>a<sp/>no-op.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>more<sp/>explicit<sp/>and<sp/>less<sp/>error<sp/>prone<sp/>than<sp/>having<sp/>bots<sp/>inspect<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>potentially<sp/>replay<sp/>the<sp/>history<sp/>of<sp/>actions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classopen__spiel_1_1_bot_1ae4cb78465e95b5aef74141646e031221" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_bot_1ae4cb78465e95b5aef74141646e031221" kindref="member">InformAction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref>&amp;<sp/>state,<sp/><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>player_id,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref><sp/>action)<sp/>{}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>simultaneous<sp/>move<sp/>games<sp/>the<sp/>bot<sp/>receives<sp/>a<sp/>vector<sp/>containing<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>actions<sp/>taken<sp/>by<sp/>all<sp/>players<sp/>in<sp/>the<sp/>given<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classopen__spiel_1_1_bot_1ab61924d468f42600b4aaa1b039f6ef8d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_bot_1ab61924d468f42600b4aaa1b039f6ef8d" kindref="member">InformActions</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref>&amp;<sp/>state,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Action&gt;&amp;<sp/>actions)<sp/>{}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Restarts<sp/>the<sp/>bot<sp/>to<sp/>its<sp/>initial<sp/>state,<sp/>ready<sp/>to<sp/>start<sp/>a<sp/>new<sp/>trajectory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classopen__spiel_1_1_bot_1acc37816aa57da212ea7aa2e3f71d5e9c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_bot_1acc37816aa57da212ea7aa2e3f71d5e9c" kindref="member">Restart</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>bot<sp/>to<sp/>be<sp/>on<sp/>the<sp/>given<sp/>`state`<sp/>which<sp/>can<sp/>be<sp/>arbitrary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Bot<sp/>not<sp/>supporting<sp/>this<sp/>feature<sp/>can<sp/>raise<sp/>an<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="classopen__spiel_1_1_bot_1aceae4d02f217fad76c55f74b1fb91d5e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_bot_1aceae4d02f217fad76c55f74b1fb91d5e" kindref="member">RestartAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref>&amp;<sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" kindref="member">SpielFatalError</ref>(</highlight><highlight class="stringliteral">&quot;RestartAt(state)<sp/>not<sp/>implemented.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>`true`<sp/>if<sp/>it<sp/>is<sp/>possible<sp/>to<sp/>force<sp/>the<sp/>Bot<sp/>to<sp/>take<sp/>a<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>action<sp/>on<sp/>playable<sp/>states.<sp/>In<sp/>case<sp/>of<sp/>a<sp/>stateful<sp/>bot,<sp/>it<sp/>should<sp/>correctly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>its<sp/>internal<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classopen__spiel_1_1_bot_1ab5d1cc3d483f0f79ff6bb7070717f275" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_bot_1ab5d1cc3d483f0f79ff6bb7070717f275" kindref="member">ProvidesForceAction</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Notifies<sp/>the<sp/>bot<sp/>that<sp/>it<sp/>should<sp/>consider<sp/>that<sp/>it<sp/>took<sp/>action<sp/>action<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>given<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="classopen__spiel_1_1_bot_1a0022d99994e0dc09b97b2d2c387e63da" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_bot_1a0022d99994e0dc09b97b2d2c387e63da" kindref="member">ForceAction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref>&amp;<sp/>state,<sp/><ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref><sp/>action)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classopen__spiel_1_1_bot_1ab5d1cc3d483f0f79ff6bb7070717f275" kindref="member">ProvidesForceAction</ref>())<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" kindref="member">SpielFatalError</ref>(</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ForceAction<sp/>not<sp/>implemented<sp/>but<sp/>should<sp/>because<sp/>the<sp/>bot<sp/>is<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;registered<sp/>as<sp/>overridable.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" kindref="member">SpielFatalError</ref>(</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ForceAction<sp/>not<sp/>implemented<sp/>because<sp/>the<sp/>bot<sp/>is<sp/>not<sp/>overridable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Extends<sp/>a<sp/>bot<sp/>to<sp/>support<sp/>explicit<sp/>stochasticity,<sp/>meaning<sp/>that<sp/>it<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>a<sp/>distribution<sp/>over<sp/>moves.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classopen__spiel_1_1_bot_1a6731c3c3b3819de2875646a3f5faf2c1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_bot_1a6731c3c3b3819de2875646a3f5faf2c1" kindref="member">ProvidesPolicy</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="137" refid="classopen__spiel_1_1_bot_1ab9a38a83389cc6f48dbec28ecd243519" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespaceopen__spiel_1ac4ea6d9d7193ac74f6f333b954e3810f" kindref="member">ActionsAndProbs</ref><sp/><ref refid="classopen__spiel_1_1_bot_1ab9a38a83389cc6f48dbec28ecd243519" kindref="member">GetPolicy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref>&amp;<sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classopen__spiel_1_1_bot_1a6731c3c3b3819de2875646a3f5faf2c1" kindref="member">ProvidesPolicy</ref>())<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" kindref="member">SpielFatalError</ref>(</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;GetPolicy<sp/>not<sp/>implemented<sp/>but<sp/>should<sp/>because<sp/>the<sp/>bot<sp/>is<sp/>registered<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;as<sp/>exposing<sp/>its<sp/>policy.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" kindref="member">SpielFatalError</ref>(</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;GetPolicy<sp/>not<sp/>implemented<sp/>because<sp/>the<sp/>bot<sp/>is<sp/>not<sp/>exposing<sp/>any<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;policy.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148" refid="classopen__spiel_1_1_bot_1ae48130d7b9291f22e9d7460d88f2e87c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::pair&lt;ActionsAndProbs,<sp/>Action&gt;<sp/><ref refid="classopen__spiel_1_1_bot_1ae48130d7b9291f22e9d7460d88f2e87c" kindref="member">StepWithPolicy</ref>(</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref>&amp;<sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classopen__spiel_1_1_bot_1a6731c3c3b3819de2875646a3f5faf2c1" kindref="member">ProvidesPolicy</ref>())<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" kindref="member">SpielFatalError</ref>(</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;StepWithPolicy<sp/>not<sp/>implemented<sp/>but<sp/>should<sp/>because<sp/>the<sp/>bot<sp/>is<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;registered<sp/>as<sp/>exposing<sp/>its<sp/>policy.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" kindref="member">SpielFatalError</ref>(</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;StepWithPolicy<sp/>not<sp/>implemented<sp/>because<sp/>the<sp/>bot<sp/>is<sp/>not<sp/>exposing<sp/>any<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;policy.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Creates<sp/>a<sp/>clone<sp/>of<sp/>the<sp/>bot<sp/>with<sp/>an<sp/>independent<sp/>copy<sp/>of<sp/>its<sp/>internal<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>original<sp/>bot<sp/>and<sp/>the<sp/>clone<sp/>are<sp/>completely<sp/>independent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Clone<sp/>method<sp/>should<sp/>be<sp/>as<sp/>cheap<sp/>to<sp/>execute<sp/>as<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Important:<sp/>the<sp/>cloned<sp/>bot<sp/>must<sp/>sample<sp/>actions<sp/>independently<sp/>and<sp/>differently</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>the<sp/>original<sp/>bot.<sp/>I.e.<sp/>if<sp/>the<sp/>bot<sp/>uses<sp/>any<sp/>randomness<sp/>controlling<sp/>key,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>key<sp/>*must*<sp/>be<sp/>reseeded<sp/>when<sp/>cloning<sp/>the<sp/>bot.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>typical<sp/>use-case<sp/>for<sp/>cloning<sp/>is<sp/>generating<sp/>multiple<sp/>continuations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>a<sp/>game.<sp/>The<sp/>cloned<sp/>bot<sp/>should<sp/>produce<sp/>the<sp/>same<sp/>policy<sp/>as<sp/>the<sp/>original</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>bot,<sp/>but<sp/>there<sp/>*must*<sp/>be<sp/>no<sp/>correllation<sp/>between<sp/>action<sp/>sampling<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>original<sp/>bot<sp/>and<sp/>its<sp/>clone.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>bot<sp/>clones<sp/>must<sp/>also<sp/>sample<sp/>actions<sp/>independently.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="classopen__spiel_1_1_bot_1a067065a5ccf5620847f42cad7582b5f6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_bot_1a067065a5ccf5620847f42cad7582b5f6" kindref="member">IsClonable</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="174" refid="classopen__spiel_1_1_bot_1a98f07d0444b04513d593fed7b6edc062" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;Bot&gt;<sp/><ref refid="classopen__spiel_1_1_bot_1a98f07d0444b04513d593fed7b6edc062" kindref="member">Clone</ref>()<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" kindref="member">SpielFatalError</ref>(</highlight><highlight class="stringliteral">&quot;Clone<sp/>method<sp/>not<sp/>implemented.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal">};</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="classopen__spiel_1_1_bot_factory" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1_bot_factory" kindref="compound">BotFactory</ref><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="181" refid="classopen__spiel_1_1_bot_factory_1a47bf74defac1968097920dc06d8d6734" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_bot_factory_1a47bf74defac1968097920dc06d8d6734" kindref="member">~BotFactory</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Asks<sp/>the<sp/>bot<sp/>whether<sp/>it<sp/>can<sp/>play<sp/>the<sp/>game<sp/>as<sp/>the<sp/>given<sp/>player.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="classopen__spiel_1_1_bot_factory_1a9ad20fc11636edf35f34c0ac42bc9b70" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_bot_factory_1a9ad20fc11636edf35f34c0ac42bc9b70" kindref="member">CanPlayGame</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref>&amp;<sp/>game,<sp/><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>player_id)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Creates<sp/>an<sp/>instance<sp/>of<sp/>the<sp/>bot<sp/>for<sp/>a<sp/>given<sp/>game<sp/>and<sp/>a<sp/>player</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>which<sp/>it<sp/>should<sp/>play.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="classopen__spiel_1_1_bot_factory_1ab896d5a22861a891a1410118854b4577" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;Bot&gt;<sp/><ref refid="classopen__spiel_1_1_bot_factory_1ab896d5a22861a891a1410118854b4577" kindref="member">Create</ref>(</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;const<sp/>Game&gt;<sp/>game,<sp/><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>player_id,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceopen__spiel_1ad7c4d931669b5e357cb5c7f84a6de094" kindref="member">GameParameters</ref>&amp;<sp/>bot_params)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal">};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>uniform<sp/>random<sp/>bot,<sp/>for<sp/>test<sp/>purposes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal">std::unique_ptr&lt;Bot&gt;<sp/><ref refid="namespaceopen__spiel_1a2a36dd228935af0a2a2deaf25f7e0d88" kindref="member">MakeUniformRandomBot</ref>(<ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>player_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>uniform<sp/>random<sp/>bot<sp/>that<sp/>takes<sp/>actions<sp/>based<sp/>on<sp/>its<sp/>own<sp/>copy<sp/>of<sp/>the<sp/>state,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>test<sp/>purposes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal">std::unique_ptr&lt;Bot&gt;<sp/><ref refid="namespaceopen__spiel_1a0133263b17139cfadf624a3b290fdb25" kindref="member">MakeStatefulRandomBot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref>&amp;<sp/>game,<sp/><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>player_id,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>bot<sp/>that<sp/>samples<sp/>from<sp/>a<sp/>policy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal">std::unique_ptr&lt;Bot&gt;<sp/><ref refid="namespaceopen__spiel_1a250e5d3ee400ca1527e8bdbaa0d69631" kindref="member">MakePolicyBot</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed,<sp/>std::shared_ptr&lt;Policy&gt;<sp/>policy);</highlight></codeline>
<codeline lineno="203"><highlight class="normal">std::unique_ptr&lt;Bot&gt;<sp/><ref refid="namespaceopen__spiel_1a250e5d3ee400ca1527e8bdbaa0d69631" kindref="member">MakePolicyBot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref>&amp;<sp/>game,<sp/><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>player_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Policy&gt;<sp/>policy);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>bot<sp/>with<sp/>a<sp/>fixed<sp/>action<sp/>preference,<sp/>for<sp/>test<sp/>purposes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Picks<sp/>the<sp/>first<sp/>legal<sp/>action<sp/>found<sp/>in<sp/>the<sp/>list<sp/>of<sp/>actions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">std::unique_ptr&lt;Bot&gt;<sp/><ref refid="namespaceopen__spiel_1a12d12514131fbde3653c9d50182e6a1e" kindref="member">MakeFixedActionPreferenceBot</ref>(</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>player_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Action&gt;&amp;<sp/>actions);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="spiel__bots_8h_1a0c6979214263ab5701d37b2f741722c7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REGISTER_SPIEL_BOT(info,<sp/>factory)<sp/>\</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"><sp/><sp/>BotRegisterer<sp/>CONCAT(bot,<sp/>__COUNTER__)(info,<sp/>std::make_unique&lt;factory&gt;());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="classopen__spiel_1_1_bot_registerer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1_bot_registerer" kindref="compound">BotRegisterer</ref><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><ref refid="classopen__spiel_1_1_bot_registerer_1a9b8d59aea79555f769b2ff85464c07a7" kindref="member">BotRegisterer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>bot_name,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;BotFactory&gt;<sp/>factory);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;Bot&gt;<sp/><ref refid="classopen__spiel_1_1_bot_registerer_1a541147e08ab383cd9fb40e58e12789eb" kindref="member">CreateByName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>bot_name,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;const<sp/>Game&gt;<sp/>game,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>player_id,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceopen__spiel_1ad7c4d931669b5e357cb5c7f84a6de094" kindref="member">GameParameters</ref>&amp;<sp/>params);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classopen__spiel_1_1_bot_registerer_1a14f4d786c80eb75555552cf61a9b1074" kindref="member">BotsThatCanPlayGame</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref>&amp;<sp/>game,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>player_id);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classopen__spiel_1_1_bot_registerer_1a14f4d786c80eb75555552cf61a9b1074" kindref="member">BotsThatCanPlayGame</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref>&amp;<sp/>game);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classopen__spiel_1_1_bot_registerer_1acda325423331a4326b118934c89143ef" kindref="member">RegisteredBots</ref>();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_bot_registerer_1a7df6413dfd4fc49e44d163f9c464561a" kindref="member">IsBotRegistered</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>bot_name);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_bot_registerer_1a3fa1def6359a30e7c2a435606f553648" kindref="member">RegisterBot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>bot_name,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;BotFactory&gt;<sp/>factory);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>&quot;global&quot;<sp/>map<sp/>of<sp/>registrations<sp/>(i.e.<sp/>an<sp/>object<sp/>that<sp/>lives<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initialization<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>program).<sp/>Note<sp/>that<sp/>we<sp/>do<sp/>not<sp/>just<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>static<sp/>data<sp/>member,<sp/>as<sp/>we<sp/>want<sp/>the<sp/>map<sp/>to<sp/>be<sp/>initialized<sp/>before<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::unique_ptr&lt;BotFactory&gt;&gt;&amp;<sp/>factories()<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::unique_ptr&lt;BotFactory&gt;&gt;<sp/>impl;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>impl;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal">};</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>bot<sp/>is<sp/>registered,<sp/>false<sp/>otherwise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceopen__spiel_1a81c2cfd16725f2a50eff8e6db4383e0e" kindref="member">IsBotRegistered</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>bot_name);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>list<sp/>of<sp/>registered<sp/>bots&apos;<sp/>short<sp/>names.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="namespaceopen__spiel_1a28d19e65fe9bd9cd5849dbc620d12d5e" kindref="member">RegisteredBots</ref>();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>list<sp/>of<sp/>registered<sp/>bots&apos;<sp/>short<sp/>names<sp/>that<sp/>can<sp/>play<sp/>specified<sp/>game</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>a<sp/>given<sp/>player.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="namespaceopen__spiel_1ad1a5e5758d75373ec551327b963ca887" kindref="member">BotsThatCanPlayGame</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref>&amp;<sp/>game,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>player_id);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>list<sp/>of<sp/>registered<sp/>bots&apos;<sp/>short<sp/>names<sp/>that<sp/>can<sp/>play<sp/>specified<sp/>game</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>any<sp/>player.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="namespaceopen__spiel_1ad1a5e5758d75373ec551327b963ca887" kindref="member">BotsThatCanPlayGame</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref>&amp;<sp/>game);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>new<sp/>bot<sp/>from<sp/>the<sp/>specified<sp/>string,<sp/>which<sp/>is<sp/>the<sp/>short</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">//<sp/>name<sp/>plus<sp/>optional<sp/>parameters,<sp/>e.g.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;fixed_action_preference(action_list=0;1;2;3)&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">std::unique_ptr&lt;Bot&gt;<sp/><ref refid="namespaceopen__spiel_1a9f69c0d1c3937873613115448ef856e7" kindref="member">LoadBot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>bot_name,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>Game&gt;&amp;<sp/>game,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>player_id);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>new<sp/>bot<sp/>with<sp/>the<sp/>specified<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">std::unique_ptr&lt;Bot&gt;<sp/><ref refid="namespaceopen__spiel_1a9f69c0d1c3937873613115448ef856e7" kindref="member">LoadBot</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>bot_name,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>Game&gt;&amp;<sp/>game,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>player_id,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceopen__spiel_1ad7c4d931669b5e357cb5c7f84a6de094" kindref="member">GameParameters</ref>&amp;<sp/>bot_params);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>open_spiel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>OPEN_SPIEL_SPIEL_BOTS_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="open_spiel/spiel_bots.h"/>
  </compounddef>
</doxygen>
