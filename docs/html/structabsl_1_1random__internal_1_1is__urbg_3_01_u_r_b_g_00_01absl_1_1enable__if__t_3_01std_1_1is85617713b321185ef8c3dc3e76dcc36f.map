<map id="absl::random_internal::is_urbg&lt; URBG, absl::enable_if_t&lt; std::is_same&lt; typename URBG::result_type, typename std::decay&lt; decltype((URBG::min)())&gt;::type &gt;::value &gt;, absl::enable_if_t&lt; std::is_same&lt; typename URBG::result_type, typename std::decay&lt; decltype((URBG::max)())&gt;::type &gt;::value &gt;, absl::enable_if_t&lt; std::is_same&lt; typename URBG::result_type, typename std::decay&lt; decltype(std::declval&lt; URBG &gt;()())&gt;::type &gt;::value &gt; &gt;" name="absl::random_internal::is_urbg&lt; URBG, absl::enable_if_t&lt; std::is_same&lt; typename URBG::result_type, typename std::decay&lt; decltype((URBG::min)())&gt;::type &gt;::value &gt;, absl::enable_if_t&lt; std::is_same&lt; typename URBG::result_type, typename std::decay&lt; decltype((URBG::max)())&gt;::type &gt;::value &gt;, absl::enable_if_t&lt; std::is_same&lt; typename URBG::result_type, typename std::decay&lt; decltype(std::declval&lt; URBG &gt;()())&gt;::type &gt;::value &gt; &gt;">
<area shape="rect" id="node1" title=" " alt="" coords="5,80,312,297"/>
<area shape="rect" id="node2" title=" " alt="" coords="103,5,215,32"/>
</map>
