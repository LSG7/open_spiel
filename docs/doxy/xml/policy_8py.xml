<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="policy_8py" kind="file" language="Python">
    <compoundname>policy.py</compoundname>
    <innerclass refid="classopen__spiel_1_1python_1_1policy_1_1_policy" prot="public">open_spiel::python::policy::Policy</innerclass>
    <innerclass refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy" prot="public">open_spiel::python::policy::TabularPolicy</innerclass>
    <innerclass refid="classopen__spiel_1_1python_1_1policy_1_1_uniform_random_policy" prot="public">open_spiel::python::policy::UniformRandomPolicy</innerclass>
    <innerclass refid="classopen__spiel_1_1python_1_1policy_1_1_first_action_policy" prot="public">open_spiel::python::policy::FirstActionPolicy</innerclass>
    <innernamespace refid="namespaceopen__spiel">open_spiel</innernamespace>
    <innernamespace refid="namespaceopen__spiel_1_1python">open_spiel::python</innernamespace>
    <innernamespace refid="namespaceopen__spiel_1_1python_1_1policy">open_spiel::python::policy</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceopen__spiel_1_1python_1_1policy" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>2019<sp/>DeepMind<sp/>Technologies<sp/>Limited</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Lint<sp/>as<sp/>python3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;Representation<sp/>of<sp/>a<sp/>policy<sp/>for<sp/>a<sp/>game.</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral">This<sp/>is<sp/>a<sp/>standard<sp/>representation<sp/>for<sp/>passing<sp/>policies<sp/>into<sp/>algorithms,</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral">with<sp/>currently<sp/>the<sp/>following<sp/>implementations:</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"><sp/><sp/>TabularPolicy<sp/>-<sp/>an<sp/>explicit<sp/>policy<sp/>per<sp/>state,<sp/>stored<sp/>in<sp/>an<sp/>array</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>of<sp/>shape<sp/>`(num_states,<sp/>num_actions)`,<sp/>convenient<sp/>for<sp/>tabular<sp/>policy</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>solution<sp/>methods.</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/>UniformRandomPolicy<sp/>-<sp/>a<sp/>uniform<sp/>distribution<sp/>over<sp/>all<sp/>legal<sp/>actions<sp/>for</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>specified<sp/>player.<sp/>This<sp/>is<sp/>computed<sp/>as<sp/>needed,<sp/>so<sp/>can<sp/>be<sp/>used<sp/>for</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>games<sp/>where<sp/>a<sp/>tabular<sp/>policy<sp/>would<sp/>be<sp/>unfeasibly<sp/>large.</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral">The<sp/>main<sp/>way<sp/>of<sp/>using<sp/>a<sp/>policy<sp/>is<sp/>to<sp/>call<sp/>`action_probabilities(state,</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral">player_id`),<sp/>to<sp/>obtain<sp/>a<sp/>dict<sp/>of<sp/>{action:<sp/>probability}.<sp/>`TabularPolicy`</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral">objects<sp/>expose<sp/>a<sp/>lower-level<sp/>interface,<sp/>which<sp/>may<sp/>be<sp/>more<sp/>efficient<sp/>for</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral">some<sp/>use<sp/>cases.</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>itertools</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>typing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Iterable</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespaceopen__spiel_1_1python_1_1algorithms" kindref="compound">open_spiel.python.algorithms</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>get_all_states</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pyspiel</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="namespaceopen__spiel_1_1python_1_1policy_1a7830f1fa91a3081532b9e8a78f3c208b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceopen__spiel_1_1python_1_1policy_1a7830f1fa91a3081532b9e8a78f3c208b" kindref="member">child</ref>(state,<sp/>action):</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>a<sp/>child<sp/>state,<sp/>handling<sp/>the<sp/>simultaneous<sp/>node<sp/>case.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(action,<sp/>Iterable):</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>child_state<sp/>=<sp/>state.clone()</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>child_state.apply_actions(action)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>child_state</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.child(action)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="namespaceopen__spiel_1_1python_1_1policy_1a8afb3c75599f70588315528bbd7722f8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceopen__spiel_1_1python_1_1policy_1a8afb3c75599f70588315528bbd7722f8" kindref="member">joint_action_probabilities_aux</ref>(state,<sp/>policy):</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Auxiliary<sp/>function<sp/>for<sp/>joint_action_probabilities.</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>state:<sp/>a<sp/>game<sp/>state<sp/>at<sp/>a<sp/>simultaneous<sp/>decision<sp/>node.</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>policy:<sp/>policy<sp/>that<sp/>gives<sp/>the<sp/>probability<sp/>distribution<sp/>over<sp/>the<sp/>legal</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>actions<sp/>for<sp/>each<sp/>players.</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>actions_per_player:<sp/>list<sp/>of<sp/>list<sp/>of<sp/>actions<sp/>for<sp/>each<sp/>player</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>probs_per_player:<sp/>list<sp/>of<sp/>list<sp/>of<sp/>probabilities<sp/>do<sp/>the<sp/>corresponding<sp/>action</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/>in<sp/>actions_per_player<sp/>for<sp/>each<sp/>player.</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>state.is_simultaneous_node()</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>action_probs_per_player<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>policy.action_probabilities(state,<sp/>player)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>player<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(state.get_game().num_players())</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>]</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>actions_per_player<sp/>=<sp/>[pi.keys()<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>pi<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>action_probs_per_player]</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>probs_per_player<sp/>=<sp/>[pi.values()<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>pi<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>action_probs_per_player]</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>actions_per_player,<sp/>probs_per_player</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="namespaceopen__spiel_1_1python_1_1policy_1af1f959571dc79a9d3b346c66a116f0a6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceopen__spiel_1_1python_1_1policy_1af1f959571dc79a9d3b346c66a116f0a6" kindref="member">joint_action_probabilities</ref>(state,<sp/>policy):</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Yields<sp/>action,<sp/>probability<sp/>pairs<sp/>for<sp/>a<sp/>joint<sp/>policy<sp/>in<sp/>simultaneous<sp/>state.</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>state:<sp/>a<sp/>game<sp/>state<sp/>at<sp/>a<sp/>simultaneous<sp/>decision<sp/>node.</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>policy:<sp/>policy<sp/>that<sp/>gives<sp/>the<sp/>probability<sp/>distribution<sp/>over<sp/>the<sp/>legal</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>actions<sp/>for<sp/>each<sp/>players.</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/>Yields:</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>(action,<sp/>probability)<sp/>pairs.<sp/>An<sp/>action<sp/>is<sp/>a<sp/>tuple<sp/>of<sp/>individual</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>actions<sp/>for<sp/>each<sp/>player<sp/>of<sp/>the<sp/>game.<sp/>The<sp/>probability<sp/>is<sp/>a<sp/>single<sp/>joint</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>probability<sp/>(product<sp/>of<sp/>all<sp/>the<sp/>individual<sp/>probabilities).</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>actions_per_player,<sp/>probs_per_player<sp/>=<sp/><ref refid="namespaceopen__spiel_1_1python_1_1policy_1a8afb3c75599f70588315528bbd7722f8" kindref="member">joint_action_probabilities_aux</ref>(</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state,<sp/>policy)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>actions,<sp/>probs<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itertools.product(*actions_per_player),</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itertools.product(*probs_per_player)):</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>actions,<sp/>np.prod(probs)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classopen__spiel_1_1python_1_1policy_1_1_policy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1policy_1_1_policy" kindref="compound">Policy</ref>:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Base<sp/>class<sp/>for<sp/>policies.</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/>A<sp/>policy<sp/>is<sp/>something<sp/>that<sp/>returns<sp/>a<sp/>distribution<sp/>over<sp/>possible<sp/>actions</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/>given<sp/>a<sp/>state<sp/>of<sp/>the<sp/>world.</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/>Attributes:</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>game:<sp/>the<sp/>game<sp/>for<sp/>which<sp/>this<sp/>policy<sp/>applies</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>player_ids:<sp/>list<sp/>of<sp/>player<sp/>ids<sp/>for<sp/>which<sp/>this<sp/>policy<sp/>applies;<sp/>each<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>interval<sp/>[0..game.num_players()-1].</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classopen__spiel_1_1python_1_1policy_1_1_policy_1a9bb16da41a11941090e72d076d48964d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1policy_1_1_policy_1a9bb16da41a11941090e72d076d48964d" kindref="member">__init__</ref>(self,<sp/>game,<sp/>player_ids):</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Initializes<sp/>a<sp/>policy.</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>game:<sp/>the<sp/>game<sp/>for<sp/>which<sp/>this<sp/>policy<sp/>applies</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>player_ids:<sp/>list<sp/>of<sp/>player<sp/>ids<sp/>for<sp/>which<sp/>this<sp/>policy<sp/>applies;<sp/>each<sp/>should</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>in<sp/>the<sp/>range<sp/>0..game.num_players()-1.</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="classopen__spiel_1_1python_1_1policy_1_1_policy_1ae972849a1b0e68c8201c45dd6d27f1bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_policy_1ae972849a1b0e68c8201c45dd6d27f1bd" kindref="member">game</ref><sp/>=<sp/>game</highlight></codeline>
<codeline lineno="118" refid="classopen__spiel_1_1python_1_1policy_1_1_policy_1ab8a5df64ce79c1957078539d1ae40a44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_policy_1ab8a5df64ce79c1957078539d1ae40a44" kindref="member">player_ids</ref><sp/>=<sp/>player_ids</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classopen__spiel_1_1python_1_1policy_1_1_policy_1a061fd4bbafb4f18987d93bdbc6a0889b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1policy_1_1_policy_1a061fd4bbafb4f18987d93bdbc6a0889b" kindref="member">action_probabilities</ref>(self,<sp/>state,<sp/>player_id=None):</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>a<sp/>dictionary<sp/>{action:<sp/>prob}<sp/>for<sp/>all<sp/>legal<sp/>actions.</highlight></codeline>
<codeline lineno="122"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>IMPORTANT:<sp/>We<sp/>assume<sp/>the<sp/>following<sp/>properties<sp/>hold:</highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>All<sp/>probabilities<sp/>are<sp/>&gt;=0<sp/>and<sp/>sum<sp/>to<sp/>1</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-<sp/>TLDR:<sp/>Policy<sp/>implementations<sp/>should<sp/>list<sp/>the<sp/>(action,<sp/>prob)<sp/>for<sp/>all<sp/>legal</highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>actions,<sp/>but<sp/>algorithms<sp/>should<sp/>not<sp/>rely<sp/>on<sp/>this<sp/>(yet).</highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>Details:<sp/>Before<sp/>May<sp/>2020,<sp/>only<sp/>legal<sp/>actions<sp/>were<sp/>present<sp/>in<sp/>the<sp/>mapping,</highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>but<sp/>it<sp/>did<sp/>not<sp/>have<sp/>to<sp/>be<sp/>exhaustive:<sp/>missing<sp/>actions<sp/>were<sp/>considered<sp/>to</highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>associated<sp/>to<sp/>a<sp/>zero<sp/>probability.</highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>example,<sp/>a<sp/>deterministic<sp/>state-poliy<sp/>was<sp/>previously<sp/>{action:<sp/>1.0}.</highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>Given<sp/>this<sp/>change<sp/>of<sp/>convention<sp/>is<sp/>new<sp/>and<sp/>hard<sp/>to<sp/>enforce,<sp/>algorithms</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>should<sp/>not<sp/>rely<sp/>on<sp/>the<sp/>fact<sp/>that<sp/>all<sp/>legal<sp/>actions<sp/>should<sp/>be<sp/>present.</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>state:<sp/>A<sp/>`pyspiel.State`<sp/>object.</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>player_id:<sp/>Optional,<sp/>the<sp/>player<sp/>id<sp/>for<sp/>whom<sp/>we<sp/>want<sp/>an<sp/>action.<sp/>Optional</highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unless<sp/>this<sp/>is<sp/>a<sp/>simultaneous<sp/>state<sp/>at<sp/>which<sp/>multiple<sp/>players<sp/>can<sp/>act.</highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>`dict`<sp/>of<sp/>`{action:<sp/>probability}`<sp/>for<sp/>the<sp/>specified<sp/>player<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>supplied<sp/>state.</highlight></codeline>
<codeline lineno="142"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError()</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="classopen__spiel_1_1python_1_1policy_1_1_policy_1a5755c0c1868c78cba8d68773d3d32831" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1policy_1_1_policy_1a5755c0c1868c78cba8d68773d3d32831" kindref="member">__call__</ref>(self,<sp/>state,<sp/>player_id=None):</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Turns<sp/>the<sp/>policy<sp/>into<sp/>a<sp/>callable.</highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>state:<sp/>The<sp/>current<sp/>state<sp/>of<sp/>the<sp/>game.</highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>player_id:<sp/>Optional,<sp/>the<sp/>player<sp/>id<sp/>for<sp/>whom<sp/>we<sp/>want<sp/>an<sp/>action.<sp/>Optional</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unless<sp/>this<sp/>is<sp/>a<sp/>simultaneous<sp/>state<sp/>at<sp/>which<sp/>multiple<sp/>players<sp/>can<sp/>act.</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>Dictionary<sp/>of<sp/>action:<sp/>probability.</highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_policy_1a061fd4bbafb4f18987d93bdbc6a0889b" kindref="member">action_probabilities</ref>(state,<sp/>player_id)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="classopen__spiel_1_1python_1_1policy_1_1_policy_1a2761954d5f010b490e108c0bedf4e089" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1policy_1_1_policy_1a2761954d5f010b490e108c0bedf4e089" kindref="member">to_tabular</ref>(self,<sp/>states=None):</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>a<sp/>new<sp/>`TabularPolicy`<sp/>equivalent<sp/>to<sp/>this<sp/>policy.</highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>states:<sp/>States<sp/>of<sp/>the<sp/>game<sp/>that<sp/>will<sp/>be<sp/>used<sp/>for<sp/>the<sp/>tabular<sp/>policy.<sp/>If</highlight></codeline>
<codeline lineno="163"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>None,<sp/>then<sp/>get_tabular_policy_states()<sp/>method<sp/>will<sp/>be<sp/>used<sp/>to<sp/>generate</highlight></codeline>
<codeline lineno="164"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>them.</highlight></codeline>
<codeline lineno="165"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="166"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="167"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>TabularPolicy.</highlight></codeline>
<codeline lineno="168"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>states<sp/>=<sp/>states<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/><ref refid="namespaceopen__spiel_1_1python_1_1policy_1af790d4355be9443cf04c9a1a206149cd" kindref="member">get_tabular_policy_states</ref>(self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_policy_1ae972849a1b0e68c8201c45dd6d27f1bd" kindref="member">game</ref>)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>tabular_policy<sp/>=<sp/><ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy" kindref="compound">TabularPolicy</ref>(self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_policy_1ae972849a1b0e68c8201c45dd6d27f1bd" kindref="member">game</ref>,<sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_policy_1ab8a5df64ce79c1957078539d1ae40a44" kindref="member">player_ids</ref>,<sp/>states=states)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>index,<sp/>state<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(tabular_policy.states):</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tabular_policy.action_probability_array[index,<sp/>:]<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>action,<sp/>probability<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_policy_1a061fd4bbafb4f18987d93bdbc6a0889b" kindref="member">action_probabilities</ref>(state).items():</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tabular_policy.action_probability_array[index,<sp/>action]<sp/>=<sp/>probability</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tabular_policy</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy" kindref="compound">TabularPolicy</ref>(<ref refid="classopen__spiel_1_1python_1_1policy_1_1_policy" kindref="compound">Policy</ref>):</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Policy<sp/>implementation<sp/>where<sp/>the<sp/>policy<sp/>is<sp/>in<sp/>explicit<sp/>tabular<sp/>form.</highlight></codeline>
<codeline lineno="180"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="181"><highlight class="stringliteral"><sp/><sp/>In<sp/>addition<sp/>to<sp/>implementing<sp/>the<sp/>`Policy`<sp/>interface,<sp/>this<sp/>class<sp/>exposes</highlight></codeline>
<codeline lineno="182"><highlight class="stringliteral"><sp/><sp/>details<sp/>of<sp/>the<sp/>policy<sp/>representation<sp/>for<sp/>easy<sp/>manipulation.</highlight></codeline>
<codeline lineno="183"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="184"><highlight class="stringliteral"><sp/><sp/>The<sp/>states<sp/>are<sp/>guaranteed<sp/>to<sp/>be<sp/>grouped<sp/>by<sp/>player,<sp/>which<sp/>can<sp/>simplify</highlight></codeline>
<codeline lineno="185"><highlight class="stringliteral"><sp/><sp/>code<sp/>for<sp/>users<sp/>of<sp/>this<sp/>class,<sp/>i.e.<sp/>`action_probability_array`<sp/>contains</highlight></codeline>
<codeline lineno="186"><highlight class="stringliteral"><sp/><sp/>states<sp/>for<sp/>player<sp/>0<sp/>first,<sp/>followed<sp/>by<sp/>states<sp/>for<sp/>player<sp/>1,<sp/>etc.</highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral"><sp/><sp/>The<sp/>policy<sp/>uses<sp/>`state.information_state_string`<sp/>as<sp/>the<sp/>keys<sp/>if<sp/>available,</highlight></codeline>
<codeline lineno="189"><highlight class="stringliteral"><sp/><sp/>otherwise<sp/>`state.observation_string`.</highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="191"><highlight class="stringliteral"><sp/><sp/>Usages:</highlight></codeline>
<codeline lineno="192"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"><sp/><sp/>-<sp/>Set<sp/>`policy(info_state,<sp/>action)`:</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"><sp/><sp/>```</highlight></codeline>
<codeline lineno="195"><highlight class="stringliteral"><sp/><sp/>tabular_policy<sp/>=<sp/>TabularPolicy(game)</highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"><sp/><sp/>info_state_str<sp/>=<sp/>state.information_state_string(&lt;optional<sp/>player&gt;)</highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/>state_policy<sp/>=<sp/>tabular_policy.policy_for_key(info_state_str)</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"><sp/><sp/>state_policy[action]<sp/>=<sp/>&lt;value&gt;</highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"><sp/><sp/>```</highlight></codeline>
<codeline lineno="200"><highlight class="stringliteral"><sp/><sp/>-<sp/>Set<sp/>`policy(info_state)`:</highlight></codeline>
<codeline lineno="201"><highlight class="stringliteral"><sp/><sp/>```</highlight></codeline>
<codeline lineno="202"><highlight class="stringliteral"><sp/><sp/>tabular_policy<sp/>=<sp/>TabularPolicy(game)</highlight></codeline>
<codeline lineno="203"><highlight class="stringliteral"><sp/><sp/>info_state_str<sp/>=<sp/>state.information_state_string(&lt;optional<sp/>player&gt;)</highlight></codeline>
<codeline lineno="204"><highlight class="stringliteral"><sp/><sp/>state_policy<sp/>=<sp/>tabular_policy.policy_for_key(info_state_str)</highlight></codeline>
<codeline lineno="205"><highlight class="stringliteral"><sp/><sp/>state_policy[:]<sp/>=<sp/>&lt;list<sp/>or<sp/>numpy.array&gt;</highlight></codeline>
<codeline lineno="206"><highlight class="stringliteral"><sp/><sp/>```</highlight></codeline>
<codeline lineno="207"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="208"><highlight class="stringliteral"><sp/><sp/>Attributes:</highlight></codeline>
<codeline lineno="209"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>action_probability_array:<sp/>array<sp/>of<sp/>shape<sp/>`(num_states,<sp/>num_actions)`,<sp/>where</highlight></codeline>
<codeline lineno="210"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>`action_probability_array[s,<sp/>a]`<sp/>is<sp/>the<sp/>probability<sp/>of<sp/>choosing<sp/>action<sp/>`a`</highlight></codeline>
<codeline lineno="211"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>at<sp/>state<sp/>`s`.</highlight></codeline>
<codeline lineno="212"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>state_lookup:<sp/>`dict`<sp/>mapping<sp/>state<sp/>key<sp/>string<sp/>to<sp/>index<sp/>into<sp/>the</highlight></codeline>
<codeline lineno="213"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>`tabular_policy`<sp/>array.<sp/>If<sp/>information<sp/>state<sp/>strings<sp/>overlap,<sp/>e.g.<sp/>for</highlight></codeline>
<codeline lineno="214"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>different<sp/>players<sp/>or<sp/>if<sp/>the<sp/>information<sp/>state<sp/>string<sp/>has<sp/>imperfect<sp/>recall,</highlight></codeline>
<codeline lineno="215"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>then<sp/>those<sp/>states<sp/>will<sp/>be<sp/>mapped<sp/>to<sp/>the<sp/>same<sp/>policy.</highlight></codeline>
<codeline lineno="216"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>legal_actions_mask:<sp/>array<sp/>of<sp/>shape<sp/>`(num_states,<sp/>num_actions)`,<sp/>each<sp/>row</highlight></codeline>
<codeline lineno="217"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>representing<sp/>which<sp/>of<sp/>the<sp/>possible<sp/>actions<sp/>in<sp/>the<sp/>game<sp/>are<sp/>valid<sp/>in<sp/>this</highlight></codeline>
<codeline lineno="218"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>particular<sp/>state,<sp/>containing<sp/>1<sp/>for<sp/>valid<sp/>actions,<sp/>0<sp/>for<sp/>invalid<sp/>actions.</highlight></codeline>
<codeline lineno="219"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>states_per_player:<sp/>A<sp/>`list`<sp/>per<sp/>player<sp/>of<sp/>the<sp/>state<sp/>key<sp/>strings<sp/>at<sp/>which</highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>they<sp/>have<sp/>a<sp/>decision<sp/>to<sp/>make.</highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>states:<sp/>A<sp/>`list`<sp/>of<sp/>the<sp/>states<sp/>as<sp/>ordered<sp/>in<sp/>the<sp/>`action_probability_array`.</highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>state_in:<sp/>array<sp/>of<sp/>shape<sp/>`(num_states,<sp/>state_vector_size)`<sp/>containing<sp/>the</highlight></codeline>
<codeline lineno="223"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>normalised<sp/>vector<sp/>representation<sp/>of<sp/>each<sp/>information<sp/>state.<sp/>Populated<sp/>only</highlight></codeline>
<codeline lineno="224"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>games<sp/>which<sp/>support<sp/>information_state_tensor(),<sp/>and<sp/>is<sp/>None<sp/>otherwise.</highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>game_type:<sp/>The<sp/>game<sp/>attributes<sp/>as<sp/>returned<sp/>by<sp/>`Game::GetType`;<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>determine<sp/>whether<sp/>to<sp/>use<sp/>information<sp/>state<sp/>or<sp/>observation<sp/>as<sp/>the<sp/>key<sp/>in</highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>tabular<sp/>policy.</highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a695190f0d6616aded8ca9f0e5ac43975" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a695190f0d6616aded8ca9f0e5ac43975" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>game,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>players=None,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_string=lambda<sp/>s:<sp/>s.history_str(),</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>states=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Initializes<sp/>a<sp/>uniform<sp/>random<sp/>policy<sp/>for<sp/>all<sp/>players<sp/>in<sp/>the<sp/>game.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>players<sp/>=<sp/>sorted(players<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>range(game.num_players()))</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>super().<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a695190f0d6616aded8ca9f0e5ac43975" kindref="member">__init__</ref>(game,<sp/>players)</highlight></codeline>
<codeline lineno="238" refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a7433443c87f2dae927feaf6c10f543ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a7433443c87f2dae927feaf6c10f543ef" kindref="member">game_type</ref><sp/>=<sp/>game.get_type()</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>all<sp/>states<sp/>in<sp/>the<sp/>game<sp/>at<sp/>which<sp/>players<sp/>have<sp/>to<sp/>make<sp/>decisions<sp/>unless</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>they<sp/>are<sp/>explicitly<sp/>specified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>states<sp/>=<sp/>states<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>get_all_states.get_all_states(</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>game,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depth_limit=-1,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include_terminals=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include_chance_states=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>include_mean_field_states=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_string=to_string)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Assemble<sp/>legal<sp/>actions<sp/>for<sp/>every<sp/>valid<sp/>(state,<sp/>player)<sp/>pair,<sp/>keyed<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>information<sp/>state<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1af28c5c3f37942fc6bd36eec2392eb00a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1af28c5c3f37942fc6bd36eec2392eb00a" kindref="member">state_lookup</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="253" refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1acef7e435b7dfe13ce47650d3dcf0863f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1acef7e435b7dfe13ce47650d3dcf0863f" kindref="member">states_per_player</ref><sp/>=<sp/>[[]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(game.num_players())]</highlight></codeline>
<codeline lineno="254" refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a6583c1975f39a0e0f16b85c2e9424f0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a6583c1975f39a0e0f16b85c2e9424f0f" kindref="member">states</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>legal_actions_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>state_in_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>player<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>players:</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>States<sp/>are<sp/>ordered<sp/>by<sp/>their<sp/>history.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_,<sp/>state<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sorted(states.items(),<sp/>key=</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>pair:<sp/>pair[0]):</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>state.is_simultaneous_node()<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>player<sp/>==<sp/>state.current_player():</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legal_actions<sp/>=<sp/>state.legal_actions_mask(player)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>any(legal_actions):</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1aea44bbf0e18fb1b9c06c5798c5756d23" kindref="member">_state_key</ref>(state,<sp/>player)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>key<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1af28c5c3f37942fc6bd36eec2392eb00a" kindref="member">state_lookup</ref>:</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_index<sp/>=<sp/>len(legal_actions_list)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1af28c5c3f37942fc6bd36eec2392eb00a" kindref="member">state_lookup</ref>[key]<sp/>=<sp/>state_index</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legal_actions_list.append(legal_actions)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1acef7e435b7dfe13ce47650d3dcf0863f" kindref="member">states_per_player</ref>[player].append(key)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a6583c1975f39a0e0f16b85c2e9424f0f" kindref="member">states</ref>.append(state)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a7433443c87f2dae927feaf6c10f543ef" kindref="member">game_type</ref>.provides_information_state_tensor:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_in_list.append(state.information_state_tensor(player))</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a7433443c87f2dae927feaf6c10f543ef" kindref="member">game_type</ref>.provides_observation_tensor:</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_in_list.append(state.observation_tensor(player))</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Put<sp/>legal<sp/>action<sp/>masks<sp/>in<sp/>a<sp/>numpy<sp/>array<sp/>and<sp/>create<sp/>the<sp/>uniform<sp/>random</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>policy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1afe931b977ae36e57b05168e4c2e9df8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1afe931b977ae36e57b05168e4c2e9df8d" kindref="member">state_in</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>state_in_list:</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1afe931b977ae36e57b05168e4c2e9df8d" kindref="member">state_in</ref><sp/>=<sp/>np.array(state_in_list)</highlight></codeline>
<codeline lineno="280" refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1aed01c57f8bc6b066be30733d299e58c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1aed01c57f8bc6b066be30733d299e58c9" kindref="member">legal_actions_mask</ref><sp/>=<sp/>np.array(legal_actions_list)</highlight></codeline>
<codeline lineno="281" refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a02c4052676c6287badc59cc38c3dbb6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a02c4052676c6287badc59cc38c3dbb6d" kindref="member">action_probability_array</ref><sp/>=<sp/>(</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1aed01c57f8bc6b066be30733d299e58c9" kindref="member">legal_actions_mask</ref><sp/>/</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.sum(self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1aed01c57f8bc6b066be30733d299e58c9" kindref="member">legal_actions_mask</ref>,<sp/>axis=-1,<sp/>keepdims=</highlight><highlight class="keyword">True</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1aea44bbf0e18fb1b9c06c5798c5756d23" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1aea44bbf0e18fb1b9c06c5798c5756d23" kindref="member">_state_key</ref>(self,<sp/>state,<sp/>player):</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>the<sp/>key<sp/>to<sp/>use<sp/>to<sp/>look<sp/>up<sp/>this<sp/>(state,<sp/>player)<sp/>pair.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a7433443c87f2dae927feaf6c10f543ef" kindref="member">game_type</ref>.provides_information_state_string:</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>player<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.information_state_string()</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.information_state_string(player)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a7433443c87f2dae927feaf6c10f543ef" kindref="member">game_type</ref>.provides_observation_string:</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>player<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.observation_string()</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state.observation_string(player)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str(state)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1af3f2eb0efe6093e5811aaf27fc867b5f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1af3f2eb0efe6093e5811aaf27fc867b5f" kindref="member">action_probabilities</ref>(self,<sp/>state,<sp/>player_id=None):</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>an<sp/>{action:<sp/>probability}<sp/>dict,<sp/>covering<sp/>all<sp/>legal<sp/>actions.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>legal_actions<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.legal_actions()</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>player_id<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>state.legal_actions(player_id))</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>legal_actions:</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{0:<sp/>1.0}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>probability<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a98e119e1e122d857dfacaf43bc7cafbb" kindref="member">policy_for_key</ref>(self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1aea44bbf0e18fb1b9c06c5798c5756d23" kindref="member">_state_key</ref>(state,<sp/>player_id))</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{action:<sp/>probability[action]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>action<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>legal_actions}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a615ce03eee6b72b04b79e8ecb5d075a2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a615ce03eee6b72b04b79e8ecb5d075a2" kindref="member">state_index</ref>(self,<sp/>state):</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>the<sp/>index<sp/>in<sp/>the<sp/>TabularPolicy<sp/>associated<sp/>to<sp/>`state`.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1af28c5c3f37942fc6bd36eec2392eb00a" kindref="member">state_lookup</ref>[self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1aea44bbf0e18fb1b9c06c5798c5756d23" kindref="member">_state_key</ref>(state,<sp/>state.current_player())]</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a98e119e1e122d857dfacaf43bc7cafbb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a98e119e1e122d857dfacaf43bc7cafbb" kindref="member">policy_for_key</ref>(self,<sp/>key):</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>the<sp/>policy<sp/>as<sp/>a<sp/>vector<sp/>given<sp/>a<sp/>state<sp/>key<sp/>string.</highlight></codeline>
<codeline lineno="313"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="314"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="315"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>key:<sp/>A<sp/>key<sp/>for<sp/>the<sp/>specified<sp/>state.</highlight></codeline>
<codeline lineno="316"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="317"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="318"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>vector<sp/>of<sp/>probabilities,<sp/>one<sp/>per<sp/>action.<sp/>This<sp/>is<sp/>a<sp/>slice<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="319"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>backing<sp/>policy<sp/>array,<sp/>and<sp/>so<sp/>slice<sp/>or<sp/>index<sp/>assignment<sp/>will<sp/>update<sp/>the</highlight></codeline>
<codeline lineno="320"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>policy.<sp/>For<sp/>example:</highlight></codeline>
<codeline lineno="321"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>```</highlight></codeline>
<codeline lineno="322"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>tabular_policy.policy_for_key(s)[:]<sp/>=<sp/>[0.1,<sp/>0.5,<sp/>0.4]</highlight></codeline>
<codeline lineno="323"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>```</highlight></codeline>
<codeline lineno="324"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a02c4052676c6287badc59cc38c3dbb6d" kindref="member">action_probability_array</ref>[self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1af28c5c3f37942fc6bd36eec2392eb00a" kindref="member">state_lookup</ref>[key]]</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1ab7f39cc6ef2ec5f693390b85073b90d9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1ab7f39cc6ef2ec5f693390b85073b90d9" kindref="member">to_dict</ref>(self):</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>a<sp/>single<sp/>dictionary<sp/>representing<sp/>the<sp/>tabular<sp/>policy.</highlight></codeline>
<codeline lineno="329"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="330"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="331"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>dictionary<sp/>of<sp/>string<sp/>keys<sp/>to<sp/>lists<sp/>of<sp/>(action,<sp/>prob)<sp/>pairs.</highlight></codeline>
<codeline lineno="332"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>policy_dict<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>num_actions<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a02c4052676c6287badc59cc38c3dbb6d" kindref="member">action_probability_array</ref>.shape[1]</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>infostate_key,<sp/>index<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1af28c5c3f37942fc6bd36eec2392eb00a" kindref="member">state_lookup</ref>.items():</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>probs<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a02c4052676c6287badc59cc38c3dbb6d" kindref="member">action_probability_array</ref>[index]</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>actions_and_probs<sp/>=<sp/>[(a,<sp/>probs[a])<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(num_actions)]</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>policy_dict[infostate_key]<sp/>=<sp/>actions_and_probs</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>policy_dict</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1ae1b612d442f7a45eb1cee3bcdf80e38d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1ae1b612d442f7a45eb1cee3bcdf80e38d" kindref="member">__copy__</ref>(self,<sp/>copy_action_probability_array=True):</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>a<sp/>shallow<sp/>copy<sp/>of<sp/>self.</highlight></codeline>
<codeline lineno="343"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="344"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Most<sp/>class<sp/>attributes<sp/>will<sp/>be<sp/>pointers<sp/>to<sp/>the<sp/>copied<sp/>object&apos;s<sp/>attributes,</highlight></codeline>
<codeline lineno="345"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>and<sp/>therefore<sp/>altering<sp/>them<sp/>could<sp/>lead<sp/>to<sp/>unexpected<sp/>behavioural<sp/>changes.</highlight></codeline>
<codeline lineno="346"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Only<sp/>action_probability_array<sp/>is<sp/>expected<sp/>to<sp/>be<sp/>modified.</highlight></codeline>
<codeline lineno="347"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="348"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="349"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>copy_action_probability_array:<sp/>Whether<sp/>to<sp/>also<sp/>include</highlight></codeline>
<codeline lineno="350"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action_probability_array<sp/>in<sp/>the<sp/>copy<sp/>operation.</highlight></codeline>
<codeline lineno="351"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="352"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="353"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>Copy.</highlight></codeline>
<codeline lineno="354"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>TabularPolicy.__new__(TabularPolicy)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>result.state_lookup<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1af28c5c3f37942fc6bd36eec2392eb00a" kindref="member">state_lookup</ref></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>result.game_type<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a7433443c87f2dae927feaf6c10f543ef" kindref="member">game_type</ref></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>result.legal_actions_mask<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1aed01c57f8bc6b066be30733d299e58c9" kindref="member">legal_actions_mask</ref></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>result.state_in<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1afe931b977ae36e57b05168e4c2e9df8d" kindref="member">state_in</ref></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>result.state_lookup<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1af28c5c3f37942fc6bd36eec2392eb00a" kindref="member">state_lookup</ref></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>result.states_per_player<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1acef7e435b7dfe13ce47650d3dcf0863f" kindref="member">states_per_player</ref></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>result.states<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a6583c1975f39a0e0f16b85c2e9424f0f" kindref="member">states</ref></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>result.game<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_policy_1ae972849a1b0e68c8201c45dd6d27f1bd" kindref="member">game</ref></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>result.player_ids<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_policy_1ab8a5df64ce79c1957078539d1ae40a44" kindref="member">player_ids</ref></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>copy_action_probability_array:</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.action_probability_array<sp/>=<sp/>np.copy(self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a02c4052676c6287badc59cc38c3dbb6d" kindref="member">action_probability_array</ref>)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1af4ed647597439779f7d70f562b7cee05" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1af4ed647597439779f7d70f562b7cee05" kindref="member">copy_with_noise</ref>(self,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha=0.0,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beta=0.0,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>random_state=np.random.RandomState()):</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>policy<sp/>perturbed<sp/>with<sp/>noise.</highlight></codeline>
<codeline lineno="374"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="375"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Generates<sp/>a<sp/>new<sp/>random<sp/>distribution<sp/>using<sp/>a<sp/>softmax<sp/>on<sp/>normal<sp/>random</highlight></codeline>
<codeline lineno="376"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>variables<sp/>with<sp/>temperature<sp/>beta,<sp/>and<sp/>mixes<sp/>it<sp/>with<sp/>the<sp/>old<sp/>distribution</highlight></codeline>
<codeline lineno="377"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>using<sp/>1-alpha<sp/>*<sp/>old_distribution<sp/>+<sp/>alpha<sp/>*<sp/>random_distribution.</highlight></codeline>
<codeline lineno="378"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="379"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>alpha:<sp/>Parameter<sp/>characterizing<sp/>the<sp/>mixture<sp/>amount<sp/>between<sp/>new<sp/>and<sp/>old</highlight></codeline>
<codeline lineno="380"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distributions.<sp/>Between<sp/>0<sp/>and<sp/>1.</highlight></codeline>
<codeline lineno="381"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>0:<sp/>keep<sp/>old<sp/>table.</highlight></codeline>
<codeline lineno="382"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>1:<sp/>keep<sp/>random<sp/>table.</highlight></codeline>
<codeline lineno="383"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>beta:<sp/>Temperature<sp/>of<sp/>the<sp/>softmax.<sp/>Makes<sp/>for<sp/>more<sp/>extreme<sp/>policies.</highlight></codeline>
<codeline lineno="384"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>random_state:<sp/>A<sp/>numpy<sp/>`RandomState`<sp/>object.<sp/>If<sp/>not<sp/>provided,<sp/>a<sp/>shared</highlight></codeline>
<codeline lineno="385"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>random<sp/>state<sp/>will<sp/>be<sp/>used.</highlight></codeline>
<codeline lineno="386"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="387"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="388"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>Perturbed<sp/>copy.</highlight></codeline>
<codeline lineno="389"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>copied_instance<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1ae1b612d442f7a45eb1cee3bcdf80e38d" kindref="member">__copy__</ref>(</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>probability_array<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1a02c4052676c6287badc59cc38c3dbb6d" kindref="member">action_probability_array</ref></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>noise_mask<sp/>=<sp/>random_state.normal(size=probability_array.shape)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>noise_mask<sp/>=<sp/>np.exp(beta<sp/>*<sp/>noise_mask)<sp/>*<sp/>self.<ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy_1aed01c57f8bc6b066be30733d299e58c9" kindref="member">legal_actions_mask</ref></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>noise_mask<sp/>=<sp/>noise_mask<sp/>/<sp/>(np.sum(noise_mask,<sp/>axis=1).reshape(-1,<sp/>1))</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>copied_instance.action_probability_array<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>-<sp/>alpha)<sp/>*<sp/>probability_array<sp/>+<sp/>alpha<sp/>*<sp/>noise_mask</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>copied_instance</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="classopen__spiel_1_1python_1_1policy_1_1_uniform_random_policy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1policy_1_1_uniform_random_policy" kindref="compound">UniformRandomPolicy</ref>(<ref refid="classopen__spiel_1_1python_1_1policy_1_1_policy" kindref="compound">Policy</ref>):</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Policy<sp/>where<sp/>the<sp/>action<sp/>distribution<sp/>is<sp/>uniform<sp/>over<sp/>all<sp/>legal<sp/>actions.</highlight></codeline>
<codeline lineno="402"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="403"><highlight class="stringliteral"><sp/><sp/>This<sp/>is<sp/>computed<sp/>as<sp/>needed,<sp/>so<sp/>can<sp/>be<sp/>used<sp/>for<sp/>games<sp/>where<sp/>a<sp/>tabular<sp/>policy</highlight></codeline>
<codeline lineno="404"><highlight class="stringliteral"><sp/><sp/>would<sp/>be<sp/>unfeasibly<sp/>large,<sp/>but<sp/>incurs<sp/>a<sp/>legal<sp/>action<sp/>computation<sp/>every<sp/>time.</highlight></codeline>
<codeline lineno="405"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="classopen__spiel_1_1python_1_1policy_1_1_uniform_random_policy_1a77e8d3d1f75e334508755e2d33e2b832" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1policy_1_1_uniform_random_policy_1a77e8d3d1f75e334508755e2d33e2b832" kindref="member">__init__</ref>(self,<sp/>game):</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Initializes<sp/>a<sp/>uniform<sp/>random<sp/>policy<sp/>for<sp/>all<sp/>players<sp/>in<sp/>the<sp/>game.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>all_players<sp/>=<sp/>list(range(game.num_players()))</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>super().<ref refid="classopen__spiel_1_1python_1_1policy_1_1_uniform_random_policy_1a77e8d3d1f75e334508755e2d33e2b832" kindref="member">__init__</ref>(game,<sp/>all_players)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412" refid="classopen__spiel_1_1python_1_1policy_1_1_uniform_random_policy_1ac6060f389cd305bf01a6b74309915fba" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1policy_1_1_uniform_random_policy_1ac6060f389cd305bf01a6b74309915fba" kindref="member">action_probabilities</ref>(self,<sp/>state,<sp/>player_id=None):</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>a<sp/>uniform<sp/>random<sp/>policy<sp/>for<sp/>a<sp/>player<sp/>in<sp/>a<sp/>state.</highlight></codeline>
<codeline lineno="414"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="415"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="416"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>state:<sp/>A<sp/>`pyspiel.State`<sp/>object.</highlight></codeline>
<codeline lineno="417"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>player_id:<sp/>Optional,<sp/>the<sp/>player<sp/>id<sp/>for<sp/>which<sp/>we<sp/>want<sp/>an<sp/>action.<sp/>Optional</highlight></codeline>
<codeline lineno="418"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unless<sp/>this<sp/>is<sp/>a<sp/>simultaneous<sp/>state<sp/>at<sp/>which<sp/>multiple<sp/>players<sp/>can<sp/>act.</highlight></codeline>
<codeline lineno="419"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="420"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="421"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>`dict`<sp/>of<sp/>`{action:<sp/>probability}`<sp/>for<sp/>the<sp/>specified<sp/>player<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="422"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>supplied<sp/>state.<sp/>This<sp/>will<sp/>contain<sp/>all<sp/>legal<sp/>actions,<sp/>each<sp/>with<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="423"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>probability,<sp/>equal<sp/>to<sp/>1<sp/>/<sp/>num_legal_actions.</highlight></codeline>
<codeline lineno="424"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>legal_actions<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.legal_actions()</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>player_id<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>state.legal_actions(player_id))</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>legal_actions:</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{0:<sp/>1.0}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>probability<sp/>=<sp/>1<sp/>/<sp/>len(legal_actions)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{action:<sp/>probability<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>action<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>legal_actions}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="classopen__spiel_1_1python_1_1policy_1_1_first_action_policy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1policy_1_1_first_action_policy" kindref="compound">FirstActionPolicy</ref>(<ref refid="classopen__spiel_1_1python_1_1policy_1_1_policy" kindref="compound">Policy</ref>):</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;A<sp/>policy<sp/>that<sp/>always<sp/>takes<sp/>the<sp/>lowest-numbered<sp/>legal<sp/>action.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437" refid="classopen__spiel_1_1python_1_1policy_1_1_first_action_policy_1ab2b57d58876b4a96be3240e50e944c86" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1policy_1_1_first_action_policy_1ab2b57d58876b4a96be3240e50e944c86" kindref="member">__init__</ref>(self,<sp/>game):</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>all_players<sp/>=<sp/>list(range(game.num_players()))</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>super().<ref refid="classopen__spiel_1_1python_1_1policy_1_1_first_action_policy_1ab2b57d58876b4a96be3240e50e944c86" kindref="member">__init__</ref>(game,<sp/>all_players)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="classopen__spiel_1_1python_1_1policy_1_1_first_action_policy_1a7083d5df2dd21560210f2d78ddd80ea5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1policy_1_1_first_action_policy_1a7083d5df2dd21560210f2d78ddd80ea5" kindref="member">action_probabilities</ref>(self,<sp/>state,<sp/>player_id=None):</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>legal_actions<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.legal_actions()</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>player_id<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>state.legal_actions(player_id))</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>legal_actions:</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{0:<sp/>1.0}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>min_action<sp/>=<sp/>min(legal_actions)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action:<sp/>1.0<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>action<sp/>==<sp/>min_action<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>0.0<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>action<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>legal_actions</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="namespaceopen__spiel_1_1python_1_1policy_1af790d4355be9443cf04c9a1a206149cd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceopen__spiel_1_1python_1_1policy_1af790d4355be9443cf04c9a1a206149cd" kindref="member">get_tabular_policy_states</ref>(game):</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>the<sp/>states<sp/>of<sp/>the<sp/>game<sp/>for<sp/>a<sp/>tabular<sp/>policy.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>game.get_type().dynamics<sp/>==<sp/>pyspiel.GameType.Dynamics.MEAN_FIELD:</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO(author18):<sp/>We<sp/>use<sp/>s.observation_string(DEFAULT_MFG_PLAYER)<sp/>here<sp/>as<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>number<sp/>of<sp/>history<sp/>is<sp/>exponential<sp/>on<sp/>the<sp/>depth<sp/>of<sp/>the<sp/>MFG.<sp/>What<sp/>we<sp/>really</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>need<sp/>is<sp/>a<sp/>representation<sp/>of<sp/>the<sp/>state.<sp/>For<sp/>many<sp/>player<sp/>Mean<sp/>Field<sp/>games,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>state<sp/>will<sp/>be<sp/>(x0,<sp/>x1,<sp/>x2,<sp/>...,<sp/>xn)<sp/>and<sp/>the<sp/>observation_string(0)<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>output<sp/>the<sp/>string<sp/>of<sp/>x0.<sp/>In<sp/>that<sp/>case<sp/>we<sp/>would<sp/>need<sp/>something<sp/>like</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>str([observation_string(i)<sp/>for<sp/>i<sp/>in<sp/>range(num_player)])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>to_string<sp/>=<sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>s:<sp/>s.observation_string(pyspiel.PlayerId.</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEFAULT_PLAYER_ID)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>to_string<sp/>=<sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>s:<sp/>s.history_str()</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_all_states.get_all_states(</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>game,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>depth_limit=-1,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>include_terminals=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>include_chance_states=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>include_mean_field_states=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>to_string=to_string)</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475" refid="namespaceopen__spiel_1_1python_1_1policy_1a897c31d2e2114f88e9df618aef1c2800" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceopen__spiel_1_1python_1_1policy_1a897c31d2e2114f88e9df618aef1c2800" kindref="member">tabular_policy_from_callable</ref>(game,<sp/>callable_policy,<sp/>players=None):</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Converts<sp/>a<sp/>legacy<sp/>callable<sp/>policy<sp/>into<sp/>a<sp/>TabularPolicy.</highlight></codeline>
<codeline lineno="477"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="478"><highlight class="stringliteral"><sp/><sp/>Recommendation<sp/>-<sp/>instead<sp/>of<sp/>using<sp/>this<sp/>to<sp/>convert<sp/>your<sp/>policy<sp/>for<sp/>evaluation</highlight></codeline>
<codeline lineno="479"><highlight class="stringliteral"><sp/><sp/>purposes,<sp/>work<sp/>directly<sp/>with<sp/>a<sp/>`TabularPolicy`<sp/>if<sp/>possible.</highlight></codeline>
<codeline lineno="480"><highlight class="stringliteral"><sp/><sp/>Second<sp/>choice<sp/>-<sp/>work<sp/>with<sp/>a<sp/>`Policy`<sp/>class<sp/>and<sp/>call<sp/>`to_tabular`<sp/>as<sp/>needed.</highlight></codeline>
<codeline lineno="481"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="482"><highlight class="stringliteral"><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="483"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>game:<sp/>The<sp/>game<sp/>for<sp/>which<sp/>we<sp/>want<sp/>a<sp/>TabularPolicy.</highlight></codeline>
<codeline lineno="484"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>callable_policy:<sp/>A<sp/>callable:<sp/>state<sp/>-&gt;<sp/>action<sp/>probabilities<sp/>dict<sp/>or<sp/>list.</highlight></codeline>
<codeline lineno="485"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>players:<sp/>List<sp/>of<sp/>players<sp/>this<sp/>policy<sp/>applies<sp/>to.<sp/>If<sp/>`None`,<sp/>applies<sp/>to<sp/>all</highlight></codeline>
<codeline lineno="486"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>players.</highlight></codeline>
<codeline lineno="487"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="488"><highlight class="stringliteral"><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="489"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>TabularPolicy<sp/>that<sp/>materializes<sp/>the<sp/>callable<sp/>policy.</highlight></codeline>
<codeline lineno="490"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>tabular_policy<sp/>=<sp/><ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy" kindref="compound">TabularPolicy</ref>(game,<sp/>players)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>state_index,<sp/>state<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(tabular_policy.states):</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>action_probabilities<sp/>=<sp/>dict(callable_policy(state))</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>infostate_policy<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action_probabilities.get(action,<sp/>0.)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>action<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(game.num_distinct_actions())</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>tabular_policy.action_probability_array[state_index,<sp/>:]<sp/>=<sp/>infostate_policy</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tabular_policy</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502" refid="namespaceopen__spiel_1_1python_1_1policy_1ab94aca1416f617f17950d02053a38a5b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceopen__spiel_1_1python_1_1policy_1ab94aca1416f617f17950d02053a38a5b" kindref="member">pyspiel_policy_to_python_policy</ref>(game,<sp/>pyspiel_tabular_policy,<sp/>players=None):</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Converts<sp/>a<sp/>pyspiel.TabularPolicy<sp/>to<sp/>a<sp/>TabularPolicy.</highlight></codeline>
<codeline lineno="504"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="505"><highlight class="stringliteral"><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="506"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>game:<sp/>The<sp/>OpenSpiel<sp/>game.</highlight></codeline>
<codeline lineno="507"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>pyspiel_tabular_policy:<sp/>Pyspiel<sp/>tabular<sp/>policy<sp/>to<sp/>copy<sp/>from.</highlight></codeline>
<codeline lineno="508"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>players:<sp/>List<sp/>of<sp/>integer<sp/>player<sp/>ids<sp/>to<sp/>copy<sp/>policy<sp/>from.<sp/>For<sp/>example,</highlight></codeline>
<codeline lineno="509"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>`players=[0]`<sp/>will<sp/>only<sp/>copy<sp/>player<sp/>0&apos;s<sp/>policy<sp/>over<sp/>into<sp/>the<sp/>python<sp/>policy</highlight></codeline>
<codeline lineno="510"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>(the<sp/>other<sp/>player&apos;s<sp/>policies<sp/>will<sp/>be<sp/>undefined).<sp/>Default<sp/>value<sp/>of<sp/>`None`</highlight></codeline>
<codeline lineno="511"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>copy<sp/>all<sp/>players&apos;<sp/>policies.</highlight></codeline>
<codeline lineno="512"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="513"><highlight class="stringliteral"><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="514"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>python_policy</highlight></codeline>
<codeline lineno="515"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>policy<sp/>=<sp/><ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy" kindref="compound">TabularPolicy</ref>(game,<sp/>players=players)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>item<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pyspiel_tabular_policy.policy_table().items():</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>info_state_str,<sp/>actions_probs<sp/>=<sp/>item</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>requested,<sp/>only<sp/>populate<sp/>a<sp/>policy<sp/>for<sp/>particular<sp/>players.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>players<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>info_state_str<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>policy.state_lookup:</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>state_policy<sp/>=<sp/>policy.policy_for_key(info_state_str)</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>action,<sp/>prob<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>actions_probs:</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state_policy[action]<sp/>=<sp/>prob</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>policy</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528" refid="namespaceopen__spiel_1_1python_1_1policy_1abf19f1c6de40f4f3bc77be68fafdb396" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceopen__spiel_1_1python_1_1policy_1abf19f1c6de40f4f3bc77be68fafdb396" kindref="member">python_policy_to_pyspiel_policy</ref>(python_tabular_policy):</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Converts<sp/>a<sp/>TabularPolicy<sp/>to<sp/>a<sp/>pyspiel.TabularPolicy.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>infostates_to_probabilities<sp/>=<sp/>dict()</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>infostate,<sp/>index<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>python_tabular_policy.state_lookup.items():</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>probs<sp/>=<sp/>python_tabular_policy.action_probability_array[index]</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>legals<sp/>=<sp/>python_tabular_policy.legal_actions_mask[index]</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>action_probs<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>action,<sp/>(prob,<sp/>is_legal)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(zip(probs,<sp/>legals)):</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>is_legal<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action_probs.append((action,<sp/>prob))</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>infostates_to_probabilities[infostate]<sp/>=<sp/>action_probs</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pyspiel.TabularPolicy(infostates_to_probabilities)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543" refid="namespaceopen__spiel_1_1python_1_1policy_1a3b489234e6aaac89abffa8a7088fd542" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceopen__spiel_1_1python_1_1policy_1a3b489234e6aaac89abffa8a7088fd542" kindref="member">python_policies_to_pyspiel_policies</ref>(policies):</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Same<sp/>conversion<sp/>as<sp/>above<sp/>(list<sp/>version).</highlight></codeline>
<codeline lineno="545"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="546"><highlight class="stringliteral"><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="547"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>policies:<sp/>a<sp/>list<sp/>of<sp/>python.TabularPolicy</highlight></codeline>
<codeline lineno="548"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="549"><highlight class="stringliteral"><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="550"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>a<sp/>list<sp/>of<sp/>pyspiel.TabularPolicy.</highlight></codeline>
<codeline lineno="551"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[<ref refid="namespaceopen__spiel_1_1python_1_1policy_1abf19f1c6de40f4f3bc77be68fafdb396" kindref="member">python_policy_to_pyspiel_policy</ref>(p)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>policies]</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555" refid="namespaceopen__spiel_1_1python_1_1policy_1aea67d9e6edba3429e7feaa289e25c3a7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceopen__spiel_1_1python_1_1policy_1aea67d9e6edba3429e7feaa289e25c3a7" kindref="member">merge_tabular_policies</ref>(tabular_policies,<sp/>game):</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Merges<sp/>n_player<sp/>policies<sp/>into<sp/>single<sp/>joint<sp/>policy.</highlight></codeline>
<codeline lineno="557"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="558"><highlight class="stringliteral"><sp/><sp/>Missing<sp/>states<sp/>are<sp/>filled<sp/>with<sp/>a<sp/>valid<sp/>uniform<sp/>policy.</highlight></codeline>
<codeline lineno="559"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="560"><highlight class="stringliteral"><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="561"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>tabular_policies:<sp/>List<sp/>of<sp/>python<sp/>TabularPolicy<sp/>(one<sp/>for<sp/>each<sp/>player).</highlight></codeline>
<codeline lineno="562"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>game:<sp/>The<sp/>game<sp/>corresponding<sp/>to<sp/>the<sp/>resulting<sp/>TabularPolicy.</highlight></codeline>
<codeline lineno="563"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="564"><highlight class="stringliteral"><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="565"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>merged_policy:<sp/>A<sp/>TabularPolicy<sp/>with<sp/>each<sp/>player<sp/>i&apos;s<sp/>policy<sp/>taken<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="566"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>ith<sp/>joint_policy.</highlight></codeline>
<codeline lineno="567"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(tabular_policies)<sp/>!=<sp/>game.num_players():</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;len(tabular_policies)<sp/>!=<sp/>num_players:<sp/>%d<sp/>!=<sp/>%d&quot;</highlight><highlight class="normal"><sp/>%</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(len(tabular_policies),<sp/>game.num_players()))</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>merged_policy<sp/>=<sp/><ref refid="classopen__spiel_1_1python_1_1policy_1_1_tabular_policy" kindref="compound">TabularPolicy</ref>(game)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p,<sp/>p_states<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(merged_policy.states_per_player):</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p_state<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>p_states:</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>to_index<sp/>=<sp/>merged_policy.state_lookup[p_state]</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Only<sp/>copy<sp/>if<sp/>the<sp/>state<sp/>exists,<sp/>otherwise<sp/>fall<sp/>back<sp/>onto<sp/>uniform.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>p_state<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tabular_policies[p].state_lookup:</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from_index<sp/>=<sp/>tabular_policies[p].state_lookup[p_state]</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>merged_policy.action_probability_array[to_index]<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tabular_policies[p].action_probability_array[from_index])</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>merged_policy</highlight></codeline>
    </programlisting>
    <location file="open_spiel/python/policy.py"/>
  </compounddef>
</doxygen>
