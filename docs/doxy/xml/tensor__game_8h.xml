<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="tensor__game_8h" kind="file" language="C++">
    <compoundname>tensor_game.h</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">iterator</includes>
    <includes local="no">memory</includes>
    <includes local="no">numeric</includes>
    <includes local="no">string</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes refid="matrix__game_8h" local="yes">open_spiel/matrix_game.h</includes>
    <includes refid="normal__form__game_8h" local="yes">open_spiel/normal_form_game.h</includes>
    <includes refid="spiel_8h" local="yes">open_spiel/spiel.h</includes>
    <includes refid="spiel__utils_8h" local="yes">open_spiel/spiel_utils.h</includes>
    <includedby refid="tensor__game_8cc" local="yes">open_spiel/tensor_game.cc</includedby>
    <incdepgraph>
      <node id="25">
        <label>open_spiel/game_parameters.h</label>
        <link refid="game__parameters_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>open_spiel/matrix_game.h</label>
        <link refid="matrix__game_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>open_spiel/normal_form_game.h</label>
        <link refid="normal__form__game_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>open_spiel/observer.h</label>
        <link refid="observer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>open_spiel/simultaneous_move_game.h</label>
        <link refid="simultaneous__move__game_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>open_spiel/spiel.h</label>
        <link refid="spiel_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>open_spiel/spiel_globals.h</label>
        <link refid="spiel__globals_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>open_spiel/spiel_utils.h</label>
        <link refid="spiel__utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>open_spiel/tensor_game.h</label>
        <link refid="tensor__game_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>algorithm</label>
      </node>
      <node id="27">
        <label>array</label>
      </node>
      <node id="28">
        <label>cmath</label>
      </node>
      <node id="29">
        <label>cstddef</label>
      </node>
      <node id="30">
        <label>cstdint</label>
      </node>
      <node id="15">
        <label>functional</label>
      </node>
      <node id="16">
        <label>iostream</label>
      </node>
      <node id="3">
        <label>iterator</label>
      </node>
      <node id="17">
        <label>map</label>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
      <node id="5">
        <label>numeric</label>
      </node>
      <node id="36">
        <label>open_spiel/abseil-cpp/absl/algorithm/container.h</label>
      </node>
      <node id="37">
        <label>open_spiel/abseil-cpp/absl/base/attributes.h</label>
      </node>
      <node id="38">
        <label>open_spiel/abseil-cpp/absl/container/flat_hash_set.h</label>
      </node>
      <node id="39">
        <label>open_spiel/abseil-cpp/absl/container/inlined_vector.h</label>
      </node>
      <node id="21">
        <label>open_spiel/abseil-cpp/absl/random/bit_gen_ref.h</label>
      </node>
      <node id="32">
        <label>open_spiel/abseil-cpp/absl/random/uniform_real_distribution.h</label>
      </node>
      <node id="11">
        <label>open_spiel/abseil-cpp/absl/strings/str_cat.h</label>
      </node>
      <node id="12">
        <label>open_spiel/abseil-cpp/absl/strings/str_join.h</label>
      </node>
      <node id="40">
        <label>open_spiel/abseil-cpp/absl/strings/string_view.h</label>
      </node>
      <node id="22">
        <label>open_spiel/abseil-cpp/absl/synchronization/mutex.h</label>
      </node>
      <node id="33">
        <label>open_spiel/abseil-cpp/absl/time/clock.h</label>
      </node>
      <node id="34">
        <label>open_spiel/abseil-cpp/absl/time/time.h</label>
      </node>
      <node id="23">
        <label>open_spiel/abseil-cpp/absl/types/optional.h</label>
      </node>
      <node id="24">
        <label>open_spiel/abseil-cpp/absl/types/span.h</label>
      </node>
      <node id="18">
        <label>random</label>
      </node>
      <node id="19">
        <label>sstream</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="31">
        <label>type_traits</label>
      </node>
      <node id="20">
        <label>unordered_map</label>
      </node>
      <node id="7">
        <label>utility</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>open_spiel/tensor_game.cc</label>
        <link refid="tensor__game_8cc"/>
      </node>
      <node id="1">
        <label>open_spiel/tensor_game.h</label>
        <link refid="tensor__game_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classopen__spiel_1_1tensor__game_1_1_tensor_game" prot="public">open_spiel::tensor_game::TensorGame</innerclass>
    <innerclass refid="classopen__spiel_1_1tensor__game_1_1_tensor_state" prot="public">open_spiel::tensor_game::TensorState</innerclass>
    <innernamespace refid="namespaceopen__spiel">open_spiel</innernamespace>
    <innernamespace refid="namespaceopen__spiel_1_1tensor__game">open_spiel::tensor_game</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2021<sp/>DeepMind<sp/>Technologies<sp/>Limited</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPEN_SPIEL_TENSOR_GAME_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OPEN_SPIEL_TENSOR_GAME_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="matrix__game_8h" kindref="compound">open_spiel/matrix_game.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="normal__form__game_8h" kindref="compound">open_spiel/normal_form_game.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="spiel_8h" kindref="compound">open_spiel/spiel.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="spiel__utils_8h" kindref="compound">open_spiel/spiel_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>tensor<sp/>game<sp/>is<sp/>an<sp/>example<sp/>of<sp/>an<sp/>n-player<sp/>normal-form<sp/>game.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopen__spiel" kindref="compound">open_spiel</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tensor_game<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classopen__spiel_1_1tensor__game_1_1_tensor_game" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game" kindref="compound">TensorGame</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_normal_form_game" kindref="compound">NormalFormGame</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>action_names[player]<sp/>is<sp/>the<sp/>list<sp/>of<sp/>action<sp/>names<sp/>for<sp/>player.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>utilities[player]<sp/>is<sp/>a<sp/>flattened<sp/>tensor<sp/>of<sp/>utilities<sp/>for<sp/>player,<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>row-major/C-style/lexicographic<sp/>order<sp/>of<sp/>all<sp/>players&apos;<sp/>actions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1a55eb7ffe08a76e4f3beb55af0f2436b1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1a55eb7ffe08a76e4f3beb55af0f2436b1" kindref="member">TensorGame</ref>(<ref refid="structopen__spiel_1_1_game_type" kindref="compound">GameType</ref><sp/>game_type,<sp/><ref refid="namespaceopen__spiel_1ad7c4d931669b5e357cb5c7f84a6de094" kindref="member">GameParameters</ref><sp/>game_parameters,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;std::string&gt;&gt;<sp/>action_names,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;double&gt;&gt;<sp/>utilities)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classopen__spiel_1_1_normal_form_game" kindref="compound">NormalFormGame</ref>(std::move(game_type),<sp/>std::move(game_parameters)),</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action_names_(std::move(action_names)),</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>utilities_(std::move(utilities)),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape_(utilities_.size())<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>player<sp/>=<sp/>0;<sp/>player<sp/>&lt;<sp/>action_names_.size();<sp/>++player)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>*=<sp/>action_names_[player].size();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shape_[player]<sp/>=<sp/>action_names_[player].size();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>ComputeMinMaxUtility();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="spiel__utils_8h_1ac998e613afb013e8bd31b3da80f747ae" kindref="member">SPIEL_CHECK_TRUE</ref>(std::all_of(utilities_.begin(),<sp/>utilities_.end(),</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[size](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>player_utils)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>player_utils.size()<sp/>==<sp/>size;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Implementation<sp/>of<sp/>Game<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1a743024a2d64444ffdb58c25b35e674a1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1a743024a2d64444ffdb58c25b35e674a1" kindref="member">NumDistinctActions</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*std::max_element(begin(shape_),<sp/>end(shape_));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;State&gt;<sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1a93780aa65740267f9d6aa0e0492ebf7f" kindref="member">NewInitialState</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1ab1d5e80c11002ac6095b521f7a9e2a95" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1ab1d5e80c11002ac6095b521f7a9e2a95" kindref="member">NumPlayers</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>utilities_.size();<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1a41f59944fffb4c46db07f19092b1d55a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1a41f59944fffb4c46db07f19092b1d55a" kindref="member">MinUtility</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min_utility_;<sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1ab0f8ec980cc99b2fd7b8c8aa09fa2c90" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1ab0f8ec980cc99b2fd7b8c8aa09fa2c90" kindref="member">MaxUtility</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max_utility_;<sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1a61789265c5f99c7115b44ee176a22d22" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1a61789265c5f99c7115b44ee176a22d22" kindref="member">ActionToString</ref>(<ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>player,<sp/><ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref><sp/>action)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1aca64aaaf4b90a0a755b5d645eb9e7860" kindref="member">ActionName</ref>(player,<sp/>action);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1a857b01e3c48ea7c5f7ac64f13e7468f5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1a857b01e3c48ea7c5f7ac64f13e7468f5" kindref="member">Shape</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shape_;<sp/>}</highlight></codeline>
<codeline lineno="78" refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1a24f7a3aa0c3bd3b05b1f958405f52911" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1a24f7a3aa0c3bd3b05b1f958405f52911" kindref="member">PlayerUtility</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>player,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Action&gt;&amp;<sp/>actions)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="spiel__utils_8h_1a5fa701f61bd5416434d72f3628e093b7" kindref="member">SPIEL_CHECK_GE</ref>(player,<sp/>0);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="spiel__utils_8h_1ad9b10d8a52955f75371525c0f9f21b69" kindref="member">SPIEL_CHECK_LT</ref>(player,<sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1ab1d5e80c11002ac6095b521f7a9e2a95" kindref="member">NumPlayers</ref>());</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>utilities_[player][index(actions)];</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84" refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1acc2f7e0b961eb96879df56553bc82780" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1acc2f7e0b961eb96879df56553bc82780" kindref="member">PlayerUtilities</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>player)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="spiel__utils_8h_1a5fa701f61bd5416434d72f3628e093b7" kindref="member">SPIEL_CHECK_GE</ref>(player,<sp/>0);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="spiel__utils_8h_1ad9b10d8a52955f75371525c0f9f21b69" kindref="member">SPIEL_CHECK_LT</ref>(player,<sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1ab1d5e80c11002ac6095b521f7a9e2a95" kindref="member">NumPlayers</ref>());</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>utilities_[player];</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89" refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1aca64aaaf4b90a0a755b5d645eb9e7860" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1aca64aaaf4b90a0a755b5d645eb9e7860" kindref="member">ActionName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>player,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref>&amp;<sp/>action)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="spiel__utils_8h_1a5fa701f61bd5416434d72f3628e093b7" kindref="member">SPIEL_CHECK_GE</ref>(player,<sp/>0);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="spiel__utils_8h_1ad9b10d8a52955f75371525c0f9f21b69" kindref="member">SPIEL_CHECK_LT</ref>(player,<sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1ab1d5e80c11002ac6095b521f7a9e2a95" kindref="member">NumPlayers</ref>());</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>action_names_[player][action];</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1af8206eecf92a2adf8172a6702c1b1f2b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1af8206eecf92a2adf8172a6702c1b1f2b" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref>&amp;<sp/>other_game)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>other<sp/>=<sp/><ref refid="namespaceopen__spiel_1a2abc2a9bf725d541a7da3b6f3c4c6ec4" kindref="member">down_cast&lt;const TensorGame&amp;&gt;</ref>(other_game);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(shape_<sp/>==<sp/>other.shape_<sp/>&amp;&amp;<sp/>utilities_<sp/>==<sp/>other.utilities_);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1a421e14a97cd15a0ba6970c1bde5751d0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1a421e14a97cd15a0ba6970c1bde5751d0" kindref="member">ApproxEqual</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref>&amp;<sp/>other_game,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tolerance)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>other<sp/>=<sp/><ref refid="namespaceopen__spiel_1a2abc2a9bf725d541a7da3b6f3c4c6ec4" kindref="member">down_cast&lt;const TensorGame&amp;&gt;</ref>(other_game);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape_<sp/>!=<sp/>other.shape_)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1ab1d5e80c11002ac6095b521f7a9e2a95" kindref="member">NumPlayers</ref>();<sp/>++p)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespaceopen__spiel_1ae00c0c4427507797bc362d31541ff684" kindref="member">AllNear</ref>(utilities_[p],<sp/>other.utilities_[p],<sp/>tolerance))<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1aa16f1eaae2db037e2bb2e40de106ba9e" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1aa16f1eaae2db037e2bb2e40de106ba9e" kindref="member">GetUtilities</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Action&gt;&amp;<sp/>joint_action)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="115"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>index(joint_action);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>utilities;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>utilities.reserve(<ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1ab1d5e80c11002ac6095b521f7a9e2a95" kindref="member">NumPlayers</ref>());</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1ab1d5e80c11002ac6095b521f7a9e2a95" kindref="member">NumPlayers</ref>();<sp/>++p)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>utilities.push_back(utilities_[p][idx]);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>utilities;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1a7de4a787fb93518da94697d0b3a324fb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1a7de4a787fb93518da94697d0b3a324fb" kindref="member">GetUtility</ref>(<ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>player,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Action&gt;&amp;<sp/>joint_action)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="126"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1a24f7a3aa0c3bd3b05b1f958405f52911" kindref="member">PlayerUtility</ref>(player,<sp/>joint_action);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1a71a2ca91924cdb74c953fc8a4533b6b7" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;const<sp/>matrix_game::MatrixGame&gt;<sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1a71a2ca91924cdb74c953fc8a4533b6b7" kindref="member">AsMatrixGame</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="spiel__utils_8h_1abcb08ef83297cd8a69ac67d47cfa5da2" kindref="member">SPIEL_CHECK_EQ</ref>(<ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1ab1d5e80c11002ac6095b521f7a9e2a95" kindref="member">NumPlayers</ref>(),<sp/>2);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structopen__spiel_1_1_game_type" kindref="compound">GameType</ref>&amp;<sp/>game_type<sp/>=<sp/><ref refid="classopen__spiel_1_1_game_1ab43a710b19e2cebf48ceaeccd3c8961f" kindref="member">GetType</ref>();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceopen__spiel_1_1matrix__game_1a490bbd5e0048fa156eed430b1c353d70" kindref="member">matrix_game::CreateMatrixGame</ref>(</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>game_type.<ref refid="structopen__spiel_1_1_game_type_1a7dc97c2b88971ea7c5180d3c2fe29cf1" kindref="member">short_name</ref>,<sp/>game_type.<ref refid="structopen__spiel_1_1_game_type_1a89c154ac202bd4a659b9e4ea3d28ebbb" kindref="member">long_name</ref>,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action_names_[0],<sp/>action_names_[1],</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>utilities_[0],<sp/>utilities_[1]);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Action&gt;&amp;<sp/>args)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ind<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1ab1d5e80c11002ac6095b521f7a9e2a95" kindref="member">NumPlayers</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ind<sp/>=<sp/>ind<sp/>*<sp/>shape_[i]<sp/>+<sp/>args[i];</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ind;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ComputeMinMaxUtility()<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>min_utility_<sp/>=<sp/>*std::min_element(begin(utilities_[0]),<sp/>end(utilities_[0]));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>player<sp/>=<sp/>1;<sp/>player<sp/>&lt;<sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1ab1d5e80c11002ac6095b521f7a9e2a95" kindref="member">NumPlayers</ref>();<sp/>++player)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min_utility_<sp/>=</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min(min_utility_,<sp/>*std::min_element(begin(utilities_[player]),</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end(utilities_[player])));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>max_utility_<sp/>=<sp/>*std::max_element(begin(utilities_[0]),<sp/>end(utilities_[0]));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>player<sp/>=<sp/>1;<sp/>player<sp/>&lt;<sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1ab1d5e80c11002ac6095b521f7a9e2a95" kindref="member">NumPlayers</ref>();<sp/>++player)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_utility_<sp/>=</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::max(max_utility_,<sp/>*std::max_element(begin(utilities_[player]),</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end(utilities_[player])));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>action_names_[player]<sp/>is<sp/>the<sp/>list<sp/>of<sp/>action<sp/>names<sp/>for<sp/>player.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;std::string&gt;&gt;<sp/>action_names_;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>utilities_[player]<sp/>is<sp/>a<sp/>flattened<sp/>tensor<sp/>of<sp/>utilities<sp/>for<sp/>player,<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>row-major/C-style/lexicographic<sp/>order<sp/>of<sp/>all<sp/>players&apos;<sp/>actions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;double&gt;&gt;<sp/>utilities_;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>shape_;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_utility_;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_utility_;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">};</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="classopen__spiel_1_1tensor__game_1_1_tensor_state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_state" kindref="compound">TensorState</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_n_f_g_state" kindref="compound">NFGState</ref><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_state_1a9a7a192f55cd2d51fa93217aba808650" kindref="member">TensorState</ref>(std::shared_ptr&lt;const<sp/>Game&gt;<sp/>game);</highlight></codeline>
<codeline lineno="177" refid="classopen__spiel_1_1tensor__game_1_1_tensor_state_1a0591dc91090e6676fef28f5ce2b03892" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_state_1a0591dc91090e6676fef28f5ce2b03892" kindref="member">TensorState</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_state" kindref="compound">TensorState</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="classopen__spiel_1_1tensor__game_1_1_tensor_state_1a49efa39f7897a573c57c2c253eb78ae7" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;Action&gt;<sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_state_1a49efa39f7897a573c57c2c253eb78ae7" kindref="member">LegalActions</ref>(<ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>player)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_state_1a792c9615e12803d3acf51767a7edb610" kindref="member">IsTerminal</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(player<sp/>==<sp/><ref refid="namespaceopen__spiel_1a5677cc0bb3f0c3d54e59c5df948718d6a98b448895a60295bcb57104abae3e302" kindref="member">kSimultaneousPlayerId</ref>)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_sim_move_state_1ad127470877848e35d6f4062976ef990c" kindref="member">LegalFlatJointActions</ref>();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Action&gt;<sp/>moves(tensor_game_-&gt;<ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1a857b01e3c48ea7c5f7ac64f13e7468f5" kindref="member">Shape</ref>()[player]);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::iota(moves.begin(),<sp/>moves.end(),<sp/>0);<sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>with<sp/>values<sp/>0...n-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>moves;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_state_1a50a825f9876434bd13c6462dd745d1c4" kindref="member">ToString</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="classopen__spiel_1_1tensor__game_1_1_tensor_state_1a10bc3e5563dccfafd58163874274d7f3" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_state_1a10bc3e5563dccfafd58163874274d7f3" kindref="member">ActionToString</ref>(<ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>player,<sp/><ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref><sp/>action_id)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(player<sp/>==<sp/><ref refid="namespaceopen__spiel_1a5677cc0bb3f0c3d54e59c5df948718d6a98b448895a60295bcb57104abae3e302" kindref="member">kSimultaneousPlayerId</ref>)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1_sim_move_state_1a348e919ba63cf62b710928257111f902" kindref="member">FlatJointActionToString</ref>(action_id);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor_game_-&gt;<ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1aca64aaaf4b90a0a755b5d645eb9e7860" kindref="member">ActionName</ref>(player,<sp/>action_id);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="classopen__spiel_1_1tensor__game_1_1_tensor_state_1a792c9615e12803d3acf51767a7edb610" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_state_1a792c9615e12803d3acf51767a7edb610" kindref="member">IsTerminal</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!joint_move_.empty();<sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="classopen__spiel_1_1tensor__game_1_1_tensor_state_1afa49d79c58c993523430742469168dbb" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_state_1afa49d79c58c993523430742469168dbb" kindref="member">Returns</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>returns(<ref refid="classopen__spiel_1_1_state_1a43f01fe8bdbb6292407feb51bc535d4f" kindref="member">NumPlayers</ref>());</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_state_1a792c9615e12803d3acf51767a7edb610" kindref="member">IsTerminal</ref>())<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>player<sp/>=<sp/>0;<sp/>player<sp/>&lt;<sp/>returns.size();<sp/>player++)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returns[player]<sp/>=<sp/>tensor_game_-&gt;<ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1a24f7a3aa0c3bd3b05b1f958405f52911" kindref="member">PlayerUtility</ref>(player,<sp/>joint_move_);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returns;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="classopen__spiel_1_1tensor__game_1_1_tensor_state_1a7eade29f389bf2a20e0921adb88498e8" refkind="member"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;State&gt;<sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_state_1a7eade29f389bf2a20e0921adb88498e8" kindref="member">Clone</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;State&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_state_1a9a7a192f55cd2d51fa93217aba808650" kindref="member">TensorState</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="216" refid="classopen__spiel_1_1tensor__game_1_1_tensor_state_1ae8fa39ae3a1f038ab47a9a5d98ef66b2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_state_1ae8fa39ae3a1f038ab47a9a5d98ef66b2" kindref="member">DoApplyActions</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Action&gt;&amp;<sp/>moves)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="spiel__utils_8h_1abcb08ef83297cd8a69ac67d47cfa5da2" kindref="member">SPIEL_CHECK_EQ</ref>(moves.size(),<sp/><ref refid="classopen__spiel_1_1_state_1a43f01fe8bdbb6292407feb51bc535d4f" kindref="member">NumPlayers</ref>());</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref><sp/>player<sp/>=<sp/>0;<sp/>player<sp/>&lt;<sp/><ref refid="classopen__spiel_1_1_state_1a43f01fe8bdbb6292407feb51bc535d4f" kindref="member">NumPlayers</ref>();<sp/>player++)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="spiel__utils_8h_1a5fa701f61bd5416434d72f3628e093b7" kindref="member">SPIEL_CHECK_GE</ref>(moves[player],<sp/>0);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="spiel__utils_8h_1ad9b10d8a52955f75371525c0f9f21b69" kindref="member">SPIEL_CHECK_LT</ref>(moves[player],<sp/>tensor_game_-&gt;<ref refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1a857b01e3c48ea7c5f7ac64f13e7468f5" kindref="member">Shape</ref>()[player]);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>joint_move_<sp/>=<sp/>moves;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>std::vector&lt;Action&gt;<sp/>joint_move_{};<sp/><sp/></highlight><highlight class="comment">//<sp/>joint<sp/>move<sp/>that<sp/>was<sp/>chosen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TensorGame*<sp/>tensor_game_;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">};</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>tensor<sp/>game<sp/>with<sp/>the<sp/>specified<sp/>utilities<sp/>and<sp/>action<sp/>names.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/>utils[player]<sp/>is<sp/>a<sp/>flattened<sp/>tensor<sp/>of<sp/>utilities<sp/>for<sp/>player,<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>row-major/C-style/lexicographic<sp/>order<sp/>of<sp/>all<sp/>players&apos;<sp/>actions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal">std::shared_ptr&lt;const<sp/>TensorGame&gt;<sp/><ref refid="namespaceopen__spiel_1_1tensor__game_1a937748364dc4a23755602e432c8d4d79" kindref="member">CreateTensorGame</ref>(</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>short_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>long_name,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;std::string&gt;&gt;&amp;<sp/>action_names,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;double&gt;&gt;&amp;<sp/>utils);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>tensor<sp/>game<sp/>with<sp/>the<sp/>specified<sp/>utilities,<sp/>with<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;short_name&quot;,<sp/>&quot;Long<sp/>Name&quot;<sp/>and<sp/>action<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">//<sp/>action0_0,<sp/>action0_1..<sp/>for<sp/>player<sp/>0,<sp/>and<sp/>so<sp/>forth<sp/>for<sp/>other<sp/>players.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">//<sp/>utils[player]<sp/>is<sp/>a<sp/>flattened<sp/>tensor<sp/>of<sp/>utilities<sp/>for<sp/>player,<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">//<sp/>row-major/C-style/lexicographic<sp/>order<sp/>of<sp/>all<sp/>players&apos;<sp/>actions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">std::shared_ptr&lt;const<sp/>TensorGame&gt;<sp/><ref refid="namespaceopen__spiel_1_1tensor__game_1a937748364dc4a23755602e432c8d4d79" kindref="member">CreateTensorGame</ref>(</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;double&gt;&gt;&amp;<sp/>utils,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>shape);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tensor_game</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>open_spiel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>OPEN_SPIEL_TENSOR_GAME_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="open_spiel/tensor_game.h"/>
  </compounddef>
</doxygen>
