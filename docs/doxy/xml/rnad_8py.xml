<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="rnad_8py" kind="file" language="Python">
    <compoundname>rnad.py</compoundname>
    <innerclass refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_entropy_schedule" prot="public">open_spiel::python::algorithms::rnad::rnad::EntropySchedule</innerclass>
    <innerclass refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning" prot="public">open_spiel::python::algorithms::rnad::rnad::FineTuning</innerclass>
    <innerclass refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_adam_config" prot="public">open_spiel::python::algorithms::rnad::rnad::AdamConfig</innerclass>
    <innerclass refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_nerd_config" prot="public">open_spiel::python::algorithms::rnad::rnad::NerdConfig</innerclass>
    <innerclass refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_state_representation" prot="public">open_spiel::python::algorithms::rnad::rnad::StateRepresentation</innerclass>
    <innerclass refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_config" prot="public">open_spiel::python::algorithms::rnad::rnad::RNaDConfig</innerclass>
    <innerclass refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_env_step" prot="public">open_spiel::python::algorithms::rnad::rnad::EnvStep</innerclass>
    <innerclass refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_actor_step" prot="public">open_spiel::python::algorithms::rnad::rnad::ActorStep</innerclass>
    <innerclass refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_time_step" prot="public">open_spiel::python::algorithms::rnad::rnad::TimeStep</innerclass>
    <innerclass refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver" prot="public">open_spiel::python::algorithms::rnad::rnad::RNaDSolver</innerclass>
    <innernamespace refid="namespaceopen__spiel">open_spiel</innernamespace>
    <innernamespace refid="namespaceopen__spiel_1_1python">open_spiel::python</innernamespace>
    <innernamespace refid="namespaceopen__spiel_1_1python_1_1algorithms">open_spiel::python::algorithms</innernamespace>
    <innernamespace refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad">open_spiel::python::algorithms::rnad</innernamespace>
    <innernamespace refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad">open_spiel::python::algorithms::rnad::rnad</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>2019<sp/>DeepMind<sp/>Technologies<sp/>Limited</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;Python<sp/>implementation<sp/>of<sp/>R-NaD<sp/>(https://arxiv.org/pdf/2206.15378.pdf).&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>enum</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>functools</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>typing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Any,<sp/>Callable,<sp/>Sequence,<sp/>Tuple</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>chex</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>haiku<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>hk</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>jax</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>jax<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>lax</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>jax<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>jnp</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>jax<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>tree_util<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>tree</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>optax</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespaceopen__spiel_1_1python" kindref="compound">open_spiel.python</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>policy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>policy_lib</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pyspiel</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Some<sp/>handy<sp/>aliases.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Since<sp/>most<sp/>of<sp/>these<sp/>are<sp/>just<sp/>aliases<sp/>for<sp/>a<sp/>&quot;bag<sp/>of<sp/>tensors&quot;,<sp/>the<sp/>goal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">#<sp/>is<sp/>to<sp/>improve<sp/>the<sp/>documentation,<sp/>and<sp/>not<sp/>to<sp/>actually<sp/>enforce<sp/>correctness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">#<sp/>through<sp/>pytype.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1a3a13a85848382671bb0525fca7283eac" refkind="member"><highlight class="normal">Params<sp/>=<sp/>chex.ArrayTree</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_entropy_schedule" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_entropy_schedule" kindref="compound">EntropySchedule</ref>:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;An<sp/>increasing<sp/>list<sp/>of<sp/>steps<sp/>where<sp/>the<sp/>regularisation<sp/>network<sp/>is<sp/>updated.</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/>Example</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>EntropySchedule([3,<sp/>5,<sp/>10],<sp/>[2,<sp/>4,<sp/>1])</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>=&gt;<sp/><sp/><sp/>[0,<sp/>3,<sp/>6,<sp/>11,<sp/>16,<sp/>21,<sp/>26,<sp/>36]</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>3<sp/>x2<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>5<sp/>x4<sp/><sp/><sp/><sp/><sp/>|<sp/>10<sp/>x1</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_entropy_schedule_1a7eb2f4696251d1d690f96a9979d6524d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_entropy_schedule_1a7eb2f4696251d1d690f96a9979d6524d" kindref="member">__init__</ref>(self,<sp/>*,<sp/>sizes:<sp/>Sequence[int],<sp/>repeats:<sp/>Sequence[int]):</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Constructs<sp/>a<sp/>schedule<sp/>of<sp/>entropy<sp/>iterations.</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>sizes:<sp/>the<sp/>list<sp/>of<sp/>iteration<sp/>sizes.</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>repeats:<sp/>the<sp/>list,<sp/>parallel<sp/>to<sp/>sizes,<sp/>with<sp/>the<sp/>number<sp/>of<sp/>times<sp/>for<sp/>each</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>from<sp/>`sizes`<sp/>to<sp/>repeat.</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(repeats)<sp/>!=<sp/>len(sizes):</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;`repeats`<sp/>must<sp/>be<sp/>parallel<sp/>to<sp/>`sizes`.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>sizes:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;`sizes`<sp/>and<sp/>`repeats`<sp/>must<sp/>not<sp/>be<sp/>empty.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>any([(repeat<sp/>&lt;=<sp/>0)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>repeat<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>repeats]):</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;All<sp/>repeat<sp/>values<sp/>must<sp/>be<sp/>strictly<sp/>positive&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>repeats[-1]<sp/>!=<sp/>1:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;The<sp/>last<sp/>value<sp/>in<sp/>`repeats`<sp/>must<sp/>be<sp/>equal<sp/>to<sp/>1,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ince<sp/>the<sp/>last<sp/>iteration<sp/>size<sp/>is<sp/>repeated<sp/>forever.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>ValueError<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&quot;Entropy<sp/>iteration<sp/>schedule:<sp/>repeats<sp/>({repeats})<sp/>and<sp/>sizes&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&quot;<sp/>({sizes}).&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>e</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>schedule<sp/>=<sp/>[0]</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>size,<sp/>repeat<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(sizes,<sp/>repeats):</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>schedule.extend([schedule[-1]<sp/>+<sp/>(i<sp/>+<sp/>1)<sp/>*<sp/>size<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(repeat)])</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_entropy_schedule_1ad0bf1b5ba3ea594d87fcdf3da8c0be91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_entropy_schedule_1ad0bf1b5ba3ea594d87fcdf3da8c0be91" kindref="member">schedule</ref><sp/>=<sp/>np.array(schedule,<sp/>dtype=np.int32)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_entropy_schedule_1ad1a6f7025f52b2fb616e857aec9f63a1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_entropy_schedule_1ad1a6f7025f52b2fb616e857aec9f63a1" kindref="member">__call__</ref>(self,<sp/>learner_step:<sp/>int)<sp/>-&gt;<sp/>Tuple[float,<sp/>bool]:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Entropy<sp/>scheduling<sp/>parameters<sp/>for<sp/>a<sp/>given<sp/>`learner_step`.</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>learner_step:<sp/>The<sp/>current<sp/>learning<sp/>step.</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>alpha:<sp/>The<sp/>mixing<sp/>weight<sp/>(from<sp/>[0,<sp/>1])<sp/>of<sp/>the<sp/>previous<sp/>policy<sp/>with</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>one<sp/>before<sp/>for<sp/>computing<sp/>the<sp/>intrinsic<sp/>reward.</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>update_target_net:<sp/>A<sp/>boolean<sp/>indicator<sp/>for<sp/>updating<sp/>the<sp/>target<sp/>network</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>current<sp/>network.</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>complexity<sp/>below<sp/>is<sp/>because<sp/>at<sp/>some<sp/>point<sp/>we<sp/>might<sp/>go<sp/>past</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>explicit<sp/>schedule,<sp/>and<sp/>then<sp/>we&apos;d<sp/>need<sp/>to<sp/>just<sp/>use<sp/>the<sp/>last<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>in<sp/>the<sp/>schedule<sp/>and<sp/>apply<sp/>the<sp/>logic<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>((learner_step<sp/>-<sp/>last_step)<sp/>%<sp/>last_iteration)<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>schedule<sp/>might<sp/>look<sp/>like<sp/>this:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>X----X-------X--X--X--X--------X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>learner_step<sp/>|<sp/>might<sp/>be<sp/>here<sp/>^<sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>or<sp/>there<sp/><sp/><sp/><sp/><sp/>^<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>or<sp/>even<sp/>past<sp/>the<sp/>schedule<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>^</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>We<sp/>need<sp/>to<sp/>deal<sp/>with<sp/>two<sp/>cases<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Instead<sp/>of<sp/>going<sp/>for<sp/>the<sp/>complicated<sp/>conditional,<sp/>let&apos;s<sp/>just</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>compute<sp/>both<sp/>and<sp/>then<sp/>do<sp/>the<sp/>A<sp/>*<sp/>s<sp/>+<sp/>B<sp/>*<sp/>(1<sp/>-<sp/>s)<sp/>with<sp/>s<sp/>being<sp/>a<sp/>bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>selector<sp/>between<sp/>A<sp/>and<sp/>B.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>1.<sp/>assume<sp/>learner_step<sp/>is<sp/>past<sp/>the<sp/>schedule,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>ie<sp/>schedule[-1]<sp/>&lt;=<sp/>learner_step.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>last_size<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_entropy_schedule_1ad0bf1b5ba3ea594d87fcdf3da8c0be91" kindref="member">schedule</ref>[-1]<sp/>-<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_entropy_schedule_1ad0bf1b5ba3ea594d87fcdf3da8c0be91" kindref="member">schedule</ref>[-2]</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>last_start<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_entropy_schedule_1ad0bf1b5ba3ea594d87fcdf3da8c0be91" kindref="member">schedule</ref>[-1]<sp/>+<sp/>(</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>learner_step<sp/>-<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_entropy_schedule_1ad0bf1b5ba3ea594d87fcdf3da8c0be91" kindref="member">schedule</ref>[-1])<sp/>//<sp/>last_size<sp/>*<sp/>last_size</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>2.<sp/>assume<sp/>learner_step<sp/>is<sp/>within<sp/>the<sp/>schedule.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>jnp.amax(self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_entropy_schedule_1ad0bf1b5ba3ea594d87fcdf3da8c0be91" kindref="member">schedule</ref><sp/>*<sp/>(self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_entropy_schedule_1ad0bf1b5ba3ea594d87fcdf3da8c0be91" kindref="member">schedule</ref><sp/>&lt;=<sp/>learner_step))</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>finish<sp/>=<sp/>jnp.amin(</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_entropy_schedule_1ad0bf1b5ba3ea594d87fcdf3da8c0be91" kindref="member">schedule</ref><sp/>*<sp/>(learner_step<sp/>&lt;<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_entropy_schedule_1ad0bf1b5ba3ea594d87fcdf3da8c0be91" kindref="member">schedule</ref>),</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initial=self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_entropy_schedule_1ad0bf1b5ba3ea594d87fcdf3da8c0be91" kindref="member">schedule</ref>[-1],</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>where=(learner_step<sp/>&lt;<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_entropy_schedule_1ad0bf1b5ba3ea594d87fcdf3da8c0be91" kindref="member">schedule</ref>))</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>finish<sp/>-<sp/>start</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Now<sp/>select<sp/>between<sp/>the<sp/>two.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>beyond<sp/>=<sp/>(self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_entropy_schedule_1ad0bf1b5ba3ea594d87fcdf3da8c0be91" kindref="member">schedule</ref>[-1]<sp/>&lt;=<sp/>learner_step)<sp/><sp/></highlight><highlight class="comment">#<sp/>Are<sp/>we<sp/>past<sp/>the<sp/>schedule?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>iteration_start<sp/>=<sp/>(last_start<sp/>*<sp/>beyond<sp/>+<sp/>start<sp/>*<sp/>(1<sp/>-<sp/>beyond))</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>iteration_size<sp/>=<sp/>(last_size<sp/>*<sp/>beyond<sp/>+<sp/>size<sp/>*<sp/>(1<sp/>-<sp/>beyond))</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>update_target_net<sp/>=<sp/>jnp.logical_and(</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>learner_step<sp/>&gt;<sp/>0,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jnp.sum(learner_step<sp/>==<sp/>iteration_start<sp/>+<sp/>iteration_size<sp/>-<sp/>1),</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>jnp.minimum(</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2.0<sp/>*<sp/>(learner_step<sp/>-<sp/>iteration_start))<sp/>/<sp/>iteration_size,<sp/>1.0)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>alpha,<sp/>update_target_net<sp/><sp/></highlight><highlight class="comment">#<sp/>pytype:<sp/>disable=bad-return-type<sp/><sp/>#<sp/>jax-types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">@chex.dataclass(frozen=True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning" kindref="compound">FineTuning</ref>:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Fine<sp/>tuning<sp/>options,<sp/>aka<sp/>policy<sp/>post-processing.</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"><sp/><sp/>Even<sp/>when<sp/>fully<sp/>trained,<sp/>the<sp/>resulting<sp/>softmax-based<sp/>policy<sp/>may<sp/>put</highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"><sp/><sp/>a<sp/>small<sp/>probability<sp/>mass<sp/>on<sp/>bad<sp/>actions.<sp/>This<sp/>results<sp/>in<sp/>an<sp/>agent</highlight></codeline>
<codeline lineno="142"><highlight class="stringliteral"><sp/><sp/>waiting<sp/>for<sp/>the<sp/>opponent<sp/>(itself<sp/>in<sp/>self-play)<sp/>to<sp/>commit<sp/>an<sp/>error.</highlight></codeline>
<codeline lineno="143"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="144"><highlight class="stringliteral"><sp/><sp/>To<sp/>address<sp/>that<sp/>the<sp/>policy<sp/>is<sp/>post-processed<sp/>using:</highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"><sp/><sp/>-<sp/>thresholding:<sp/>any<sp/>action<sp/>with<sp/>probability<sp/>smaller<sp/>than<sp/>self.threshold</highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>is<sp/>simply<sp/>removed<sp/>from<sp/>the<sp/>policy.</highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"><sp/><sp/>-<sp/>discretization:<sp/>the<sp/>probability<sp/>values<sp/>are<sp/>rounded<sp/>to<sp/>the<sp/>closest</highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>multiple<sp/>of<sp/>1/self.discretization.</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/>The<sp/>post-processing<sp/>is<sp/>used<sp/>on<sp/>the<sp/>learner,<sp/>and<sp/>thus<sp/>must<sp/>be<sp/>jit-friendly.</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>learner<sp/>step<sp/>after<sp/>which<sp/>the<sp/>policy<sp/>post<sp/>processing<sp/>(aka<sp/>finetuning)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>will<sp/>be<sp/>enabled<sp/>when<sp/>learning.<sp/>A<sp/>strictly<sp/>negative<sp/>value<sp/>is<sp/>equivalent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>to<sp/>infinity,<sp/>ie<sp/>disables<sp/>finetuning<sp/>completely.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1ae299eda6f8b1ef7c2f237d2dbfdd12fa" refkind="member"><highlight class="normal"><sp/><sp/>from_learner_steps:<sp/>int<sp/>=<sp/>-1</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>All<sp/>policy<sp/>probabilities<sp/>below<sp/>`threshold`<sp/>are<sp/>zeroed<sp/>out.<sp/>Thresholding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>is<sp/>disabled<sp/>if<sp/>this<sp/>value<sp/>is<sp/>non-positive.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1a1eb7d63b37ba5cfa7643f4686acd38ae" refkind="member"><highlight class="normal"><sp/><sp/>policy_threshold:<sp/>float<sp/>=<sp/>0.03</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Rounds<sp/>the<sp/>policy<sp/>probabilities<sp/>to<sp/>the<sp/>&quot;closest&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>multiple<sp/>of<sp/>1/`self.discretization`.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Discretization<sp/>is<sp/>disabled<sp/>for<sp/>non-positive<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1ad9af89b9012c1ff8b779a4af2d27c84d" refkind="member"><highlight class="normal"><sp/><sp/>policy_discretization:<sp/>int<sp/>=<sp/>32</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1a9db6771f9cda74f67f8bf06dff9db2cf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1a9db6771f9cda74f67f8bf06dff9db2cf" kindref="member">__call__</ref>(self,<sp/>policy:<sp/>chex.Array,<sp/>mask:<sp/>chex.Array,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>learner_steps:<sp/>int)<sp/>-&gt;<sp/>chex.Array:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;A<sp/>configurable<sp/>fine<sp/>tuning<sp/>of<sp/>a<sp/>policy.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>chex.assert_equal_shape((policy,<sp/>mask))</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>do_finetune<sp/>=<sp/>jnp.logical_and(self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1ae299eda6f8b1ef7c2f237d2dbfdd12fa" kindref="member">from_learner_steps</ref><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1adee208d4242d7c9222eac82efab392b9" kindref="member">from_learner_steps</ref><sp/>&gt;=<sp/>0,</highlight></codeline>
<codeline lineno="169" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1adee208d4242d7c9222eac82efab392b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>learner_steps<sp/>&gt;<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1ae299eda6f8b1ef7c2f237d2dbfdd12fa" kindref="member">from_learner_steps</ref><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1adee208d4242d7c9222eac82efab392b9" kindref="member">from_learner_steps</ref>)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jnp.where(do_finetune,<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1a30384a99f2e41f676058fbe79bbc0bd1" kindref="member">post_process_policy</ref>(policy,<sp/>mask),</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>policy)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1a30384a99f2e41f676058fbe79bbc0bd1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1a30384a99f2e41f676058fbe79bbc0bd1" kindref="member">post_process_policy</ref>(</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>policy:<sp/>chex.Array,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mask:<sp/>chex.Array,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>)<sp/>-&gt;<sp/>chex.Array:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Unconditionally<sp/>post<sp/>process<sp/>a<sp/>given<sp/>masked<sp/>policy.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>chex.assert_equal_shape((policy,<sp/>mask))</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>policy<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1aa8d1993fe61f5efc648ac3f500a8c64b" kindref="member">_threshold</ref>(policy,<sp/>mask)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>policy<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1a6ec47dc2f210442a5a612d92396a1e8d" kindref="member">_discretize</ref>(policy)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>policy</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1aa8d1993fe61f5efc648ac3f500a8c64b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1aa8d1993fe61f5efc648ac3f500a8c64b" kindref="member">_threshold</ref>(self,<sp/>policy:<sp/>chex.Array,<sp/>mask:<sp/>chex.Array)<sp/>-&gt;<sp/>chex.Array:</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Remove<sp/>from<sp/>the<sp/>support<sp/>the<sp/>actions<sp/>&apos;a&apos;<sp/>where<sp/>policy(a)<sp/>&lt;<sp/>threshold.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>chex.assert_equal_shape((policy,<sp/>mask))</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1a1eb7d63b37ba5cfa7643f4686acd38ae" kindref="member">policy_threshold</ref><sp/>&lt;=<sp/>0:</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>policy</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>mask<sp/>*<sp/>(</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Values<sp/>over<sp/>the<sp/>threshold.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(policy<sp/>&gt;=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1a1eb7d63b37ba5cfa7643f4686acd38ae" kindref="member">policy_threshold</ref>)<sp/>+</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Degenerate<sp/>case<sp/>is<sp/>when<sp/>policy<sp/>is<sp/>less<sp/>than<sp/>threshold<sp/>*everywhere*.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>In<sp/>that<sp/>case<sp/>we<sp/>just<sp/>keep<sp/>the<sp/>policy<sp/>as-is.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(jnp.max(policy,<sp/>axis=-1,<sp/>keepdims=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)<sp/>&lt;<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1a1eb7d63b37ba5cfa7643f4686acd38ae" kindref="member">policy_threshold</ref>))</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mask<sp/>*<sp/>policy<sp/>/<sp/>jnp.sum(mask<sp/>*<sp/>policy,<sp/>axis=-1,<sp/>keepdims=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1a6ec47dc2f210442a5a612d92396a1e8d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1a6ec47dc2f210442a5a612d92396a1e8d" kindref="member">_discretize</ref>(self,<sp/>policy:<sp/>chex.Array)<sp/>-&gt;<sp/>chex.Array:</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Round<sp/>all<sp/>action<sp/>probabilities<sp/>to<sp/>a<sp/>multiple<sp/>of<sp/>1/self.discretize.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1ad9af89b9012c1ff8b779a4af2d27c84d" kindref="member">policy_discretization</ref><sp/>&lt;=<sp/>0:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>policy</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>unbatched/single<sp/>policy<sp/>case:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(policy.shape)<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1a50c1c1a97acfce35b35e7690a53db543" kindref="member">_discretize_single</ref>(policy)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>policy<sp/>may<sp/>be<sp/>[B,<sp/>A]<sp/>or<sp/>[T,<sp/>B,<sp/>A],<sp/>etc.<sp/>Thus<sp/>add<sp/>hk.BatchApply.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>dims<sp/>=<sp/>len(policy.shape)<sp/>-<sp/>1</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO(author18):<sp/>avoid<sp/>mixing<sp/>vmap<sp/>and<sp/>BatchApply<sp/>since<sp/>the<sp/>two<sp/>could</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>be<sp/>folded<sp/>into<sp/>either<sp/>a<sp/>single<sp/>BatchApply<sp/>or<sp/>a<sp/>sequence<sp/>of<sp/>vmaps,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>not<sp/>the<sp/>mix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>vmapped<sp/>=<sp/>jax.vmap(self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1a50c1c1a97acfce35b35e7690a53db543" kindref="member">_discretize_single</ref>)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>policy<sp/>=<sp/>hk.BatchApply(vmapped,<sp/>num_dims=dims)(policy)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>policy</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1a50c1c1a97acfce35b35e7690a53db543" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1a50c1c1a97acfce35b35e7690a53db543" kindref="member">_discretize_single</ref>(self,<sp/>mu:<sp/>chex.Array)<sp/>-&gt;<sp/>chex.Array:</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;A<sp/>version<sp/>of<sp/>self._discretize<sp/>but<sp/>for<sp/>the<sp/>unbatched<sp/>data.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO(author18):<sp/>try<sp/>to<sp/>merge<sp/>_discretize<sp/>and<sp/>_discretize_single</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>into<sp/>one<sp/>function<sp/>that<sp/>handles<sp/>both<sp/>batched<sp/>and<sp/>unbatched<sp/>cases.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(mu.shape)<sp/>==<sp/>2:</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mu_<sp/>=<sp/>jnp.squeeze(mu,<sp/>axis=0)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mu_<sp/>=<sp/>mu</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>n_actions<sp/>=<sp/>mu_.shape[-1]</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>roundup<sp/>=<sp/>jnp.ceil(mu_<sp/>*<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1ad9af89b9012c1ff8b779a4af2d27c84d" kindref="member">policy_discretization</ref>).astype(jnp.int32)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>jnp.zeros_like(mu_)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>order<sp/>=<sp/>jnp.argsort(-mu_)<sp/><sp/></highlight><highlight class="comment">#<sp/>Indices<sp/>of<sp/>descending<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>weight_left<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1ad9af89b9012c1ff8b779a4af2d27c84d" kindref="member">policy_discretization</ref></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">f_disc(i,<sp/>order,<sp/>roundup,<sp/>weight_left,<sp/>result):</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>jnp.minimum(roundup[order[i]],<sp/>weight_left)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>jax.numpy.where(weight_left<sp/>&gt;=<sp/>0,<sp/>result.at[order[i]].add(x),</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>weight_left<sp/>-=<sp/>x</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i<sp/>+<sp/>1,<sp/>order,<sp/>roundup,<sp/>weight_left,<sp/>result</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">f_scan_scan(carry,<sp/>x):</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>order,<sp/>roundup,<sp/>weight_left,<sp/>result<sp/>=<sp/>carry</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i_next,<sp/>order_next,<sp/>roundup_next,<sp/>weight_left_next,<sp/>result_next<sp/>=<sp/>f_disc(</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>order,<sp/>roundup,<sp/>weight_left,<sp/>result)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>carry_next<sp/>=<sp/>(i_next,<sp/>order_next,<sp/>roundup_next,<sp/>weight_left_next,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_next)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>carry_next,<sp/>x</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>(_,<sp/>_,<sp/>_,<sp/>weight_left_next,<sp/>result_next),<sp/>_<sp/>=<sp/>jax.lax.scan(</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_scan_scan,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init=(jnp.asarray(0),<sp/>order,<sp/>roundup,<sp/>weight_left,<sp/>result),</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length=n_actions)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>result_next<sp/>=<sp/>jnp.where(weight_left_next<sp/>&gt;<sp/>0,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_next.at[order[0]].add(weight_left_next),</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_next)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(mu.shape)<sp/>==<sp/>2:</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result_next<sp/>=<sp/>jnp.expand_dims(result_next,<sp/>axis=0)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result_next<sp/>/<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning_1ad9af89b9012c1ff8b779a4af2d27c84d" kindref="member">policy_discretization</ref></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1a7a6f2614b688c26b71aeb30b721b0825" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1a7a6f2614b688c26b71aeb30b721b0825" kindref="member">_legal_policy</ref>(logits:<sp/>chex.Array,<sp/>legal_actions:<sp/>chex.Array)<sp/>-&gt;<sp/>chex.Array:</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;A<sp/>soft-max<sp/>policy<sp/>that<sp/>respects<sp/>legal_actions.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>chex.assert_equal_shape((logits,<sp/>legal_actions))</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Fiddle<sp/>a<sp/>bit<sp/>to<sp/>make<sp/>sure<sp/>we<sp/>don&apos;t<sp/>generate<sp/>NaNs<sp/>or<sp/>Inf<sp/>in<sp/>the<sp/>middle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>l_min<sp/>=<sp/>logits.min(axis=-1,<sp/>keepdims=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>1.<sp/>logits<sp/>중<sp/>가장<sp/>작은<sp/>것<sp/>찾는다.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>logits<sp/>=<sp/>jnp.where(legal_actions,<sp/>logits,<sp/>l_min)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>2.<sp/>유효액션위치만<sp/>logits<sp/>을<sp/>남기고<sp/>나머지는<sp/>min<sp/>으로<sp/>설정</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>logits<sp/>-=<sp/>logits.max(axis=-1,<sp/>keepdims=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>logits<sp/>*=<sp/>legal_actions</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>exp_logits<sp/>=<sp/>jnp.where(legal_actions,<sp/>jnp.exp(logits),</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0)<sp/><sp/></highlight><highlight class="comment">#<sp/>Illegal<sp/>actions<sp/>become<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>exp_logits_sum<sp/>=<sp/>jnp.sum(exp_logits,<sp/>axis=-1,<sp/>keepdims=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exp_logits<sp/>/<sp/>exp_logits_sum</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1a3facb6eae59a330344ca2b62d9f1db50" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1a3facb6eae59a330344ca2b62d9f1db50" kindref="member">legal_log_policy</ref>(logits:<sp/>chex.Array,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legal_actions:<sp/>chex.Array)<sp/>-&gt;<sp/>chex.Array:</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Return<sp/>the<sp/>log<sp/>of<sp/>the<sp/>policy<sp/>on<sp/>legal<sp/>action,<sp/>0<sp/>on<sp/>illegal<sp/>action.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>chex.assert_equal_shape((logits,<sp/>legal_actions))</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>logits_masked<sp/>has<sp/>illegal<sp/>actions<sp/>set<sp/>to<sp/>-inf.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>logits_masked<sp/>=<sp/>logits<sp/>+<sp/>jnp.log(legal_actions)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>max_legal_logit<sp/>=<sp/>logits_masked.max(axis=-1,<sp/>keepdims=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>logits_masked<sp/>=<sp/>logits_masked<sp/>-<sp/>max_legal_logit</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>exp_logits_masked<sp/>is<sp/>0<sp/>for<sp/>illegal<sp/>actions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>exp_logits_masked<sp/>=<sp/>jnp.exp(logits_masked)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>baseline<sp/>=<sp/>jnp.log(jnp.sum(exp_logits_masked,<sp/>axis=-1,<sp/>keepdims=</highlight><highlight class="keyword">True</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Subtract<sp/>baseline<sp/>from<sp/>logits.<sp/>We<sp/>do<sp/>not<sp/>simply<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>logits_masked<sp/>-<sp/>baseline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>because<sp/>that<sp/>has<sp/>-inf<sp/>for<sp/>illegal<sp/>actions,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>legal_actions<sp/>*<sp/>(logits_masked<sp/>-<sp/>baseline)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>because<sp/>that<sp/>leads<sp/>to<sp/>0<sp/>*<sp/>-inf<sp/>==<sp/>nan<sp/>for<sp/>illegal<sp/>actions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>log_policy<sp/>=<sp/>jnp.multiply(legal_actions,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(logits<sp/>-<sp/>max_legal_logit<sp/>-<sp/>baseline))</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>log_policy</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1a4b23dcb30573c752adb2aad69108ad25" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1a4b23dcb30573c752adb2aad69108ad25" kindref="member">_player_others</ref>(player_ids:<sp/>chex.Array,<sp/>valid:<sp/>chex.Array,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player:<sp/>int)<sp/>-&gt;<sp/>chex.Array:</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;A<sp/>vector<sp/>of<sp/>1<sp/>for<sp/>the<sp/>current<sp/>player<sp/>and<sp/>-1<sp/>for<sp/>others.</highlight></codeline>
<codeline lineno="301"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="302"><highlight class="stringliteral"><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="303"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>player_ids:<sp/>Tensor<sp/>[...]<sp/>containing<sp/>player<sp/>ids<sp/>(0<sp/>&lt;=<sp/>player_id<sp/>&lt;<sp/>N).</highlight></codeline>
<codeline lineno="304"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>valid:<sp/>Tensor<sp/>[...]<sp/>containing<sp/>whether<sp/>these<sp/>states<sp/>are<sp/>valid.</highlight></codeline>
<codeline lineno="305"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>player:<sp/>The<sp/>player<sp/>id<sp/>as<sp/>int.</highlight></codeline>
<codeline lineno="306"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="307"><highlight class="stringliteral"><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="308"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>player_other:<sp/>is<sp/>1<sp/>for<sp/>the<sp/>current<sp/>player<sp/>and<sp/>-1<sp/>for<sp/>others<sp/>[...,<sp/>1].</highlight></codeline>
<codeline lineno="309"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>chex.assert_equal_shape((player_ids,<sp/>valid))</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>current_player_tensor<sp/>=<sp/>(player_ids<sp/>==<sp/>player).astype(jnp.int32)<sp/><sp/></highlight><highlight class="comment">#<sp/>pytype:<sp/>disable=attribute-error<sp/><sp/>#<sp/>numpy-scalars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>2<sp/>*<sp/>current_player_tensor<sp/>-<sp/>1</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>res<sp/>*<sp/>valid</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jnp.expand_dims(res,<sp/>axis=-1)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1ac4170cd64ce2430ed104b2611230c6ab" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1ac4170cd64ce2430ed104b2611230c6ab" kindref="member">_policy_ratio</ref>(pi:<sp/>chex.Array,<sp/>mu:<sp/>chex.Array,<sp/>actions_oh:<sp/>chex.Array,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid:<sp/>chex.Array)<sp/>-&gt;<sp/>chex.Array:</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>a<sp/>ratio<sp/>of<sp/>policy<sp/>pi/mu<sp/>when<sp/>selecting<sp/>action<sp/>a.</highlight></codeline>
<codeline lineno="321"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="322"><highlight class="stringliteral"><sp/><sp/>By<sp/>convention,<sp/>this<sp/>ratio<sp/>is<sp/>1<sp/>on<sp/>non<sp/>valid<sp/>states</highlight></codeline>
<codeline lineno="323"><highlight class="stringliteral"><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="324"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>pi:<sp/>the<sp/>policy<sp/>of<sp/>shape<sp/>[...,<sp/>A].</highlight></codeline>
<codeline lineno="325"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>mu:<sp/>the<sp/>sampling<sp/>policy<sp/>of<sp/>shape<sp/>[...,<sp/>A].</highlight></codeline>
<codeline lineno="326"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>actions_oh:<sp/>a<sp/>one-hot<sp/>encoding<sp/>of<sp/>the<sp/>current<sp/>actions<sp/>of<sp/>shape<sp/>[...,<sp/>A].</highlight></codeline>
<codeline lineno="327"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>valid:<sp/>0<sp/>if<sp/>the<sp/>state<sp/>is<sp/>not<sp/>valid<sp/>and<sp/>else<sp/>1<sp/>of<sp/>shape<sp/>[...].</highlight></codeline>
<codeline lineno="328"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="329"><highlight class="stringliteral"><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="330"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>pi/mu<sp/>on<sp/>valid<sp/>states<sp/>and<sp/>1<sp/>otherwise.<sp/>The<sp/>shape<sp/>is<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="331"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>as<sp/>pi,<sp/>mu<sp/>or<sp/>actions_oh<sp/>but<sp/>without<sp/>the<sp/>last<sp/>dimension<sp/>A.</highlight></codeline>
<codeline lineno="332"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>chex.assert_equal_shape((pi,<sp/>mu,<sp/>actions_oh))</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>chex.assert_shape((valid,),<sp/>actions_oh.shape[:-1])</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_select_action_prob(pi):</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(jnp.sum(actions_oh<sp/>*<sp/>pi,<sp/>axis=-1,<sp/>keepdims=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)<sp/>*<sp/>valid<sp/>+</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>-<sp/>valid))</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>pi_actions_prob<sp/>=<sp/>_select_action_prob(pi)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>mu_actions_prob<sp/>=<sp/>_select_action_prob(mu)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pi_actions_prob<sp/>/<sp/>mu_actions_prob</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1ab7453b1839b4936883bf3200fee642fa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1ab7453b1839b4936883bf3200fee642fa" kindref="member">_where</ref>(pred:<sp/>chex.Array,<sp/>true_data:<sp/>chex.ArrayTree,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>false_data:<sp/>chex.ArrayTree)<sp/>-&gt;<sp/>chex.ArrayTree:</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Similar<sp/>to<sp/>jax.where<sp/>but<sp/>treats<sp/>`pred`<sp/>as<sp/>a<sp/>broadcastable<sp/>prefix.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_where_one(t,<sp/>f):</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>chex.assert_equal_rank((t,<sp/>f))</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Expand<sp/>the<sp/>dimensions<sp/>of<sp/>pred<sp/>if<sp/>true_data<sp/>and<sp/>false_data<sp/>are<sp/>higher<sp/>rank.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>jnp.reshape(pred,<sp/>pred.shape<sp/>+<sp/>(1,)<sp/>*<sp/>(len(t.shape)<sp/>-<sp/>len(pred.shape)))</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jnp.where(p,<sp/>t,<sp/>f)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tree.tree_map(_where_one,<sp/>true_data,<sp/>false_data)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1abb90d97ed8e7c735f4246f3646227b86" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1abb90d97ed8e7c735f4246f3646227b86" kindref="member">_has_played</ref>(valid:<sp/>chex.Array,<sp/>player_id:<sp/>chex.Array,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player:<sp/>int)<sp/>-&gt;<sp/>chex.Array:</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Compute<sp/>a<sp/>mask<sp/>of<sp/>states<sp/>which<sp/>have<sp/>a<sp/>next<sp/>state<sp/>in<sp/>the<sp/>sequence.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>chex.assert_equal_shape((valid,<sp/>player_id))</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_loop_has_played(carry,<sp/>x):</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>valid,<sp/>player_id<sp/>=<sp/>x</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>chex.assert_equal_shape((valid,<sp/>player_id))</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>our_res<sp/>=<sp/>jnp.ones_like(player_id)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>opp_res<sp/>=<sp/>carry</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>reset_res<sp/>=<sp/>jnp.zeros_like(carry)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>our_carry<sp/>=<sp/>carry</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>opp_carry<sp/>=<sp/>carry</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>reset_carry<sp/>=<sp/>jnp.zeros_like(player_id)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pyformat:<sp/>disable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1ab7453b1839b4936883bf3200fee642fa" kindref="member">_where</ref>(valid,<sp/><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1ab7453b1839b4936883bf3200fee642fa" kindref="member">_where</ref>((player_id<sp/>==<sp/>player),</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(our_carry,<sp/>our_res),</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(opp_carry,<sp/>opp_res)),</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(reset_carry,<sp/>reset_res))</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pyformat:<sp/>enable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>_,<sp/>result<sp/>=<sp/>lax.scan(</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f=_loop_has_played,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>init=jnp.zeros_like(player_id[-1]),</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xs=(valid,<sp/>player_id),</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reverse=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">#<sp/>V-Trace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Custom<sp/>implementation<sp/>of<sp/>VTrace<sp/>to<sp/>handle<sp/>trajectories<sp/>having<sp/>a<sp/>mix<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment">#<sp/>different<sp/>player<sp/>steps.<sp/>The<sp/>standard<sp/>rlax.vtrace<sp/>can&apos;t<sp/>be<sp/>applied<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="comment">#<sp/>out<sp/>of<sp/>the<sp/>box<sp/>because<sp/>a<sp/>trajectory<sp/>could<sp/>look<sp/>like<sp/>&apos;121211221122&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397" refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1a81380b95401f321a5f8befcf35147411" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1a81380b95401f321a5f8befcf35147411" kindref="member">v_trace</ref>(</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>v:<sp/>chex.Array,</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>valid:<sp/>chex.Array,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>player_id:<sp/>chex.Array,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>acting_policy:<sp/>chex.Array,</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>merged_policy:<sp/>chex.Array,</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>merged_log_policy:<sp/>chex.Array,</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>player_others:<sp/>chex.Array,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>actions_oh:<sp/>chex.Array,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>reward:<sp/>chex.Array,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>player:<sp/>int,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Scalars<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>eta:<sp/>float,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>lambda_:<sp/>float,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>c:<sp/>float,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>rho:<sp/>float,</highlight></codeline>
<codeline lineno="413"><highlight class="normal">)<sp/>-&gt;<sp/>Tuple[Any,<sp/>Any,<sp/>Any]:</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Custom<sp/>VTrace<sp/>for<sp/>trajectories<sp/>with<sp/>a<sp/>mix<sp/>of<sp/>different<sp/>player<sp/>steps.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>gamma<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>has_played<sp/>=<sp/><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1abb90d97ed8e7c735f4246f3646227b86" kindref="member">_has_played</ref>(valid,<sp/>player_id,<sp/>player)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>policy_ratio<sp/>=<sp/><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1ac4170cd64ce2430ed104b2611230c6ab" kindref="member">_policy_ratio</ref>(merged_policy,<sp/>acting_policy,<sp/>actions_oh,<sp/>valid)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>inv_mu<sp/>=<sp/><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1ac4170cd64ce2430ed104b2611230c6ab" kindref="member">_policy_ratio</ref>(</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jnp.ones_like(merged_policy),<sp/>acting_policy,<sp/>actions_oh,<sp/>valid)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>eta_reg_entropy<sp/>=<sp/>(-eta<sp/>*</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jnp.sum(merged_policy<sp/>*<sp/>merged_log_policy,<sp/>axis=-1)<sp/>*</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jnp.squeeze(player_others,<sp/>axis=-1))</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>eta_log_policy<sp/>=<sp/>-eta<sp/>*<sp/>merged_log_policy<sp/>*<sp/>player_others</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">@chex.dataclass(frozen=True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LoopVTraceCarry:</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;The<sp/>carry<sp/>of<sp/>the<sp/>v-trace<sp/>scan<sp/>loop.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>reward:<sp/>chex.Array</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>cumulated<sp/>reward<sp/>until<sp/>the<sp/>end<sp/>of<sp/>the<sp/>episode.<sp/>Uncorrected<sp/>(v-trace).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Gamma<sp/>discounted<sp/>and<sp/>includes<sp/>eta_reg_entropy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>reward_uncorrected:<sp/>chex.Array</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>next_value:<sp/>chex.Array</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>next_v_target:<sp/>chex.Array</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>importance_sampling:<sp/>chex.Array</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>init_state_v_trace<sp/>=<sp/>LoopVTraceCarry(</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reward=jnp.zeros_like(reward[-1]),</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reward_uncorrected=jnp.zeros_like(reward[-1]),</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>next_value=jnp.zeros_like(v[-1]),</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>next_v_target=jnp.zeros_like(v[-1]),</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>importance_sampling=jnp.ones_like(policy_ratio[-1]))</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_loop_v_trace(carry:<sp/>LoopVTraceCarry,<sp/>x)<sp/>-&gt;<sp/>Tuple[LoopVTraceCarry,<sp/>Any]:</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>(cs,<sp/>player_id,<sp/>v,<sp/>reward,<sp/>eta_reg_entropy,<sp/>valid,<sp/>inv_mu,<sp/>actions_oh,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>eta_log_policy)<sp/>=<sp/>x</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>reward_uncorrected<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reward<sp/>+<sp/>gamma<sp/>*<sp/>carry.reward_uncorrected<sp/>+<sp/>eta_reg_entropy)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>discounted_reward<sp/>=<sp/>reward<sp/>+<sp/>gamma<sp/>*<sp/>carry.reward</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>V-target:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>our_v_target<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>+<sp/>jnp.expand_dims(</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jnp.minimum(rho,<sp/>cs<sp/>*<sp/>carry.importance_sampling),<sp/>axis=-1)<sp/>*</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(jnp.expand_dims(reward_uncorrected,<sp/>axis=-1)<sp/>+</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gamma<sp/>*<sp/>carry.next_value<sp/>-<sp/>v)<sp/>+<sp/>lambda_<sp/>*<sp/>jnp.expand_dims(</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jnp.minimum(c,<sp/>cs<sp/>*<sp/>carry.importance_sampling),<sp/>axis=-1)<sp/>*<sp/>gamma<sp/>*</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(carry.next_v_target<sp/>-<sp/>carry.next_value))</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>opp_v_target<sp/>=<sp/>jnp.zeros_like(our_v_target)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>reset_v_target<sp/>=<sp/>jnp.zeros_like(our_v_target)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Learning<sp/>output:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>our_learning_output<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>+<sp/><sp/></highlight><highlight class="comment">#<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eta_log_policy<sp/>+<sp/><sp/></highlight><highlight class="comment">#<sp/>regularisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actions_oh<sp/>*<sp/>jnp.expand_dims(inv_mu,<sp/>axis=-1)<sp/>*</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(jnp.expand_dims(discounted_reward,<sp/>axis=-1)<sp/>+<sp/>gamma<sp/>*<sp/>jnp.expand_dims(</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>carry.importance_sampling,<sp/>axis=-1)<sp/>*<sp/>carry.next_v_target<sp/>-<sp/>v))</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>opp_learning_output<sp/>=<sp/>jnp.zeros_like(our_learning_output)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>reset_learning_output<sp/>=<sp/>jnp.zeros_like(our_learning_output)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>State<sp/>carry:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>our_carry<sp/>=<sp/>LoopVTraceCarry(</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reward=jnp.zeros_like(carry.reward),</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_value=v,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_v_target=our_v_target,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reward_uncorrected=jnp.zeros_like(carry.reward_uncorrected),</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>importance_sampling=jnp.ones_like(carry.importance_sampling))</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>opp_carry<sp/>=<sp/>LoopVTraceCarry(</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reward=eta_reg_entropy<sp/>+<sp/>cs<sp/>*<sp/>discounted_reward,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reward_uncorrected=reward_uncorrected,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_value=gamma<sp/>*<sp/>carry.next_value,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_v_target=gamma<sp/>*<sp/>carry.next_v_target,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>importance_sampling=cs<sp/>*<sp/>carry.importance_sampling)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>reset_carry<sp/>=<sp/>init_state_v_trace</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Invalid<sp/>turn:<sp/>init_state_v_trace<sp/>and<sp/>(zero<sp/>target,<sp/>learning_output)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pyformat:<sp/>disable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1ab7453b1839b4936883bf3200fee642fa" kindref="member">_where</ref>(valid,<sp/><sp/></highlight><highlight class="comment">#<sp/>pytype:<sp/>disable=bad-return-type<sp/><sp/>#<sp/>numpy-scalars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1ab7453b1839b4936883bf3200fee642fa" kindref="member">_where</ref>((player_id<sp/>==<sp/>player),</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(our_carry,<sp/>(our_v_target,<sp/>our_learning_output)),</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(opp_carry,<sp/>(opp_v_target,<sp/>opp_learning_output))),</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(reset_carry,<sp/>(reset_v_target,<sp/>reset_learning_output)))</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pyformat:<sp/>enable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>_,<sp/>(v_target,<sp/>learning_output)<sp/>=<sp/>lax.scan(</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f=_loop_v_trace,</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>init=init_state_v_trace,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xs=(policy_ratio,<sp/>player_id,<sp/>v,<sp/>reward,<sp/>eta_reg_entropy,<sp/>valid,<sp/>inv_mu,</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actions_oh,<sp/>eta_log_policy),</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reverse=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v_target,<sp/>has_played,<sp/>learning_output</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511" refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1af8710d79494052c266890bd5afeedffe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1af8710d79494052c266890bd5afeedffe" kindref="member">get_loss_v</ref>(v_list:<sp/>Sequence[chex.Array],</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_target_list:<sp/>Sequence[chex.Array],</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask_list:<sp/>Sequence[chex.Array])<sp/>-&gt;<sp/>chex.Array:</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Define<sp/>the<sp/>loss<sp/>function<sp/>for<sp/>the<sp/>critic.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>chex.assert_trees_all_equal_shapes(v_list,<sp/>v_target_list)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>v_list<sp/>and<sp/>v_target_list<sp/>come<sp/>with<sp/>a<sp/>degenerate<sp/>trailing<sp/>dimension,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>which<sp/>mask_list<sp/>tensors<sp/>do<sp/>not<sp/>have.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>chex.assert_shape(mask_list,<sp/>v_list[0].shape[:-1])</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>loss_v_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(v_n,<sp/>v_target,<sp/>mask)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(v_list,<sp/>v_target_list,<sp/>mask_list):</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>v_n.shape[0]<sp/>==<sp/>v_target.shape[0]</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>loss_v<sp/>=<sp/>jnp.expand_dims(</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask,<sp/>axis=-1)<sp/>*<sp/>(v_n<sp/>-<sp/>lax.stop_gradient(v_target))**2</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>normalization<sp/>=<sp/>jnp.sum(mask)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>loss_v<sp/>=<sp/>jnp.sum(loss_v)<sp/>/<sp/>(normalization<sp/>+<sp/>(normalization<sp/>==<sp/>0.0))</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>loss_v_list.append(loss_v)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum(loss_v_list)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532" refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1a973cdb770eeee274f8afbce9757a6a5d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1a973cdb770eeee274f8afbce9757a6a5d" kindref="member">apply_force_with_threshold</ref>(decision_outputs:<sp/>chex.Array,<sp/>force:<sp/>chex.Array,</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threshold:<sp/>float,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threshold_center:<sp/>chex.Array)<sp/>-&gt;<sp/>chex.Array:</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Apply<sp/>the<sp/>force<sp/>with<sp/>below<sp/>a<sp/>given<sp/>threshold.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>chex.assert_equal_shape((decision_outputs,<sp/>force,<sp/>threshold_center))</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>can_decrease<sp/>=<sp/>decision_outputs<sp/>-<sp/>threshold_center<sp/>&gt;<sp/>-threshold</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>can_increase<sp/>=<sp/>decision_outputs<sp/>-<sp/>threshold_center<sp/>&lt;<sp/>threshold</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>force_negative<sp/>=<sp/>jnp.minimum(force,<sp/>0.0)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>force_positive<sp/>=<sp/>jnp.maximum(force,<sp/>0.0)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>clipped_force<sp/>=<sp/>can_decrease<sp/>*<sp/>force_negative<sp/>+<sp/>can_increase<sp/>*<sp/>force_positive</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>decision_outputs<sp/>*<sp/>lax.stop_gradient(clipped_force)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1ad41f3aee21a056a353308d48fddeec97" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1ad41f3aee21a056a353308d48fddeec97" kindref="member">renormalize</ref>(loss:<sp/>chex.Array,<sp/>mask:<sp/>chex.Array)<sp/>-&gt;<sp/>chex.Array:</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;The<sp/>`normalization`<sp/>is<sp/>the<sp/>number<sp/>of<sp/>steps<sp/>over<sp/>which<sp/>loss<sp/>is<sp/>computed.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/>chex.assert_equal_shape((loss,<sp/>mask))</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>loss<sp/>=<sp/>jnp.sum(loss<sp/>*<sp/>mask)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>normalization<sp/>=<sp/>jnp.sum(mask)</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loss<sp/>/<sp/>(normalization<sp/>+<sp/>(normalization<sp/>==<sp/>0.0))</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553" refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1a4b87ca6049d2cc87d36ab2ce24494567" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1a4b87ca6049d2cc87d36ab2ce24494567" kindref="member">get_loss_nerd</ref>(logit_list:<sp/>Sequence[chex.Array],</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>policy_list:<sp/>Sequence[chex.Array],</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q_vr_list:<sp/>Sequence[chex.Array],</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid:<sp/>chex.Array,</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player_ids:<sp/>Sequence[chex.Array],</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legal_actions:<sp/>chex.Array,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>importance_sampling_correction:<sp/>Sequence[chex.Array],</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip:<sp/>float<sp/>=<sp/>100,</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threshold:<sp/>float<sp/>=<sp/>2)<sp/>-&gt;<sp/>chex.Array:</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Define<sp/>the<sp/>nerd<sp/>loss.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>isinstance(importance_sampling_correction,<sp/>list)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>loss_pi_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>num_valid_actions<sp/>=<sp/>jnp.sum(legal_actions,<sp/>axis=-1,<sp/>keepdims=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k,<sp/>(logit_pi,<sp/>pi,<sp/>q_vr,<sp/>is_c)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zip(logit_list,<sp/>policy_list,<sp/>q_vr_list,<sp/>importance_sampling_correction)):</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>logit_pi.shape[0]<sp/>==<sp/>q_vr.shape[0]</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>loss<sp/>policy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>adv_pi<sp/>=<sp/>q_vr<sp/>-<sp/>jnp.sum(pi<sp/>*<sp/>q_vr,<sp/>axis=-1,<sp/>keepdims=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>adv_pi<sp/>=<sp/>is_c<sp/>*<sp/>adv_pi<sp/><sp/></highlight><highlight class="comment">#<sp/>importance<sp/>sampling<sp/>correction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>adv_pi<sp/>=<sp/>jnp.clip(adv_pi,<sp/>a_min=-clip,<sp/>a_max=clip)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>adv_pi<sp/>=<sp/>lax.stop_gradient(adv_pi)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>valid_logit_sum<sp/>=<sp/>jnp.sum(logit_pi<sp/>*<sp/>legal_actions,<sp/>axis=-1,<sp/>keepdims=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>mean_logit<sp/>=<sp/>valid_logit_sum<sp/>/<sp/>num_valid_actions</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Subtract<sp/>only<sp/>the<sp/>mean<sp/>of<sp/>the<sp/>valid<sp/>logits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>logits<sp/>=<sp/>logit_pi<sp/>-<sp/>mean_logit</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>threshold_center<sp/>=<sp/>jnp.zeros_like(logits)</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>nerd_loss<sp/>=<sp/>jnp.sum(</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legal_actions<sp/>*</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1a973cdb770eeee274f8afbce9757a6a5d" kindref="member">apply_force_with_threshold</ref>(logits,<sp/>adv_pi,<sp/>threshold,<sp/>threshold_center),</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axis=-1)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>nerd_loss<sp/>=<sp/>-<ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1ad41f3aee21a056a353308d48fddeec97" kindref="member">renormalize</ref>(nerd_loss,<sp/>valid<sp/>*<sp/>(player_ids<sp/>==<sp/>k))</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>loss_pi_list.append(nerd_loss)</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum(loss_pi_list)</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="preprocessor">@chex.dataclass(frozen=True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_adam_config" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_adam_config" kindref="compound">AdamConfig</ref>:</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Adam<sp/>optimizer<sp/>related<sp/>params.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_adam_config_1a713f002d040404abcccec6ee4cc0d3e5" refkind="member"><highlight class="normal"><sp/><sp/>b1:<sp/>float<sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="596" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_adam_config_1adc70b98eab353a4db60b3a7dbf56dfa8" refkind="member"><highlight class="normal"><sp/><sp/>b2:<sp/>float<sp/>=<sp/>0.999</highlight></codeline>
<codeline lineno="597" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_adam_config_1a8b343364d19ed753413426520aa04936" refkind="member"><highlight class="normal"><sp/><sp/>eps:<sp/>float<sp/>=<sp/>10e-8</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="preprocessor">@chex.dataclass(frozen=True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_nerd_config" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_nerd_config" kindref="compound">NerdConfig</ref>:</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Nerd<sp/>related<sp/>params.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_nerd_config_1a1c5cc7218a619c73c8636ae2148f1cbd" refkind="member"><highlight class="normal"><sp/><sp/>beta:<sp/>float<sp/>=<sp/>2.0</highlight></codeline>
<codeline lineno="604" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_nerd_config_1a7472af0e2fe0be034d83c5121e7f37bb" refkind="member"><highlight class="normal"><sp/><sp/>clip:<sp/>float<sp/>=<sp/>10_000</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_state_representation" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_state_representation" kindref="compound">StateRepresentation</ref>(str,<sp/>enum.Enum):</highlight></codeline>
<codeline lineno="608" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_state_representation_1a9d2507803c273c386a885cc7ac48988e" refkind="member"><highlight class="normal"><sp/><sp/>INFO_SET<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;info_set&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_state_representation_1a2898ed63e3a83b902c92bc06be629c5c" refkind="member"><highlight class="normal"><sp/><sp/>OBSERVATION<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;observation&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="preprocessor">@chex.dataclass(frozen=True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_config" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_config" kindref="compound">RNaDConfig</ref>:</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Configuration<sp/>parameters<sp/>for<sp/>the<sp/>RNaDSolver.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>game<sp/>parameter<sp/>string<sp/>including<sp/>its<sp/>name<sp/>and<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>game_name:<sp/>str</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>games<sp/>longer<sp/>than<sp/>this<sp/>value<sp/>are<sp/>truncated.<sp/>Must<sp/>be<sp/>strictly<sp/>positive.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_config_1a4b1d23db9b659589282593fd30cf5905" refkind="member"><highlight class="normal"><sp/><sp/>trajectory_max:<sp/>int<sp/>=<sp/>10</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>content<sp/>of<sp/>the<sp/>EnvStep.obs<sp/>tensor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_config_1a3874018d659ced3aa8c9a95e13646758" refkind="member"><highlight class="normal"><sp/><sp/>state_representation:<sp/>StateRepresentation<sp/>=<sp/>StateRepresentation.INFO_SET</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Network<sp/>configuration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_config_1ad6685cc124031a37c339f49af49b834a" refkind="member"><highlight class="normal"><sp/><sp/>policy_network_layers:<sp/>Sequence[int]<sp/>=<sp/>(256,<sp/>256)</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>batch<sp/>size<sp/>to<sp/>use<sp/>when<sp/>learning/improving<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_config_1a5916ec76bf64b5b8b23b04aaef65e6b7" refkind="member"><highlight class="normal"><sp/><sp/>batch_size:<sp/>int<sp/>=<sp/>256</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>learning<sp/>rate<sp/>for<sp/>`params`.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_config_1ac3c3b88100f7344df89b12c3f6042265" refkind="member"><highlight class="normal"><sp/><sp/>learning_rate:<sp/>float<sp/>=<sp/>0.00005</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>config<sp/>related<sp/>to<sp/>the<sp/>ADAM<sp/>optimizer<sp/>used<sp/>for<sp/>updating<sp/>`params`.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_config_1a1e6c46b327d7b19c21875678fc9bff0e" refkind="member"><highlight class="normal"><sp/><sp/>adam:<sp/>AdamConfig<sp/>=<sp/><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_adam_config" kindref="compound">AdamConfig</ref>()</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>All<sp/>gradients<sp/>values<sp/>are<sp/>clipped<sp/>to<sp/>[-clip_gradient,<sp/>clip_gradient].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_config_1a54d0919cddd0b57edce3076c5cbac50e" refkind="member"><highlight class="normal"><sp/><sp/>clip_gradient:<sp/>float<sp/>=<sp/>10_000</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>&quot;speed&quot;<sp/>at<sp/>which<sp/>`params_target`<sp/>is<sp/>following<sp/>`params`.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_config_1a2e513efc44b4f8be28bd2d1a0e8f5676" refkind="member"><highlight class="normal"><sp/><sp/>target_network_avg:<sp/>float<sp/>=<sp/>0.001</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>RNaD<sp/>algorithm<sp/>configuration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Entropy<sp/>schedule<sp/>configuration.<sp/>See<sp/>EntropySchedule<sp/>class<sp/>documentation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_config_1a48f67bc56d0deb44d11eb8cac720b458" refkind="member"><highlight class="normal"><sp/><sp/>entropy_schedule_repeats:<sp/>Sequence[int]<sp/>=<sp/>(1,)</highlight></codeline>
<codeline lineno="640" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_config_1ad8052a9c5ed88540d2396f78ce327d94" refkind="member"><highlight class="normal"><sp/><sp/>entropy_schedule_size:<sp/>Sequence[int]<sp/>=<sp/>(20_000,)</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>weight<sp/>of<sp/>the<sp/>reward<sp/>regularisation<sp/>term<sp/>in<sp/>RNaD.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_config_1ac91b637b4a2018c320681560a6495893" refkind="member"><highlight class="normal"><sp/><sp/>eta_reward_transform:<sp/>float<sp/>=<sp/>0.2</highlight></codeline>
<codeline lineno="643" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_config_1a112acc196f3e47b6a0a0c1fc8521c987" refkind="member"><highlight class="normal"><sp/><sp/>nerd:<sp/>NerdConfig<sp/>=<sp/><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_nerd_config" kindref="compound">NerdConfig</ref>()</highlight></codeline>
<codeline lineno="644" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_config_1a2ec5ad5d903dfb1b276d443646732383" refkind="member"><highlight class="normal"><sp/><sp/>c_vtrace:<sp/>float<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Options<sp/>related<sp/>to<sp/>fine<sp/>tuning<sp/>of<sp/>the<sp/>agent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_config_1a3c7c9f95e3ab355c760775e854692574" refkind="member"><highlight class="normal"><sp/><sp/>finetune:<sp/>FineTuning<sp/>=<sp/><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_fine_tuning" kindref="compound">FineTuning</ref>()</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>seed<sp/>that<sp/>fully<sp/>controls<sp/>the<sp/>randomness.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_config_1a661ccd859b5dcc75719adf5c0af85906" refkind="member"><highlight class="normal"><sp/><sp/>seed:<sp/>int<sp/>=<sp/>42</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="preprocessor">@chex.dataclass(frozen=True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_env_step" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_env_step" kindref="compound">EnvStep</ref>:</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Holds<sp/>the<sp/>tensor<sp/>data<sp/>representing<sp/>the<sp/>current<sp/>game<sp/>state.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Indicates<sp/>whether<sp/>the<sp/>state<sp/>is<sp/>a<sp/>valid<sp/>one<sp/>or<sp/>just<sp/>a<sp/>padding.<sp/>Shape:<sp/>[...]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>terminal<sp/>state<sp/>being<sp/>the<sp/>first<sp/>one<sp/>to<sp/>be<sp/>marked<sp/>!valid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>All<sp/>other<sp/>tensors<sp/>in<sp/>EnvStep<sp/>contain<sp/>data,<sp/>but<sp/>only<sp/>for<sp/>valid<sp/>timesteps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Once<sp/>!valid<sp/>the<sp/>data<sp/>needs<sp/>to<sp/>be<sp/>ignored,<sp/>since<sp/>it&apos;s<sp/>a<sp/>duplicate<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>some<sp/>other<sp/>previous<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>rewards<sp/>is<sp/>the<sp/>only<sp/>exception<sp/>that<sp/>contains<sp/>reward<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>in<sp/>the<sp/>terminal<sp/>state,<sp/>which<sp/>is<sp/>marked<sp/>!valid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO(author16):<sp/>This<sp/>is<sp/>a<sp/>confusion<sp/>point<sp/>and<sp/>would<sp/>need<sp/>to<sp/>be<sp/>clarified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_env_step_1af8bcda6cc2a1858d088aed3104f5431c" refkind="member"><highlight class="normal"><sp/><sp/>valid:<sp/>chex.Array<sp/>=<sp/>()<sp/><sp/></highlight><highlight class="comment">#<sp/>pytype:<sp/>disable=annotation-type-mismatch<sp/><sp/>#<sp/>numpy-scalars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>single<sp/>tensor<sp/>representing<sp/>the<sp/>state<sp/>observation.<sp/>Shape:<sp/>[...,<sp/>??]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_env_step_1aef795bfba5562869f6014fc9307d3a93" refkind="member"><highlight class="normal"><sp/><sp/>obs:<sp/>chex.Array<sp/>=<sp/>()<sp/><sp/></highlight><highlight class="comment">#<sp/>pytype:<sp/>disable=annotation-type-mismatch<sp/><sp/>#<sp/>numpy-scalars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>legal<sp/>actions<sp/>mask<sp/>for<sp/>the<sp/>current<sp/>player.<sp/>Shape:<sp/>[...,<sp/>A]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_env_step_1a967ce6d115ff9cb7cd50bf3515efbfee" refkind="member"><highlight class="normal"><sp/><sp/>legal:<sp/>chex.Array<sp/>=<sp/>()<sp/><sp/></highlight><highlight class="comment">#<sp/>pytype:<sp/>disable=annotation-type-mismatch<sp/><sp/>#<sp/>numpy-scalars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>current<sp/>player<sp/>id<sp/>as<sp/>an<sp/>int.<sp/>Shape:<sp/>[...]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_env_step_1aa5c9b99f24d971a1f4fa1299a40c0486" refkind="member"><highlight class="normal"><sp/><sp/>player_id:<sp/>chex.Array<sp/>=<sp/>()<sp/><sp/></highlight><highlight class="comment">#<sp/>pytype:<sp/>disable=annotation-type-mismatch<sp/><sp/>#<sp/>numpy-scalars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>rewards<sp/>of<sp/>all<sp/>the<sp/>players.<sp/>Shape:<sp/>[...,<sp/>P]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_env_step_1a77673298df7e0b351f325267ad64dd1e" refkind="member"><highlight class="normal"><sp/><sp/>rewards:<sp/>chex.Array<sp/>=<sp/>()<sp/><sp/></highlight><highlight class="comment">#<sp/>pytype:<sp/>disable=annotation-type-mismatch<sp/><sp/>#<sp/>numpy-scalars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="preprocessor">@chex.dataclass(frozen=True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_actor_step" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_actor_step" kindref="compound">ActorStep</ref>:</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;The<sp/>actor<sp/>step<sp/>tensor<sp/>summary.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>action<sp/>(as<sp/>one-hot)<sp/>of<sp/>the<sp/>current<sp/>player.<sp/>Shape:<sp/>[...,<sp/>A]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_actor_step_1a222eae329a9daae73e66ac83e6bfcdc5" refkind="member"><highlight class="normal"><sp/><sp/>action_oh:<sp/>chex.Array<sp/>=<sp/>()<sp/><sp/></highlight><highlight class="comment">#<sp/>pytype:<sp/>disable=annotation-type-mismatch<sp/><sp/>#<sp/>numpy-scalars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>policy<sp/>of<sp/>the<sp/>current<sp/>player.<sp/>Shape:<sp/>[...,<sp/>A]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_actor_step_1a17827d5db7fa2da205b8e0f64e4c3831" refkind="member"><highlight class="normal"><sp/><sp/>policy:<sp/>chex.Array<sp/>=<sp/>()<sp/><sp/></highlight><highlight class="comment">#<sp/>pytype:<sp/>disable=annotation-type-mismatch<sp/><sp/>#<sp/>numpy-scalars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>rewards<sp/>of<sp/>all<sp/>the<sp/>players.<sp/>Shape:<sp/>[...,<sp/>P]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Note<sp/>-<sp/>these<sp/>are<sp/>rewards<sp/>obtained<sp/>*after*<sp/>the<sp/>actor<sp/>step,<sp/>and<sp/>thus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>these<sp/>are<sp/>the<sp/>same<sp/>as<sp/>EnvStep.rewards<sp/>visible<sp/>before<sp/>the<sp/>*next*<sp/>step.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_actor_step_1a61ec07d2cf3e890d9830a7e632f076d4" refkind="member"><highlight class="normal"><sp/><sp/>rewards:<sp/>chex.Array<sp/>=<sp/>()<sp/><sp/></highlight><highlight class="comment">#<sp/>pytype:<sp/>disable=annotation-type-mismatch<sp/><sp/>#<sp/>numpy-scalars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="preprocessor">@chex.dataclass(frozen=True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_time_step" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_time_step" kindref="compound">TimeStep</ref>:</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;The<sp/>tensor<sp/>data<sp/>for<sp/>one<sp/>game<sp/>transition<sp/>(env_step,<sp/>actor_step).&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_time_step_1a76357ffde261131a461ece25d261c013" refkind="member"><highlight class="normal"><sp/><sp/>env:<sp/>EnvStep<sp/>=<sp/><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_env_step" kindref="compound">EnvStep</ref>()</highlight></codeline>
<codeline lineno="692" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_time_step_1a4afa09e2cab137aa81f714911bc3921e" refkind="member"><highlight class="normal"><sp/><sp/>actor:<sp/>ActorStep<sp/>=<sp/><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_actor_step" kindref="compound">ActorStep</ref>()</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695" refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1aeefc704975bea5c0744ce3cf67bfbda5" refkind="member"><highlight class="normal">Optimizer<sp/>=<sp/>Callable[[Params,<sp/>Params],<sp/>Params]<sp/><sp/></highlight><highlight class="comment">#<sp/>(params,<sp/>grads)<sp/>-&gt;<sp/>params</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698" refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1a0ff06c6cd882dd14f4d8a0cfa543fc39" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1a0ff06c6cd882dd14f4d8a0cfa543fc39" kindref="member">optax_optimizer</ref>(</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>params:<sp/>chex.ArrayTree,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>init_and_update:<sp/>optax.GradientTransformation)<sp/>-&gt;<sp/>Optimizer:</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Creates<sp/>a<sp/>parameterized<sp/>function<sp/>that<sp/>represents<sp/>an<sp/>optimizer.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/>init_fn,<sp/>update_fn<sp/>=<sp/>init_and_update<sp/></highlight><highlight class="comment">#<sp/>optax.GradientTransformation<sp/>얘가<sp/>그냥<sp/>변수<sp/>두개<sp/>들어있는<sp/>클래스</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">@chex.dataclass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">OptaxOptimizer:</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;A<sp/>jax-friendly<sp/>representation<sp/>of<sp/>an<sp/>optimizer<sp/>state<sp/>with<sp/>the<sp/>update.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>state:<sp/>chex.Array</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__call__(self,<sp/>params:<sp/>Params,<sp/>grads:<sp/>Params)<sp/>-&gt;<sp/>Params:</highlight></codeline>
<codeline lineno="710" refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1a8ac8b8cd71b67616a4dea57f981a5b91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>updates,<sp/>self.state<sp/>=<sp/>update_fn(grads,<sp/>self.state)<sp/><sp/></highlight><highlight class="comment">#<sp/>pytype:<sp/>disable=annotation-type-mismatch<sp/><sp/>#<sp/>numpy-scalars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>optax.apply_updates(params,<sp/>updates)</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OptaxOptimizer(state=init_fn(params))</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="716" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver" kindref="compound">RNaDSolver</ref>(policy_lib.Policy):</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Implements<sp/>a<sp/>solver<sp/>for<sp/>the<sp/>R-NaD<sp/>Algorithm.</highlight></codeline>
<codeline lineno="718"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="719"><highlight class="stringliteral"><sp/><sp/>See<sp/>https://arxiv.org/abs/2206.15378.</highlight></codeline>
<codeline lineno="720"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="721"><highlight class="stringliteral"><sp/><sp/>Define<sp/>all<sp/>networks.<sp/>Derive<sp/>losses<sp/>&amp;<sp/>learning<sp/>steps.<sp/>Initialize<sp/>the<sp/>game</highlight></codeline>
<codeline lineno="722"><highlight class="stringliteral"><sp/><sp/>state<sp/>and<sp/>algorithmic<sp/>variables.</highlight></codeline>
<codeline lineno="723"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a4a5b0a4ddd3cbd6313e19745bf8607e7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a4a5b0a4ddd3cbd6313e19745bf8607e7" kindref="member">__init__</ref>(self,<sp/>config:<sp/>RNaDConfig):</highlight></codeline>
<codeline lineno="726" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a579b3948496b6f60b6c8f093bf62e294" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a579b3948496b6f60b6c8f093bf62e294" kindref="member">config</ref><sp/>=<sp/>config</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Learner<sp/>and<sp/>actor<sp/>step<sp/>counters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a43e78d0f16faa3272e825896fb20f9f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a43e78d0f16faa3272e825896fb20f9f7" kindref="member">learner_steps</ref><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="730" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a4e148caa5741ebb5c77262488fd0a854" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a4e148caa5741ebb5c77262488fd0a854" kindref="member">actor_steps</ref><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a7f7a4d71f42bf84d07b88fbbe407dbc6" kindref="member">init</ref>()</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a7f7a4d71f42bf84d07b88fbbe407dbc6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a7f7a4d71f42bf84d07b88fbbe407dbc6" kindref="member">init</ref>(self):</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Initialize<sp/>the<sp/>network<sp/>and<sp/>losses.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>random<sp/>facilities<sp/>for<sp/>jax<sp/>and<sp/>numpy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a73ea6dc6c3738e775794ebae572378d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a73ea6dc6c3738e775794ebae572378d1" kindref="member">_rngkey</ref><sp/>=<sp/>jax.random.PRNGKey(self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a579b3948496b6f60b6c8f093bf62e294" kindref="member">config</ref>.seed)</highlight></codeline>
<codeline lineno="738" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1ab15a3ac45ce2c2c52832950432488cb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1ab15a3ac45ce2c2c52832950432488cb9" kindref="member">_np_rng</ref><sp/>=<sp/>np.random.RandomState(self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a579b3948496b6f60b6c8f093bf62e294" kindref="member">config</ref>.seed)</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO(author16):<sp/>serialize<sp/>both<sp/>above<sp/>to<sp/>get<sp/>the<sp/>fully<sp/>deterministic<sp/>behaviour.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>a<sp/>game<sp/>and<sp/>an<sp/>example<sp/>of<sp/>a<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>0.<sp/>게임<sp/>생성<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a8b79f63921dd584113611874377dfbc7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a8b79f63921dd584113611874377dfbc7" kindref="member">_game</ref><sp/>=<sp/>pyspiel.load_game(self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a579b3948496b6f60b6c8f093bf62e294" kindref="member">config</ref>.game_name)</highlight></codeline>
<codeline lineno="744" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1ad96e38a787bf36ed3e0df939ca791e6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1ad96e38a787bf36ed3e0df939ca791e6c" kindref="member">_ex_state</ref><sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1affec6d365e4a7898bb53258436405889" kindref="member">_play_chance</ref>(self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a8b79f63921dd584113611874377dfbc7" kindref="member">_game</ref>.new_initial_state())</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>network.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1afd70d281b51a6f4a881c545876e845a6" kindref="member">network</ref>(</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env_step:<sp/>EnvStep</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>-&gt;<sp/>Tuple[chex.Array,<sp/>chex.Array,<sp/>chex.Array,<sp/>chex.Array]:</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>1.<sp/>본체<sp/>몸통<sp/>망을<sp/>만들고</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mlp_torso<sp/>=<sp/>hk.nets.MLP(</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a579b3948496b6f60b6c8f093bf62e294" kindref="member">config</ref>.policy_network_layers,<sp/>activate_final=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>2.<sp/>현재<sp/>obs<sp/>를<sp/>본체<sp/>몸통<sp/>망에<sp/>통과시키고</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>torso<sp/>=<sp/>mlp_torso(env_step.obs)</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>3.<sp/>액션<sp/>선택<sp/>정책<sp/>헤드를<sp/>만들고</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mlp_policy_head<sp/>=<sp/>hk.nets.MLP([self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a8b79f63921dd584113611874377dfbc7" kindref="member">_game</ref>.num_distinct_actions()])</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>4.<sp/>본체망<sp/>통과된<sp/>결과물을<sp/>헤드에<sp/>통과<sp/>시키고</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logit<sp/>=<sp/>mlp_policy_head(torso)</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>5.<sp/>가치<sp/>정책<sp/>망<sp/>만들고</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mlp_policy_value<sp/>=<sp/>hk.nets.MLP([1])</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>6.<sp/>본체망<sp/>통과된<sp/>결과물을<sp/>가치망에<sp/>통과시키고</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>mlp_policy_value(torso)</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pi<sp/>=<sp/><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1a7a6f2614b688c26b71aeb30b721b0825" kindref="member">_legal_policy</ref>(logit,<sp/>env_step.legal)</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>log_pi<sp/>=<sp/><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1a3facb6eae59a330344ca2b62d9f1db50" kindref="member">legal_log_policy</ref>(logit,<sp/>env_step.legal)</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pi,<sp/>v,<sp/>log_pi,<sp/>logit</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>네트워크<sp/>생성<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1afd70d281b51a6f4a881c545876e845a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1afd70d281b51a6f4a881c545876e845a6" kindref="member">network</ref><sp/>=<sp/>hk.without_apply_rng(hk.transform(network))</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>machinery<sp/>related<sp/>to<sp/>updating<sp/>parameters/learner.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1afddb8e926f6fde5d663ba3356910ba8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1afddb8e926f6fde5d663ba3356910ba8c" kindref="member">_entropy_schedule</ref><sp/>=<sp/><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_entropy_schedule" kindref="compound">EntropySchedule</ref>(</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizes=self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a579b3948496b6f60b6c8f093bf62e294" kindref="member">config</ref>.entropy_schedule_size,</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repeats=self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a579b3948496b6f60b6c8f093bf62e294" kindref="member">config</ref>.entropy_schedule_repeats)</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>def<sp/>loss<sp/>함수<sp/>&apos;값,<sp/>미분&apos;<sp/>하는<sp/>함수<sp/>만든다.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>7.<sp/>손실<sp/>함수<sp/>생성<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1abd7a8db27eb155eda7abea698ca24ee5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1abd7a8db27eb155eda7abea698ca24ee5" kindref="member">_loss_and_grad</ref><sp/>=<sp/>jax.value_and_grad(self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a1cbf7990a16406fd29bd56d1988d5c58" kindref="member">loss</ref>,<sp/>has_aux=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>initial<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>env_step<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a3c3f02e55d4e8d2d80907f52afbdd5e4" kindref="member">_state_as_env_step</ref>(self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1ad96e38a787bf36ed3e0df939ca791e6c" kindref="member">_ex_state</ref>)</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>key<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a260f26b058a1957adc5b4f04714fff50" kindref="member">_next_rng_key</ref>()<sp/><sp/></highlight><highlight class="comment">#<sp/>Make<sp/>sure<sp/>to<sp/>use<sp/>the<sp/>same<sp/>key<sp/>for<sp/>all.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>8.<sp/>하이쿠<sp/>순수<sp/>함수<sp/>초기화<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1aafd5a3031eadac063f5d222876ad69c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1aafd5a3031eadac063f5d222876ad69c4" kindref="member">params</ref><sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1afd70d281b51a6f4a881c545876e845a6" kindref="member">network</ref>.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a7f7a4d71f42bf84d07b88fbbe407dbc6" kindref="member">init</ref>(key,<sp/>env_step)</highlight></codeline>
<codeline lineno="792" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a2e21ac00ff1eaa5d79e19dcba0943d36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a2e21ac00ff1eaa5d79e19dcba0943d36" kindref="member">params_target</ref><sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1afd70d281b51a6f4a881c545876e845a6" kindref="member">network</ref>.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a7f7a4d71f42bf84d07b88fbbe407dbc6" kindref="member">init</ref>(key,<sp/>env_step)</highlight></codeline>
<codeline lineno="793" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a7f9e162873fb409199f37d76934865ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a7f9e162873fb409199f37d76934865ec" kindref="member">params_prev</ref><sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1afd70d281b51a6f4a881c545876e845a6" kindref="member">network</ref>.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a7f7a4d71f42bf84d07b88fbbe407dbc6" kindref="member">init</ref>(key,<sp/>env_step)</highlight></codeline>
<codeline lineno="794" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a3ed39566e229df9f1275e8cc0fd57aaa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a3ed39566e229df9f1275e8cc0fd57aaa" kindref="member">params_prev_</ref><sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1afd70d281b51a6f4a881c545876e845a6" kindref="member">network</ref>.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a7f7a4d71f42bf84d07b88fbbe407dbc6" kindref="member">init</ref>(key,<sp/>env_step)</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Parameter<sp/>optimizers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>9.<sp/>optimzer<sp/>생성<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a5f7a8400f1dfeeb8f19c92fc80f6d0b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a5f7a8400f1dfeeb8f19c92fc80f6d0b2" kindref="member">optimizer</ref><sp/>=<sp/><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1a0ff06c6cd882dd14f4d8a0cfa543fc39" kindref="member">optax_optimizer</ref>(</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1aafd5a3031eadac063f5d222876ad69c4" kindref="member">params</ref>,</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optax.chain(</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optax.scale_by_adam(eps_root=0.0,<sp/>**self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a579b3948496b6f60b6c8f093bf62e294" kindref="member">config</ref>.adam,),<sp/></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optax.scale(-self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a579b3948496b6f60b6c8f093bf62e294" kindref="member">config</ref>.learning_rate),</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optax.clip(self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a579b3948496b6f60b6c8f093bf62e294" kindref="member">config</ref>.clip_gradient)</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="806" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1ae8d990e1edfae8c3eee9909d710c3369" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1ae8d990e1edfae8c3eee9909d710c3369" kindref="member">optimizer_target</ref><sp/>=<sp/><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1a0ff06c6cd882dd14f4d8a0cfa543fc39" kindref="member">optax_optimizer</ref>(</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a2e21ac00ff1eaa5d79e19dcba0943d36" kindref="member">params_target</ref>,<sp/>optax.sgd(self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a579b3948496b6f60b6c8f093bf62e294" kindref="member">config</ref>.target_network_avg))</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a1cbf7990a16406fd29bd56d1988d5c58" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a1cbf7990a16406fd29bd56d1988d5c58" kindref="member">loss</ref>(self,<sp/>params:<sp/>Params,<sp/>params_target:<sp/>Params,<sp/>params_prev:<sp/>Params,</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params_prev_:<sp/>Params,<sp/>ts:<sp/>TimeStep,<sp/>alpha:<sp/>float,</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>learner_steps:<sp/>int)<sp/>-&gt;<sp/>float:</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.network<sp/>=<sp/>transformed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>rollout<sp/>=<sp/>jax.vmap(self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1afd70d281b51a6f4a881c545876e845a6" kindref="member">network</ref>.apply,<sp/>(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>0),<sp/>0)</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>pi,<sp/>v,<sp/>log_pi,<sp/>logit<sp/>=<sp/>rollout(params,<sp/>ts.env)</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>policy_pprocessed<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a579b3948496b6f60b6c8f093bf62e294" kindref="member">config</ref>.finetune(pi,<sp/>ts.env.legal,<sp/>learner_steps)</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>_,<sp/>v_target,<sp/>_,<sp/>_<sp/>=<sp/>rollout(params_target,<sp/>ts.env)</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>_,<sp/>_,<sp/>log_pi_prev,<sp/>_<sp/>=<sp/>rollout(params_prev,<sp/>ts.env)</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>_,<sp/>_,<sp/>log_pi_prev_,<sp/>_<sp/>=<sp/>rollout(params_prev_,<sp/>ts.env)</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>line<sp/>creates<sp/>the<sp/>reward<sp/>transform<sp/>log(pi(a|x)/pi_reg(a|x)).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>For<sp/>the<sp/>stability<sp/>reasons,<sp/>reward<sp/>changes<sp/>smoothly<sp/>between<sp/>iterations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>mixing<sp/>between<sp/>old<sp/>and<sp/>new<sp/>reward<sp/>transform<sp/>is<sp/>a<sp/>convex<sp/>combination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>parametrised<sp/>by<sp/>alpha.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>log_policy_reg<sp/>=<sp/>log_pi<sp/>-<sp/>(alpha<sp/>*<sp/>log_pi_prev<sp/>+<sp/>(1<sp/>-<sp/>alpha)<sp/>*<sp/>log_pi_prev_)</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>v_target_list,<sp/>has_played_list,<sp/>v_trace_policy_target_list<sp/>=<sp/>[],<sp/>[],<sp/>[]</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>player<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a8b79f63921dd584113611874377dfbc7" kindref="member">_game</ref>.num_players()):</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reward<sp/>=<sp/>ts.actor.rewards[:,<sp/>:,<sp/>player]<sp/><sp/></highlight><highlight class="comment">#<sp/>[T,<sp/>B,<sp/>Player]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v_target_,<sp/>has_played,<sp/>policy_target_<sp/>=<sp/><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1a81380b95401f321a5f8befcf35147411" kindref="member">v_trace</ref>(</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_target,</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ts.env.valid,</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ts.env.player_id,</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ts.actor.policy,</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>policy_pprocessed,</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_policy_reg,</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1a4b23dcb30573c752adb2aad69108ad25" kindref="member">_player_others</ref>(ts.env.player_id,<sp/>ts.env.valid,<sp/>player),</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ts.actor.action_oh,</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reward,</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player,</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lambda_=1.0,</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c=self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a579b3948496b6f60b6c8f093bf62e294" kindref="member">config</ref>.c_vtrace,</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rho=np.inf,</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eta=self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a579b3948496b6f60b6c8f093bf62e294" kindref="member">config</ref>.eta_reward_transform)</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v_target_list.append(v_target_)</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>has_played_list.append(has_played)</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v_trace_policy_target_list.append(policy_target_)</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>loss_v<sp/>=<sp/><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1af8710d79494052c266890bd5afeedffe" kindref="member">get_loss_v</ref>([v]<sp/>*<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a8b79f63921dd584113611874377dfbc7" kindref="member">_game</ref>.num_players(),<sp/>v_target_list,</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_played_list)</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>is_vector<sp/>=<sp/>jnp.expand_dims(jnp.ones_like(ts.env.valid),<sp/>axis=-1)</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>importance_sampling_correction<sp/>=<sp/>[is_vector]<sp/>*<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a8b79f63921dd584113611874377dfbc7" kindref="member">_game</ref>.num_players()</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Uses<sp/>v-trace<sp/>to<sp/>define<sp/>q-values<sp/>for<sp/>Nerd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>loss_nerd<sp/>=<sp/><ref refid="namespaceopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1a4b87ca6049d2cc87d36ab2ce24494567" kindref="member">get_loss_nerd</ref>(</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[logit]<sp/>*<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a8b79f63921dd584113611874377dfbc7" kindref="member">_game</ref>.num_players(),<sp/>[pi]<sp/>*<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a8b79f63921dd584113611874377dfbc7" kindref="member">_game</ref>.num_players(),</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_trace_policy_target_list,</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ts.env.valid,</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ts.env.player_id,</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ts.env.legal,</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>importance_sampling_correction,</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip=self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a579b3948496b6f60b6c8f093bf62e294" kindref="member">config</ref>.nerd.clip,</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threshold=self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a579b3948496b6f60b6c8f093bf62e294" kindref="member">config</ref>.nerd.beta)</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loss_v<sp/>+<sp/>loss_nerd<sp/><sp/></highlight><highlight class="comment">#<sp/>pytype:<sp/>disable=bad-return-type<sp/><sp/>#<sp/>numpy-scalars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">@functools.partial(jax.jit,<sp/>static_argnums=(0,)</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="867" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1add79449167b846f91eb372c8b84e6913" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1add79449167b846f91eb372c8b84e6913" kindref="member">update_parameters</ref>(</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self,</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>params:<sp/>Params,</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>params_target:<sp/>Params,</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>params_prev:<sp/>Params,</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>params_prev_:<sp/>Params,</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>optimizer:<sp/>Optimizer,</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>optimizer_target:<sp/>Optimizer,</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timestep:<sp/>TimeStep,</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alpha:<sp/>float,</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>learner_steps:<sp/>int,</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>update_target_net:<sp/>bool):</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>손실함수<sp/>값,<sp/>미분값<sp/>구하기<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;A<sp/>jitted<sp/>pure-functional<sp/>part<sp/>of<sp/>the<sp/>`step`.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>loss_val,<sp/>grad<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1abd7a8db27eb155eda7abea698ca24ee5" kindref="member">_loss_and_grad</ref>(params,<sp/>params_target,<sp/>params_prev,</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params_prev_,<sp/>timestep,<sp/>alpha,</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>learner_steps)</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Update<sp/>`params``<sp/>using<sp/>the<sp/>computed<sp/>gradient.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>params<sp/>=<sp/><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a5f7a8400f1dfeeb8f19c92fc80f6d0b2" kindref="member">optimizer</ref>(params,<sp/>grad)</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Update<sp/>`params_target`<sp/>towards<sp/>`params`.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>params_target<sp/>=<sp/><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1ae8d990e1edfae8c3eee9909d710c3369" kindref="member">optimizer_target</ref>(</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params_target,<sp/>tree.tree_map(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>a,<sp/>b:<sp/>a<sp/>-<sp/>b,<sp/>params_target,<sp/>params))</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Rolls<sp/>forward<sp/>the<sp/>prev<sp/>and<sp/>prev_<sp/>params<sp/>if<sp/>update_target_net<sp/>is<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pyformat:<sp/>disable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>params_prev,<sp/>params_prev_<sp/>=<sp/>jax.lax.cond(</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>update_target_net,</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal">:<sp/>(params_target,<sp/>params_prev),</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal">:<sp/>(params_prev,<sp/>params_prev_))</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pyformat:<sp/>enable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>logs<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;loss&quot;</highlight><highlight class="normal">:<sp/>loss_val,</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(params,<sp/>params_target,<sp/>params_prev,<sp/>params_prev_,<sp/>optimizer,</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimizer_target),<sp/>logs</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1ae9e75be308a669b863dda36d7553eb7b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1ae9e75be308a669b863dda36d7553eb7b" kindref="member">__getstate__</ref>(self):</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;To<sp/>serialize<sp/>the<sp/>agent.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dict(</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>RNaD<sp/>config.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config=self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a579b3948496b6f60b6c8f093bf62e294" kindref="member">config</ref>,</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Learner<sp/>and<sp/>actor<sp/>step<sp/>counters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>learner_steps=self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a43e78d0f16faa3272e825896fb20f9f7" kindref="member">learner_steps</ref>,</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actor_steps=self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a4e148caa5741ebb5c77262488fd0a854" kindref="member">actor_steps</ref>,</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>randomness<sp/>keys.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np_rng=self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1ab15a3ac45ce2c2c52832950432488cb9" kindref="member">_np_rng</ref>.get_state(),</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rngkey=self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a73ea6dc6c3738e775794ebae572378d1" kindref="member">_rngkey</ref>,</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Network<sp/>params.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params=self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1aafd5a3031eadac063f5d222876ad69c4" kindref="member">params</ref>,</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params_target=self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a2e21ac00ff1eaa5d79e19dcba0943d36" kindref="member">params_target</ref>,</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params_prev=self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a7f9e162873fb409199f37d76934865ec" kindref="member">params_prev</ref>,</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params_prev_=self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a3ed39566e229df9f1275e8cc0fd57aaa" kindref="member">params_prev_</ref>,</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Optimizer<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimizer=self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a5f7a8400f1dfeeb8f19c92fc80f6d0b2" kindref="member">optimizer</ref>.state,<sp/><sp/></highlight><highlight class="comment">#<sp/>pytype:<sp/>disable=attribute-error<sp/><sp/>#<sp/>always-use-return-annotations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimizer_target=self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1ae8d990e1edfae8c3eee9909d710c3369" kindref="member">optimizer_target</ref>.state,<sp/><sp/></highlight><highlight class="comment">#<sp/>pytype:<sp/>disable=attribute-error<sp/><sp/>#<sp/>always-use-return-annotations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1ab952b8e7473cf001be5f9448c8617855" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1ab952b8e7473cf001be5f9448c8617855" kindref="member">__setstate__</ref>(self,<sp/>state):</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;To<sp/>deserialize<sp/>the<sp/>agent.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>RNaD<sp/>config.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a579b3948496b6f60b6c8f093bf62e294" kindref="member">config</ref><sp/>=<sp/>state[</highlight><highlight class="stringliteral">&quot;config&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a7f7a4d71f42bf84d07b88fbbe407dbc6" kindref="member">init</ref>()</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Learner<sp/>and<sp/>actor<sp/>step<sp/>counters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a43e78d0f16faa3272e825896fb20f9f7" kindref="member">learner_steps</ref><sp/>=<sp/>state[</highlight><highlight class="stringliteral">&quot;learner_steps&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a4e148caa5741ebb5c77262488fd0a854" kindref="member">actor_steps</ref><sp/>=<sp/>state[</highlight><highlight class="stringliteral">&quot;actor_steps&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>randomness<sp/>keys.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1ab15a3ac45ce2c2c52832950432488cb9" kindref="member">_np_rng</ref>.set_state(state[</highlight><highlight class="stringliteral">&quot;np_rng&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a73ea6dc6c3738e775794ebae572378d1" kindref="member">_rngkey</ref><sp/>=<sp/>state[</highlight><highlight class="stringliteral">&quot;rngkey&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Network<sp/>params.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1aafd5a3031eadac063f5d222876ad69c4" kindref="member">params</ref><sp/>=<sp/>state[</highlight><highlight class="stringliteral">&quot;params&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a2e21ac00ff1eaa5d79e19dcba0943d36" kindref="member">params_target</ref><sp/>=<sp/>state[</highlight><highlight class="stringliteral">&quot;params_target&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a7f9e162873fb409199f37d76934865ec" kindref="member">params_prev</ref><sp/>=<sp/>state[</highlight><highlight class="stringliteral">&quot;params_prev&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a3ed39566e229df9f1275e8cc0fd57aaa" kindref="member">params_prev_</ref><sp/>=<sp/>state[</highlight><highlight class="stringliteral">&quot;params_prev_&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Optimizer<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a5f7a8400f1dfeeb8f19c92fc80f6d0b2" kindref="member">optimizer</ref>.state<sp/>=<sp/>state[</highlight><highlight class="stringliteral">&quot;optimizer&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1ae8d990e1edfae8c3eee9909d710c3369" kindref="member">optimizer_target</ref>.state<sp/>=<sp/>state[</highlight><highlight class="stringliteral">&quot;optimizer_target&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1aadd1611b3e8d5c6633cf66d357078d17" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1aadd1611b3e8d5c6633cf66d357078d17" kindref="member">step</ref>(self):</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;One<sp/>step<sp/>of<sp/>the<sp/>algorithm,<sp/>that<sp/>plays<sp/>the<sp/>game<sp/>and<sp/>improves<sp/>params.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>11.<sp/>States<sp/>생성,<sp/>최대<sp/>게임기일이<sp/>만큼<sp/>루프돌며<sp/>액션적용<sp/>상태전환,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>기록을<sp/>만든<sp/>것.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>timestep<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a32f13f6376bcfb191fa2d34ef851a77d" kindref="member">collect_batch_trajectory</ref>()</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>2<sp/>네트워크<sp/>언제<sp/>업데이트<sp/>해야<sp/>할지.<sp/>학습<sp/>중<sp/>네트워크를<sp/>목표<sp/>네트워크로<sp/>옮기는<sp/>것.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>alpha,<sp/>update_target_net<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1afddb8e926f6fde5d663ba3356910ba8c" kindref="member">_entropy_schedule</ref>(self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a43e78d0f16faa3272e825896fb20f9f7" kindref="member">learner_steps</ref>)</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>(self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1aafd5a3031eadac063f5d222876ad69c4" kindref="member">params</ref>,<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a2e21ac00ff1eaa5d79e19dcba0943d36" kindref="member">params_target</ref>,<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a7f9e162873fb409199f37d76934865ec" kindref="member">params_prev</ref>,<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a3ed39566e229df9f1275e8cc0fd57aaa" kindref="member">params_prev_</ref>,</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a5f7a8400f1dfeeb8f19c92fc80f6d0b2" kindref="member">optimizer</ref>,<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1ae8d990e1edfae8c3eee9909d710c3369" kindref="member">optimizer_target</ref>),<sp/>logs<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1add79449167b846f91eb372c8b84e6913" kindref="member">update_parameters</ref>(</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1aafd5a3031eadac063f5d222876ad69c4" kindref="member">params</ref>,<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a2e21ac00ff1eaa5d79e19dcba0943d36" kindref="member">params_target</ref>,<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a7f9e162873fb409199f37d76934865ec" kindref="member">params_prev</ref>,<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a3ed39566e229df9f1275e8cc0fd57aaa" kindref="member">params_prev_</ref>,</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a5f7a8400f1dfeeb8f19c92fc80f6d0b2" kindref="member">optimizer</ref>,<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1ae8d990e1edfae8c3eee9909d710c3369" kindref="member">optimizer_target</ref>,<sp/>timestep,<sp/>alpha,</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a43e78d0f16faa3272e825896fb20f9f7" kindref="member">learner_steps</ref>,<sp/>update_target_net)</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a43e78d0f16faa3272e825896fb20f9f7" kindref="member">learner_steps</ref><sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>logs.update({</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;actor_steps&quot;</highlight><highlight class="normal">:<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a4e148caa5741ebb5c77262488fd0a854" kindref="member">actor_steps</ref>,</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;learner_steps&quot;</highlight><highlight class="normal">:<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a43e78d0f16faa3272e825896fb20f9f7" kindref="member">learner_steps</ref>,</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>logs</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a260f26b058a1957adc5b4f04714fff50" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a260f26b058a1957adc5b4f04714fff50" kindref="member">_next_rng_key</ref>(self)<sp/>-&gt;<sp/>chex.PRNGKey:</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Get<sp/>the<sp/>next<sp/>rng<sp/>subkey<sp/>from<sp/>class<sp/>rngkey.</highlight></codeline>
<codeline lineno="979"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="980"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Must<sp/>*not*<sp/>be<sp/>called<sp/>from<sp/>under<sp/>a<sp/>jitted<sp/>function!</highlight></codeline>
<codeline lineno="981"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="982"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="983"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>fresh<sp/>rng_key.</highlight></codeline>
<codeline lineno="984"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a73ea6dc6c3738e775794ebae572378d1" kindref="member">_rngkey</ref>,<sp/>subkey<sp/>=<sp/>jax.random.split(self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a73ea6dc6c3738e775794ebae572378d1" kindref="member">_rngkey</ref>)</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>subkey</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a3c3f02e55d4e8d2d80907f52afbdd5e4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a3c3f02e55d4e8d2d80907f52afbdd5e4" kindref="member">_state_as_env_step</ref>(self,<sp/>state:<sp/>pyspiel.State)<sp/>-&gt;<sp/>EnvStep:</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>A<sp/>terminal<sp/>state<sp/>must<sp/>be<sp/>communicated<sp/>to<sp/>players,<sp/>however<sp/>since</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>it&apos;s<sp/>a<sp/>terminal<sp/>state<sp/>things<sp/>like<sp/>the<sp/>state_representation<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>set<sp/>of<sp/>legal<sp/>actions<sp/>are<sp/>meaningless<sp/>and<sp/>only<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>for<sp/>the<sp/>sake<sp/>of<sp/>creating<sp/>well<sp/>a<sp/>defined<sp/>trajectory<sp/>tensor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Therefore<sp/>the<sp/>code<sp/>below:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>extracts<sp/>the<sp/>rewards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>if<sp/>the<sp/>state<sp/>is<sp/>terminal,<sp/>uses<sp/>a<sp/>dummy<sp/>other<sp/>state<sp/>for<sp/>other<sp/>fields.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>rewards<sp/>=<sp/>np.array(state.returns(),<sp/>dtype=np.float64)</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>valid<sp/>=<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>state.is_terminal()</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>valid:</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1ad96e38a787bf36ed3e0df939ca791e6c" kindref="member">_ex_state</ref></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a579b3948496b6f60b6c8f093bf62e294" kindref="member">config</ref>.state_representation<sp/>==<sp/>StateRepresentation.OBSERVATION:</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obs<sp/>=<sp/>state.observation_tensor()</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a579b3948496b6f60b6c8f093bf62e294" kindref="member">config</ref>.state_representation<sp/>==<sp/>StateRepresentation.INFO_SET:</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obs<sp/>=<sp/>state.information_state_tensor()</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&quot;Invalid<sp/>StateRepresentation:<sp/>{self.config.state_representation}.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO(author16):<sp/>clarify<sp/>the<sp/>story<sp/>around<sp/>rewards<sp/>and<sp/>valid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_env_step" kindref="compound">EnvStep</ref>(</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obs=np.array(obs,<sp/>dtype=np.float64),</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>legal=np.array(state.legal_actions_mask(),<sp/>dtype=np.int8),</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player_id=np.array(state.current_player(),<sp/>dtype=np.float64),</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid=np.array(valid,<sp/>dtype=np.float64),</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rewards=rewards)</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a7f7897df8492ad475e0c0a2dbb27ca3c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a7f7897df8492ad475e0c0a2dbb27ca3c" kindref="member">action_probabilities</ref>(self,</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state:<sp/>pyspiel.State,</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>player_id:<sp/>Any<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Returns<sp/>action<sp/>probabilities<sp/>dict<sp/>for<sp/>a<sp/>single<sp/>batch.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>env_step<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1abe7d8782e7d692ffea9f8b4d0ceb2cb9" kindref="member">_batch_of_states_as_env_step</ref>([state])</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>probs<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1af128c6fb1dbd90d17168485ae1a718d1" kindref="member">_network_jit_apply_and_post_process</ref>(</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a2e21ac00ff1eaa5d79e19dcba0943d36" kindref="member">params_target</ref>,<sp/>env_step)</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>probs<sp/>=<sp/>jax.device_get(probs[0])<sp/><sp/></highlight><highlight class="comment">#<sp/>Squeeze<sp/>out<sp/>the<sp/>1-element<sp/>batch.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action:<sp/>probs[action]</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>action,<sp/>valid<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(jax.device_get(env_step.legal[0]))</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>valid</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">@functools.partial(jax.jit,<sp/>static_argnums=(0,)</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1034" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1af128c6fb1dbd90d17168485ae1a718d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1af128c6fb1dbd90d17168485ae1a718d1" kindref="member">_network_jit_apply_and_post_process</ref>(</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self,<sp/>params:<sp/>Params,<sp/>env_step:<sp/>EnvStep)<sp/>-&gt;<sp/>chex.Array:</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/>pi,<sp/>_,<sp/>_,<sp/>_<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1afd70d281b51a6f4a881c545876e845a6" kindref="member">network</ref>.apply(params,<sp/>env_step)</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>pi<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a579b3948496b6f60b6c8f093bf62e294" kindref="member">config</ref>.finetune.post_process_policy(pi,<sp/>env_step.legal)</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pi</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/></highlight><highlight class="preprocessor">@functools.partial(jax.jit,<sp/>static_argnums=(0,)</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1041" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1af5446d67ee2a98f29b359956fc640e65" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1af5446d67ee2a98f29b359956fc640e65" kindref="member">_network_jit_apply</ref>(self,<sp/>params:<sp/>Params,<sp/>env_step:<sp/>EnvStep)<sp/>-&gt;<sp/>chex.Array:</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>pi,<sp/>_,<sp/>_,<sp/>_<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1afd70d281b51a6f4a881c545876e845a6" kindref="member">network</ref>.apply(params,<sp/>env_step)</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pi</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1aee206ac0c22bc34bf1bdfdfbae234aec" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1aee206ac0c22bc34bf1bdfdfbae234aec" kindref="member">actor_step</ref>(self,<sp/>env_step:<sp/>EnvStep):</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>pi<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1af5446d67ee2a98f29b359956fc640e65" kindref="member">_network_jit_apply</ref>(self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1aafd5a3031eadac063f5d222876ad69c4" kindref="member">params</ref>,<sp/>env_step)</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>pi<sp/>=<sp/>np.asarray(pi).astype(</highlight><highlight class="stringliteral">&quot;float64&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO(author18):<sp/>is<sp/>this<sp/>policy<sp/>normalization<sp/>really<sp/>needed?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>pi<sp/>=<sp/>pi<sp/>/<sp/>np.sum(pi,<sp/>axis=-1,<sp/>keepdims=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>action<sp/>=<sp/>np.apply_along_axis(</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1ab15a3ac45ce2c2c52832950432488cb9" kindref="member">_np_rng</ref>.choice(range(pi.shape[1]),<sp/>p=x),<sp/>axis=-1,<sp/>arr=pi)</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO(author16):<sp/>reapply<sp/>the<sp/>legal<sp/>actions<sp/>mask<sp/>to<sp/>bullet-proof<sp/>sampling.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>action_oh<sp/>=<sp/>np.zeros(pi.shape,<sp/>dtype=</highlight><highlight class="stringliteral">&quot;float64&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>action_oh[range(pi.shape[0]),<sp/>action]<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>actor_step<sp/>=<sp/><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_actor_step" kindref="compound">ActorStep</ref>(policy=pi,<sp/>action_oh=action_oh,<sp/>rewards=())<sp/><sp/></highlight><highlight class="comment">#<sp/>pytype:<sp/>disable=wrong-arg-types<sp/><sp/>#<sp/>numpy-scalars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>action,<sp/>actor_step</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a32f13f6376bcfb191fa2d34ef851a77d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a32f13f6376bcfb191fa2d34ef851a77d" kindref="member">collect_batch_trajectory</ref>(self)<sp/>-&gt;<sp/>TimeStep:</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>초기화하고<sp/>챈스상태<sp/>넘긴<sp/>상태를<sp/>배치사이즈<sp/>만큼<sp/>리스트로<sp/>만든다.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>states<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1affec6d365e4a7898bb53258436405889" kindref="member">_play_chance</ref>(self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a8b79f63921dd584113611874377dfbc7" kindref="member">_game</ref>.new_initial_state())</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a579b3948496b6f60b6c8f093bf62e294" kindref="member">config</ref>.batch_size)</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>timesteps<sp/>=<sp/>[]<sp/></highlight><highlight class="comment">#<sp/>환경요소,<sp/>액터<sp/>선택,결과<sp/>담긴<sp/>timestep<sp/>준비<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>states<sp/>를<sp/>하나의<sp/>EnvStep(EnvStep<sp/>으로<sp/>이루어진<sp/>리스트)<sp/>으로<sp/>만든다.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>EnvStep<sp/>의<sp/>리스트라고<sp/>해도<sp/>EnvStep<sp/>형으로<sp/>받아들이나<sp/>보다.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>env_step<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1abe7d8782e7d692ffea9f8b4d0ceb2cb9" kindref="member">_batch_of_states_as_env_step</ref>(states)</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a579b3948496b6f60b6c8f093bf62e294" kindref="member">config</ref>.trajectory_max):</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev_env_step<sp/>=<sp/>env_step</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a,<sp/>actor_step<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1aee206ac0c22bc34bf1bdfdfbae234aec" kindref="member">actor_step</ref>(env_step)<sp/></highlight><highlight class="comment">#<sp/>현<sp/>상태에<sp/>맞는<sp/>액션<sp/>연산<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>states<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a0e82e96b88dae2e8be901b6f23e68a97" kindref="member">_batch_of_states_apply_action</ref>(states,<sp/>a)<sp/></highlight><highlight class="comment">#<sp/>액션을<sp/>상태에<sp/>적용.<sp/>상태<sp/>전환.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>env_step<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1abe7d8782e7d692ffea9f8b4d0ceb2cb9" kindref="member">_batch_of_states_as_env_step</ref>(states)<sp/></highlight><highlight class="comment">#<sp/>결과<sp/>state<sp/>를<sp/>다시<sp/>envstep<sp/>으로<sp/>만듬<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timesteps.append(</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_time_step" kindref="compound">TimeStep</ref>(</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env=prev_env_step,</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actor=<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_actor_step" kindref="compound">ActorStep</ref>(</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action_oh=actor_step.action_oh,</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>policy=actor_step.policy,</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rewards=env_step.rewards),</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))<sp/></highlight><highlight class="comment">#<sp/>결과물들<sp/>저장<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Concatenate<sp/>all<sp/>the<sp/>timesteps<sp/>together<sp/>to<sp/>form<sp/>a<sp/>single<sp/>rollout<sp/>[T,<sp/>B,<sp/>..]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jax.tree_util.tree_map(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>*xs:<sp/>np.stack(xs,<sp/>axis=0),<sp/>*timesteps)</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1092" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1abe7d8782e7d692ffea9f8b4d0ceb2cb9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1abe7d8782e7d692ffea9f8b4d0ceb2cb9" kindref="member">_batch_of_states_as_env_step</ref>(self,</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>states:<sp/>Sequence[pyspiel.State])<sp/>-&gt;<sp/>EnvStep:</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>envs<sp/>=<sp/>[self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a3c3f02e55d4e8d2d80907f52afbdd5e4" kindref="member">_state_as_env_step</ref>(state)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>state<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>states]</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#[1,2,3]<sp/>[4,5,6]<sp/>을<sp/>[[1,2,3,],[4,5,6]]<sp/>으로<sp/>쌓아<sp/>올린다.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#여기서는<sp/>EnvStep<sp/>을<sp/>쌓아<sp/>올린거<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jax.tree_util.tree_map(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>*e:<sp/>np.stack(e,<sp/>axis=0),<sp/>*envs)</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>States<sp/>에<sp/>actions<sp/>적용하고<sp/>결과<sp/>states<sp/>를<sp/>반환<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a0e82e96b88dae2e8be901b6f23e68a97" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a0e82e96b88dae2e8be901b6f23e68a97" kindref="member">_batch_of_states_apply_action</ref>(</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self,<sp/>states:<sp/>Sequence[pyspiel.State],</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>actions:<sp/>chex.Array)<sp/>-&gt;<sp/>Sequence[pyspiel.State]:</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Apply<sp/>a<sp/>batch<sp/>of<sp/>`actions`<sp/>to<sp/>a<sp/>parallel<sp/>list<sp/>of<sp/>`states`.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>state,<sp/>action<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(states,<sp/>list(actions)):</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>state.is_terminal():</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1a4e148caa5741ebb5c77262488fd0a854" kindref="member">actor_steps</ref><sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state.apply_action(action)</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1affec6d365e4a7898bb53258436405889" kindref="member">_play_chance</ref>(state)</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>states</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111" refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1affec6d365e4a7898bb53258436405889" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1affec6d365e4a7898bb53258436405889" kindref="member">_play_chance</ref>(self,<sp/>state:<sp/>pyspiel.State)<sp/>-&gt;<sp/>pyspiel.State:</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Plays<sp/>the<sp/>chance<sp/>nodes<sp/>until<sp/>we<sp/>end<sp/>up<sp/>at<sp/>another<sp/>type<sp/>of<sp/>node.</highlight></codeline>
<codeline lineno="1113"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="1115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>state:<sp/>to<sp/>be<sp/>updated<sp/>until<sp/>it<sp/>does<sp/>not<sp/>correspond<sp/>to<sp/>a<sp/>chance<sp/>node.</highlight></codeline>
<codeline lineno="1116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="1117"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>same<sp/>input<sp/>state<sp/>object,<sp/>but<sp/>updated.<sp/>The<sp/>state<sp/>is<sp/>returned</highlight></codeline>
<codeline lineno="1118"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>only<sp/>for<sp/>convenience,<sp/>to<sp/>allow<sp/>chaining<sp/>function<sp/>calls.</highlight></codeline>
<codeline lineno="1119"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>state.is_chance_node():</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chance_outcome,<sp/>chance_proba<sp/>=<sp/>zip(*state.chance_outcomes())</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>action<sp/>=<sp/>self.<ref refid="classopen__spiel_1_1python_1_1algorithms_1_1rnad_1_1rnad_1_1_r_na_d_solver_1ab15a3ac45ce2c2c52832950432488cb9" kindref="member">_np_rng</ref>.choice(chance_outcome,<sp/>p=chance_proba)</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state.apply_action(action)</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state</highlight></codeline>
    </programlisting>
    <location file="open_spiel/python/algorithms/rnad/rnad.py"/>
  </compounddef>
</doxygen>
