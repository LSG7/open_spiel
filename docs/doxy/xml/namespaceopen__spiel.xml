<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="namespaceopen__spiel" kind="namespace" language="Python">
    <compoundname>open_spiel</compoundname>
    <innerclass refid="structopen__spiel_1_1_action_view" prot="public">open_spiel::ActionView</innerclass>
    <innerclass refid="classopen__spiel_1_1_allocator" prot="public">open_spiel::Allocator</innerclass>
    <innerclass refid="structopen__spiel_1_1_binary_compress" prot="public">open_spiel::BinaryCompress</innerclass>
    <innerclass refid="classopen__spiel_1_1_bot" prot="public">open_spiel::Bot</innerclass>
    <innerclass refid="classopen__spiel_1_1_bot_factory" prot="public">open_spiel::BotFactory</innerclass>
    <innerclass refid="classopen__spiel_1_1_bot_registerer" prot="public">open_spiel::BotRegisterer</innerclass>
    <innerclass refid="classopen__spiel_1_1_contiguous_allocator" prot="public">open_spiel::ContiguousAllocator</innerclass>
    <innerclass refid="classopen__spiel_1_1_first_action_policy" prot="public">open_spiel::FirstActionPolicy</innerclass>
    <innerclass refid="structopen__spiel_1_1_fixed_actions" prot="public">open_spiel::FixedActions</innerclass>
    <innerclass refid="classopen__spiel_1_1_fixed_actions_iterator" prot="public">open_spiel::FixedActionsIterator</innerclass>
    <innerclass refid="structopen__spiel_1_1_flat_joint_actions" prot="public">open_spiel::FlatJointActions</innerclass>
    <innerclass refid="classopen__spiel_1_1_flat_joint_actions_iterator" prot="public">open_spiel::FlatJointActionsIterator</innerclass>
    <innerclass refid="classopen__spiel_1_1_game" prot="public">open_spiel::Game</innerclass>
    <innerclass refid="structopen__spiel_1_1_game_info" prot="public">open_spiel::GameInfo</innerclass>
    <innerclass refid="classopen__spiel_1_1_game_parameter" prot="public">open_spiel::GameParameter</innerclass>
    <innerclass refid="classopen__spiel_1_1_game_registerer" prot="public">open_spiel::GameRegisterer</innerclass>
    <innerclass refid="structopen__spiel_1_1_game_type" prot="public">open_spiel::GameType</innerclass>
    <innerclass refid="structopen__spiel_1_1_i_i_g_observation_type" prot="public">open_spiel::IIGObservationType</innerclass>
    <innerclass refid="classopen__spiel_1_1_n_f_g_state" prot="public">open_spiel::NFGState</innerclass>
    <innerclass refid="structopen__spiel_1_1_no_compress" prot="public">open_spiel::NoCompress</innerclass>
    <innerclass refid="classopen__spiel_1_1_normal_form_game" prot="public">open_spiel::NormalFormGame</innerclass>
    <innerclass refid="classopen__spiel_1_1_observation" prot="public">open_spiel::Observation</innerclass>
    <innerclass refid="classopen__spiel_1_1_observer" prot="public">open_spiel::Observer</innerclass>
    <innerclass refid="classopen__spiel_1_1_observer_registerer" prot="public">open_spiel::ObserverRegisterer</innerclass>
    <innerclass refid="classopen__spiel_1_1_partial_tabular_policy" prot="public">open_spiel::PartialTabularPolicy</innerclass>
    <innerclass refid="classopen__spiel_1_1_policy" prot="public">open_spiel::Policy</innerclass>
    <innerclass refid="classopen__spiel_1_1_preferred_action_policy" prot="public">open_spiel::PreferredActionPolicy</innerclass>
    <innerclass refid="classopen__spiel_1_1_register_single_tensor_observer" prot="public">open_spiel::RegisterSingleTensorObserver</innerclass>
    <innerclass refid="classopen__spiel_1_1_sampler_from_rng" prot="public">open_spiel::SamplerFromRng</innerclass>
    <innerclass refid="classopen__spiel_1_1_sim_move_game" prot="public">open_spiel::SimMoveGame</innerclass>
    <innerclass refid="classopen__spiel_1_1_sim_move_state" prot="public">open_spiel::SimMoveState</innerclass>
    <innerclass refid="classopen__spiel_1_1_span_tensor" prot="public">open_spiel::SpanTensor</innerclass>
    <innerclass refid="classopen__spiel_1_1_span_tensor_info" prot="public">open_spiel::SpanTensorInfo</innerclass>
    <innerclass refid="classopen__spiel_1_1_state" prot="public">open_spiel::State</innerclass>
    <innerclass refid="classopen__spiel_1_1_tabular_policy" prot="public">open_spiel::TabularPolicy</innerclass>
    <innerclass refid="classopen__spiel_1_1_tracking_vector_allocator" prot="public">open_spiel::TrackingVectorAllocator</innerclass>
    <innerclass refid="classopen__spiel_1_1_uniform_policy" prot="public">open_spiel::UniformPolicy</innerclass>
    <innerclass refid="classopen__spiel_1_1_uniform_probability_sampler" prot="public">open_spiel::UniformProbabilitySampler</innerclass>
    <innernamespace refid="namespaceopen__spiel_1_1base_t">open_spiel::baseT</innernamespace>
    <innernamespace refid="namespaceopen__spiel_1_1internal">open_spiel::internal</innernamespace>
    <innernamespace refid="namespaceopen__spiel_1_1kbg">open_spiel::kbg</innernamespace>
    <innernamespace refid="namespaceopen__spiel_1_1matrix__game">open_spiel::matrix_game</innernamespace>
    <innernamespace refid="namespaceopen__spiel_1_1python">open_spiel::python</innernamespace>
    <innernamespace refid="namespaceopen__spiel_1_1tensor__game">open_spiel::tensor_game</innernamespace>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="namespaceopen__spiel_1a08afe0fc0d80483f36b9cd463ceadb67" prot="public" static="no" strong="no">
        <type>char</type>
        <name>CompressionScheme</name>
        <qualifiedname>open_spiel::CompressionScheme</qualifiedname>
        <enumvalue id="namespaceopen__spiel_1a08afe0fc0d80483f36b9cd463ceadb67ae8cf6f97ad7efc429cee3aef81e40d51" prot="public">
          <name>kCompressionNone</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceopen__spiel_1a08afe0fc0d80483f36b9cd463ceadb67a9b491bcb461132fb35177b9eac9331f7" prot="public">
          <name>kCompressionBinary</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/observer.cc" line="246" column="1" bodyfile="open_spiel/observer.cc" bodystart="246" bodyend="249"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceopen__spiel_1aa9281a1c15b90072251b89cdf81b6b1a" prot="public" static="no" strong="yes">
        <type></type>
        <name>PrivateInfoType</name>
        <qualifiedname>open_spiel::PrivateInfoType</qualifiedname>
        <enumvalue id="namespaceopen__spiel_1aa9281a1c15b90072251b89cdf81b6b1aa35c3ace1970663a16e5c65baa5941b13" prot="public">
          <name>kNone</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceopen__spiel_1aa9281a1c15b90072251b89cdf81b6b1aac5f7797389cc990cbf85c2d7b6581414" prot="public">
          <name>kSinglePlayer</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceopen__spiel_1aa9281a1c15b90072251b89cdf81b6b1aa22b9a99aef727eafee56eae22a63ccbc" prot="public">
          <name>kAllPlayers</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/observer.h" line="213" column="1" bodyfile="open_spiel/observer.h" bodystart="213" bodyend="218"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceopen__spiel_1a5677cc0bb3f0c3d54e59c5df948718d6" prot="public" static="no" strong="no">
        <type></type>
        <name>PlayerId</name>
        <qualifiedname>open_spiel::PlayerId</qualifiedname>
        <enumvalue id="namespaceopen__spiel_1a5677cc0bb3f0c3d54e59c5df948718d6a3c3b67e832afb2288daadff2e67d5ef5" prot="public">
          <name>kDefaultPlayerId</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceopen__spiel_1a5677cc0bb3f0c3d54e59c5df948718d6a4519a0153efaba2f86929f7e018082fb" prot="public">
          <name>kChancePlayerId</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceopen__spiel_1a5677cc0bb3f0c3d54e59c5df948718d6a98b448895a60295bcb57104abae3e302" prot="public">
          <name>kSimultaneousPlayerId</name>
          <initializer>= -2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceopen__spiel_1a5677cc0bb3f0c3d54e59c5df948718d6a68094d137c447fd3a7506021732c4d26" prot="public">
          <name>kInvalidPlayer</name>
          <initializer>= -3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceopen__spiel_1a5677cc0bb3f0c3d54e59c5df948718d6a3ec681f7eb81050b86a68d000c82a192" prot="public">
          <name>kTerminalPlayerId</name>
          <initializer>= -4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceopen__spiel_1a5677cc0bb3f0c3d54e59c5df948718d6a53f92239d341173f9b7a13d6eb2776f9" prot="public">
          <name>kMeanFieldPlayerId</name>
          <initializer>= -5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_globals.h" line="24" column="1" bodyfile="open_spiel/spiel_globals.h" bodystart="24" bodyend="37"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceopen__spiel_1a236dc05d070fca4a27a4344aea799332" prot="public" static="no" strong="yes">
        <type></type>
        <name>StateType</name>
        <qualifiedname>open_spiel::StateType</qualifiedname>
        <enumvalue id="namespaceopen__spiel_1a236dc05d070fca4a27a4344aea799332a217dd2f6ef26065693bb5043fce241ea" prot="public">
          <name>kTerminal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceopen__spiel_1a236dc05d070fca4a27a4344aea799332add0bd69a737669b5dd8d6e357971e2dd" prot="public">
          <name>kChance</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceopen__spiel_1a236dc05d070fca4a27a4344aea799332a81d16d84af3281936e1b3a437b2d7385" prot="public">
          <name>kDecision</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceopen__spiel_1a236dc05d070fca4a27a4344aea799332a6a40bb1d52ea6251e5ce3b9e7d3577bd" prot="public">
          <name>kMeanField</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_globals.h" line="42" column="1" bodyfile="open_spiel/spiel_globals.h" bodystart="42" bodyend="50"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceopen__spiel_1a57f1e9721fa60d57e91a64796bdbcad0" prot="public" static="no" strong="yes">
        <type></type>
        <name>TensorLayout</name>
        <qualifiedname>open_spiel::TensorLayout</qualifiedname>
        <enumvalue id="namespaceopen__spiel_1a57f1e9721fa60d57e91a64796bdbcad0acd2b6a111fc455232a585c46cb420b7d" prot="public">
          <name>kHWC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceopen__spiel_1a57f1e9721fa60d57e91a64796bdbcad0a3abb5fb021a7312e31bf05647cc4c148" prot="public">
          <name>kCHW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_globals.h" line="56" column="1" bodyfile="open_spiel/spiel_globals.h" bodystart="56" bodyend="59"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespaceopen__spiel_1ad7c4d931669b5e357cb5c7f84a6de094" prot="public" static="no">
        <type>std::map&lt; std::string, <ref refid="classopen__spiel_1_1_game_parameter" kindref="compound">GameParameter</ref> &gt;</type>
        <definition>using open_spiel.GameParameters =  std::map&lt;std::string, GameParameter&gt;</definition>
        <argsstring></argsstring>
        <name>GameParameters</name>
        <qualifiedname>open_spiel::GameParameters</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/game_parameters.h" line="37" column="1" bodyfile="open_spiel/game_parameters.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceopen__spiel_1aac43798f2a15711572119a41e8a91466" prot="public" static="no">
        <type><ref refid="namespaceopen__spiel_1ad7c4d931669b5e357cb5c7f84a6de094" kindref="member">GameParameters</ref></type>
        <definition>using open_spiel.ObservationParams =  GameParameters</definition>
        <argsstring></argsstring>
        <name>ObservationParams</name>
        <qualifiedname>open_spiel::ObservationParams</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/observer.h" line="64" column="1" bodyfile="open_spiel/observer.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceopen__spiel_1ac4ea6d9d7193ac74f6f333b954e3810f" prot="public" static="no">
        <type>std::vector&lt; std::pair&lt; <ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref>, double &gt; &gt;</type>
        <definition>using open_spiel.ActionsAndProbs =  std::vector&lt;std::pair&lt;Action, double&gt;&gt;</definition>
        <argsstring></argsstring>
        <name>ActionsAndProbs</name>
        <qualifiedname>open_spiel::ActionsAndProbs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.h" line="198" column="1" bodyfile="open_spiel/spiel.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceopen__spiel_1ad03e31d0186baba8fb60b04965c48e86" prot="public" static="no">
        <type>std::pair&lt; std::vector&lt; std::unique_ptr&lt; <ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref> &gt; &gt;, std::vector&lt; double &gt; &gt;</type>
        <definition>using open_spiel.HistoryDistribution = 
    std::pair&lt;std::vector&lt;std::unique_ptr&lt;State&gt;&gt;, std::vector&lt;double&gt;&gt;</definition>
        <argsstring></argsstring>
        <name>HistoryDistribution</name>
        <qualifiedname>open_spiel::HistoryDistribution</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.h" line="202" column="1" bodyfile="open_spiel/spiel.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" prot="public" static="no">
        <type>int</type>
        <definition>using open_spiel.Player =  int</definition>
        <argsstring></argsstring>
        <name>Player</name>
        <qualifiedname>open_spiel::Player</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.h" line="132" column="1" bodyfile="open_spiel/spiel_utils.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" prot="public" static="no">
        <type>int64_t</type>
        <definition>using open_spiel.Action =  int64_t</definition>
        <argsstring></argsstring>
        <name>Action</name>
        <qualifiedname>open_spiel::Action</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.h" line="133" column="1" bodyfile="open_spiel/spiel_utils.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceopen__spiel_1a6ae50259664bd4ee81332e34b49d2ebd" prot="public" static="no">
        <type>void(*)(const std::string &amp;)</type>
        <definition>using open_spiel.ErrorHandler =  void (*)(const std::string&amp;)</definition>
        <argsstring></argsstring>
        <name>ErrorHandler</name>
        <qualifiedname>open_spiel::ErrorHandler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.h" line="355" column="1" bodyfile="open_spiel/spiel_utils.h" bodystart="355" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceopen__spiel_1aede0e21cbb3bf6ae07192c951536b721" prot="public" static="no" constexpr="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* open_spiel.kDefaultNameDelimiter</definition>
        <argsstring></argsstring>
        <name>kDefaultNameDelimiter</name>
        <qualifiedname>open_spiel::kDefaultNameDelimiter</qualifiedname>
        <initializer>= &quot;=&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/game_parameters.h" line="42" column="29" bodyfile="open_spiel/game_parameters.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceopen__spiel_1a9add0dfc4c260595ccd7648c126e21ac" prot="public" static="no" constexpr="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* open_spiel.kDefaultParameterDelimiter</definition>
        <argsstring></argsstring>
        <name>kDefaultParameterDelimiter</name>
        <qualifiedname>open_spiel::kDefaultParameterDelimiter</qualifiedname>
        <initializer>= &quot;|||&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/game_parameters.h" line="43" column="29" bodyfile="open_spiel/game_parameters.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceopen__spiel_1a46834d0f5d6fe1c930944e946d8a790e" prot="public" static="no" constexpr="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* open_spiel.kDefaultInternalDelimiter</definition>
        <argsstring></argsstring>
        <name>kDefaultInternalDelimiter</name>
        <qualifiedname>open_spiel::kDefaultInternalDelimiter</qualifiedname>
        <initializer>= &quot;***&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/game_parameters.h" line="44" column="29" bodyfile="open_spiel/game_parameters.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceopen__spiel_1abbbd5ca7f9bdf4b135de88371f3cfe89" prot="public" static="no" constexpr="yes" mutable="no">
        <type>int</type>
        <definition>int open_spiel.kNumHeaderBytes</definition>
        <argsstring></argsstring>
        <name>kNumHeaderBytes</name>
        <qualifiedname>open_spiel::kNumHeaderBytes</qualifiedname>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/observer.cc" line="250" column="15" bodyfile="open_spiel/observer.cc" bodystart="250" bodyend="-1"/>
        <referencedby refid="structopen__spiel_1_1_binary_compress_1a895394e4f18b247a59451b6673e9e1de" compoundref="observer_8cc" startline="256" endline="269">open_spiel::BinaryCompress::Compress</referencedby>
        <referencedby refid="structopen__spiel_1_1_no_compress_1a03880cc50fa9531d7e3788aec23867cf" compoundref="observer_8cc" startline="288" endline="294">open_spiel::NoCompress::Compress</referencedby>
        <referencedby refid="structopen__spiel_1_1_binary_compress_1af39b201900da7fb1cdb2205d26a28ad1" compoundref="observer_8cc" startline="271" endline="283">open_spiel::BinaryCompress::Decompress</referencedby>
        <referencedby refid="structopen__spiel_1_1_no_compress_1ad4a1724352baf560b865ed13d392ae85" compoundref="observer_8cc" startline="296" endline="301">open_spiel::NoCompress::Decompress</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespaceopen__spiel_1a5bc6e01a4042ac7ea2e321608cb441d8" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="structopen__spiel_1_1_i_i_g_observation_type" kindref="compound">IIGObservationType</ref></type>
        <definition>IIGObservationType open_spiel.kDefaultObsType</definition>
        <argsstring></argsstring>
        <name>kDefaultObsType</name>
        <qualifiedname>open_spiel::kDefaultObsType</qualifiedname>
        <initializer>{
    true,
    false,
    <ref refid="namespaceopen__spiel_1aa9281a1c15b90072251b89cdf81b6b1aac5f7797389cc990cbf85c2d7b6581414" kindref="member">PrivateInfoType::kSinglePlayer</ref>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/observer.h" line="288" column="37" bodyfile="open_spiel/observer.h" bodystart="288" bodyend="291"/>
        <referencedby refid="classopen__spiel_1_1_game_1aa99f0ac0aeb14c3a190ae9fa56f428c3" compoundref="observer_8cc" startline="137" endline="175">open_spiel::Game::MakeBuiltInObserver</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespaceopen__spiel_1a37db6d5fe2c988fdfbf73e22163c451d" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="structopen__spiel_1_1_i_i_g_observation_type" kindref="compound">IIGObservationType</ref></type>
        <definition>IIGObservationType open_spiel.kInfoStateObsType</definition>
        <argsstring></argsstring>
        <name>kInfoStateObsType</name>
        <qualifiedname>open_spiel::kInfoStateObsType</qualifiedname>
        <initializer>{
    true,
    true,
    <ref refid="namespaceopen__spiel_1aa9281a1c15b90072251b89cdf81b6b1aac5f7797389cc990cbf85c2d7b6581414" kindref="member">PrivateInfoType::kSinglePlayer</ref>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/observer.h" line="295" column="37" bodyfile="open_spiel/observer.h" bodystart="295" bodyend="298"/>
        <referencedby refid="classopen__spiel_1_1_game_1aa99f0ac0aeb14c3a190ae9fa56f428c3" compoundref="observer_8cc" startline="137" endline="175">open_spiel::Game::MakeBuiltInObserver</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespaceopen__spiel_1a61c7f4e6a3feb8c438f0be01682d0c13" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="structopen__spiel_1_1_i_i_g_observation_type" kindref="compound">IIGObservationType</ref></type>
        <definition>IIGObservationType open_spiel.kPublicObsType</definition>
        <argsstring></argsstring>
        <name>kPublicObsType</name>
        <qualifiedname>open_spiel::kPublicObsType</qualifiedname>
        <initializer>{
    true,
    false,
    <ref refid="namespaceopen__spiel_1aa9281a1c15b90072251b89cdf81b6b1aa35c3ace1970663a16e5c65baa5941b13" kindref="member">PrivateInfoType::kNone</ref>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/observer.h" line="301" column="37" bodyfile="open_spiel/observer.h" bodystart="301" bodyend="304"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceopen__spiel_1a9f191f5a93c328b43d0a68bc8a440515" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="structopen__spiel_1_1_i_i_g_observation_type" kindref="compound">IIGObservationType</ref></type>
        <definition>IIGObservationType open_spiel.kPublicStateObsType</definition>
        <argsstring></argsstring>
        <name>kPublicStateObsType</name>
        <qualifiedname>open_spiel::kPublicStateObsType</qualifiedname>
        <initializer>{
    true,
    true,
    <ref refid="namespaceopen__spiel_1aa9281a1c15b90072251b89cdf81b6b1aa35c3ace1970663a16e5c65baa5941b13" kindref="member">PrivateInfoType::kNone</ref>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/observer.h" line="307" column="37" bodyfile="open_spiel/observer.h" bodystart="307" bodyend="310"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceopen__spiel_1a449474391b357e1c8680369f6ad7b423" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="structopen__spiel_1_1_i_i_g_observation_type" kindref="compound">IIGObservationType</ref></type>
        <definition>IIGObservationType open_spiel.kPrivateObsType</definition>
        <argsstring></argsstring>
        <name>kPrivateObsType</name>
        <qualifiedname>open_spiel::kPrivateObsType</qualifiedname>
        <initializer>{
    false,
    false,
    <ref refid="namespaceopen__spiel_1aa9281a1c15b90072251b89cdf81b6b1aac5f7797389cc990cbf85c2d7b6581414" kindref="member">PrivateInfoType::kSinglePlayer</ref>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/observer.h" line="313" column="37" bodyfile="open_spiel/observer.h" bodystart="313" bodyend="316"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceopen__spiel_1adbc825960a0651d53f5d6423343fafae" prot="public" static="no" constexpr="yes" mutable="no">
        <type><ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref></type>
        <definition>Action open_spiel.kInvalidAction</definition>
        <argsstring></argsstring>
        <name>kInvalidAction</name>
        <qualifiedname>open_spiel::kInvalidAction</qualifiedname>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_globals.h" line="40" column="25" bodyfile="open_spiel/spiel_globals.h" bodystart="40" bodyend="-1"/>
        <referencedby refid="classopen__spiel_1_1_state_1aafbfbb43035eddbb2d7aa2aeffeed825" compoundref="spiel_8cc" startline="338" endline="348">open_spiel::State::ApplyAction</referencedby>
        <referencedby refid="classopen__spiel_1_1_sim_move_state_1a5cbdd19361e73cf27d9c4644efa41c4a" compoundref="simultaneous__move__game_8cc" startline="28" endline="45">open_spiel::SimMoveState::FlatJointActionToActions</referencedby>
        <referencedby refid="namespaceopen__spiel_1ab6a13349730ac4084a90ffade1876871" compoundref="policy_8cc" startline="60" endline="67">GetAction</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespaceopen__spiel_1a86dca063f97b8704cfd331658af92261" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceopen__spiel_1a6ae50259664bd4ee81332e34b49d2ebd" kindref="member">ErrorHandler</ref></type>
        <definition>ErrorHandler open_spiel.error_handler</definition>
        <argsstring></argsstring>
        <name>error_handler</name>
        <qualifiedname>open_spiel::error_handler</qualifiedname>
        <initializer>= <ref refid="namespaceopen__spiel_1a040d5baa2e99ba84b7671f0f31c46604" kindref="member">SpielDefaultErrorHandler</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.cc" line="126" column="14" bodyfile="open_spiel/spiel_utils.cc" bodystart="126" bodyend="-1"/>
        <referencedby refid="namespaceopen__spiel_1a89d903f6b3280f76e4e08ea13f07774d" compoundref="spiel__utils_8cc" startline="128" endline="130">SetErrorHandler</referencedby>
        <referencedby refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceopen__spiel_1ab5090082d8815a8b80368cd7a93f9478" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::vector&lt; <ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref> &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt; Action &gt; &gt; open_spiel::CollectActions</definition>
        <argsstring>(const State &amp;state)</argsstring>
        <name>CollectActions</name>
        <qualifiedname>open_spiel::CollectActions</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/action_view.cc" line="24" column="13" bodyfile="open_spiel/action_view.cc" bodystart="24" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a2bacf3701996e2da2152ba0b166a34d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string open_spiel::HunlGameString</definition>
        <argsstring>(const std::string &amp;betting_abstraction)</argsstring>
        <name>HunlGameString</name>
        <qualifiedname>open_spiel::HunlGameString</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>betting_abstraction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/canonical_game_strings.cc" line="23" column="13" bodyfile="open_spiel/canonical_game_strings.cc" bodystart="23" bodyend="30" declfile="open_spiel/canonical_game_strings.h" declline="33" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a45cb18834c64b6ef2b6f355571ef0926" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string open_spiel::HulhGameString</definition>
        <argsstring>(const std::string &amp;betting_abstraction)</argsstring>
        <name>HulhGameString</name>
        <qualifiedname>open_spiel::HulhGameString</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>betting_abstraction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/canonical_game_strings.cc" line="32" column="13" bodyfile="open_spiel/canonical_game_strings.cc" bodystart="32" bodyend="38" declfile="open_spiel/canonical_game_strings.h" declline="34" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a4943d429c930a292424ee7efbbe66c33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string open_spiel::TurnBasedGoofspielGameString</definition>
        <argsstring>(int num_cards)</argsstring>
        <name>TurnBasedGoofspielGameString</name>
        <qualifiedname>open_spiel::TurnBasedGoofspielGameString</qualifiedname>
        <param>
          <type>int</type>
          <declname>num_cards</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/canonical_game_strings.cc" line="40" column="13" bodyfile="open_spiel/canonical_game_strings.cc" bodystart="40" bodyend="46" declfile="open_spiel/canonical_game_strings.h" declline="37" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1ad272c6703ae8bac4d974608f1c58a9e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classopen__spiel_1_1_game_parameter" kindref="compound">GameParameter</ref></type>
        <definition>GameParameter open_spiel::DeserializeGameParameter</definition>
        <argsstring>(const std::string &amp;data, const std::string &amp;delimiter)</argsstring>
        <name>DeserializeGameParameter</name>
        <qualifiedname>open_spiel::DeserializeGameParameter</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>delimiter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/game_parameters.cc" line="93" column="15" bodyfile="open_spiel/game_parameters.cc" bodystart="93" bodyend="118" declfile="open_spiel/game_parameters.h" declline="198" declcolumn="15"/>
        <references refid="namespaceopen__spiel_1a5409de787fa4c65008c7668559d3dd0c" compoundref="game__parameters_8cc" startline="136" endline="151">DeserializeGameParameters</references>
        <references refid="classopen__spiel_1_1_game_parameter_1a06c795b6dc1ce7697eb863ad3f491871ac69d34d47bfd5244204004878441d53f">open_spiel::GameParameter::kUnset</references>
        <references refid="spiel__utils_8h_1abcb08ef83297cd8a69ac67d47cfa5da2" compoundref="spiel__utils_8h" startline="259">SPIEL_CHECK_EQ</references>
        <references refid="spiel__utils_8h_1ac998e613afb013e8bd31b3da80f747ae" compoundref="spiel__utils_8h" startline="282" endline="285">SPIEL_CHECK_TRUE</references>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
        <referencedby refid="namespaceopen__spiel_1a5409de787fa4c65008c7668559d3dd0c" compoundref="game__parameters_8cc" startline="136" endline="151">DeserializeGameParameters</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1af4fbe25f93445525489169ed595bb330" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string open_spiel::SerializeGameParameters</definition>
        <argsstring>(const GameParameters &amp;game_params, const std::string &amp;name_delimiter, const std::string &amp;parameter_delimeter)</argsstring>
        <name>SerializeGameParameters</name>
        <qualifiedname>open_spiel::SerializeGameParameters</qualifiedname>
        <param>
          <type>const <ref refid="namespaceopen__spiel_1ad7c4d931669b5e357cb5c7f84a6de094" kindref="member">GameParameters</ref> &amp;</type>
          <declname>game_params</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name_delimiter</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameter_delimeter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/game_parameters.cc" line="120" column="13" bodyfile="open_spiel/game_parameters.cc" bodystart="120" bodyend="134" declfile="open_spiel/game_parameters.h" declline="190" declcolumn="13"/>
        <references refid="classopen__spiel_1_1_game_parameter_1ae97b3381b233541cd8890e10fc2ae4f5" compoundref="game__parameters_8cc" startline="77" endline="91">open_spiel::GameParameter::Serialize</references>
        <referencedby refid="namespaceopen__spiel_1ad0ffb6361129cb7a813fc9b9afbf8bac" compoundref="spiel_8cc" startline="670" endline="721">GameTypeToString</referencedby>
        <referencedby refid="classopen__spiel_1_1_game_parameter_1ae97b3381b233541cd8890e10fc2ae4f5" compoundref="game__parameters_8cc" startline="77" endline="91">open_spiel::GameParameter::Serialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a5409de787fa4c65008c7668559d3dd0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceopen__spiel_1ad7c4d931669b5e357cb5c7f84a6de094" kindref="member">GameParameters</ref></type>
        <definition>GameParameters open_spiel::DeserializeGameParameters</definition>
        <argsstring>(const std::string &amp;data, const std::string &amp;name_delimiter, const std::string &amp;parameter_delimeter)</argsstring>
        <name>DeserializeGameParameters</name>
        <qualifiedname>open_spiel::DeserializeGameParameters</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name_delimiter</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameter_delimeter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/game_parameters.cc" line="136" column="16" bodyfile="open_spiel/game_parameters.cc" bodystart="136" bodyend="151" declfile="open_spiel/game_parameters.h" declline="194" declcolumn="16"/>
        <references refid="namespaceopen__spiel_1ad272c6703ae8bac4d974608f1c58a9e9" compoundref="game__parameters_8cc" startline="93" endline="118">DeserializeGameParameter</references>
        <referencedby refid="namespaceopen__spiel_1ad272c6703ae8bac4d974608f1c58a9e9" compoundref="game__parameters_8cc" startline="93" endline="118">DeserializeGameParameter</referencedby>
        <referencedby refid="namespaceopen__spiel_1abdd13dce1b32767e9b820f7f63638215" compoundref="spiel_8cc" startline="723" endline="768">GameTypeFromString</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1aa0832688fe92be988164cf8e87089ada" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string open_spiel::GameParametersToString</definition>
        <argsstring>(const GameParameters &amp;game_params)</argsstring>
        <name>GameParametersToString</name>
        <qualifiedname>open_spiel::GameParametersToString</qualifiedname>
        <param>
          <type>const <ref refid="namespaceopen__spiel_1ad7c4d931669b5e357cb5c7f84a6de094" kindref="member">GameParameters</ref> &amp;</type>
          <declname>game_params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/game_parameters.cc" line="153" column="13" bodyfile="open_spiel/game_parameters.cc" bodystart="153" bodyend="170" declfile="open_spiel/game_parameters.h" declline="38" declcolumn="13"/>
        <referencedby refid="namespaceopen__spiel_1ab464ff98519dd7819e7cd8fc30234716" compoundref="spiel_8cc" startline="241" endline="256">LoadGame</referencedby>
        <referencedby refid="classopen__spiel_1_1_game_parameter_1acb636ac727b441b3c9fba4782a4580cb" compoundref="game__parameters_8cc" startline="35" endline="55">open_spiel::GameParameter::ToReprString</referencedby>
        <referencedby refid="classopen__spiel_1_1_game_1a1961953c180729dc203b777850f07319" compoundref="spiel_8cc" startline="664" endline="668">open_spiel::Game::ToString</referencedby>
        <referencedby refid="classopen__spiel_1_1_game_parameter_1af70e5458038ffcdc8a2680404daf9493" compoundref="game__parameters_8cc" startline="57" endline="75">open_spiel::GameParameter::ToString</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a035f482ab5b89b96645f2a9496430f61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classopen__spiel_1_1_game_parameter" kindref="compound">GameParameter</ref></type>
        <definition>GameParameter open_spiel::GameParameterFromString</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>GameParameterFromString</name>
        <qualifiedname>open_spiel::GameParameterFromString</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/game_parameters.cc" line="172" column="15" bodyfile="open_spiel/game_parameters.cc" bodystart="172" bodyend="192" declfile="open_spiel/game_parameters.h" declline="39" declcolumn="15"/>
        <references refid="namespaceopen__spiel_1ab52b8891e58c4d116690500440ca8f4c" compoundref="game__parameters_8cc" startline="194" endline="225">GameParametersFromString</references>
        <references refid="spiel__utils_8h_1ac998e613afb013e8bd31b3da80f747ae" compoundref="spiel__utils_8h" startline="282" endline="285">SPIEL_CHECK_TRUE</references>
        <referencedby refid="namespaceopen__spiel_1ab52b8891e58c4d116690500440ca8f4c" compoundref="game__parameters_8cc" startline="194" endline="225">GameParametersFromString</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1ab52b8891e58c4d116690500440ca8f4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceopen__spiel_1ad7c4d931669b5e357cb5c7f84a6de094" kindref="member">GameParameters</ref></type>
        <definition>GameParameters open_spiel::GameParametersFromString</definition>
        <argsstring>(const std::string &amp;game_string)</argsstring>
        <name>GameParametersFromString</name>
        <qualifiedname>open_spiel::GameParametersFromString</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>game_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/game_parameters.cc" line="194" column="16" bodyfile="open_spiel/game_parameters.cc" bodystart="194" bodyend="225" declfile="open_spiel/game_parameters.h" declline="40" declcolumn="16"/>
        <references refid="namespaceopen__spiel_1a035f482ab5b89b96645f2a9496430f61" compoundref="game__parameters_8cc" startline="172" endline="192">GameParameterFromString</references>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
        <referencedby refid="namespaceopen__spiel_1a035f482ab5b89b96645f2a9496430f61" compoundref="game__parameters_8cc" startline="172" endline="192">GameParameterFromString</referencedby>
        <referencedby refid="namespaceopen__spiel_1a9f69c0d1c3937873613115448ef856e7" compoundref="spiel__bots_8cc" startline="351" endline="361">LoadBot</referencedby>
        <referencedby refid="namespaceopen__spiel_1afd4ac299a038385def0ea56521067137" compoundref="spiel_8cc" startline="227" endline="229">LoadGame</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a9bc31aee9bea953807b92aa4399d1d10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string open_spiel::GameParameterTypeToString</definition>
        <argsstring>(const GameParameter::Type &amp;type)</argsstring>
        <name>GameParameterTypeToString</name>
        <qualifiedname>open_spiel::GameParameterTypeToString</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_game_parameter_1a06c795b6dc1ce7697eb863ad3f491871" kindref="member">GameParameter::Type</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/game_parameters.cc" line="227" column="13" bodyfile="open_spiel/game_parameters.cc" bodystart="227" bodyend="244" declfile="open_spiel/game_parameters.h" declline="185" declcolumn="13"/>
        <references refid="classopen__spiel_1_1_game_parameter_1a06c795b6dc1ce7697eb863ad3f491871a18268c9f691ba5a5f650049d9d0da8dc">open_spiel::GameParameter::kBool</references>
        <references refid="classopen__spiel_1_1_game_parameter_1a06c795b6dc1ce7697eb863ad3f491871a7fb3efa35444cd88d5a31dc125ca9c28">open_spiel::GameParameter::kDouble</references>
        <references refid="classopen__spiel_1_1_game_parameter_1a06c795b6dc1ce7697eb863ad3f491871aa0ea15bd49d6b8071efbed0aa70539ca">open_spiel::GameParameter::kGame</references>
        <references refid="classopen__spiel_1_1_game_parameter_1a06c795b6dc1ce7697eb863ad3f491871a355088fbd6ac81f051e0bd6ede5ab8e0">open_spiel::GameParameter::kInt</references>
        <references refid="classopen__spiel_1_1_game_parameter_1a06c795b6dc1ce7697eb863ad3f491871a302e56d566a2561033b27c13680ea4b2">open_spiel::GameParameter::kString</references>
        <references refid="classopen__spiel_1_1_game_parameter_1a06c795b6dc1ce7697eb863ad3f491871ac69d34d47bfd5244204004878441d53f">open_spiel::GameParameter::kUnset</references>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
        <referencedby refid="classopen__spiel_1_1_game_parameter_1ae97b3381b233541cd8890e10fc2ae4f5" compoundref="game__parameters_8cc" startline="77" endline="91">open_spiel::GameParameter::Serialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a884574376c8bd58e2bc3df5ffbc7eb0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool open_spiel::IsParameterSpecified</definition>
        <argsstring>(const GameParameters &amp;table, const std::string &amp;key)</argsstring>
        <name>IsParameterSpecified</name>
        <qualifiedname>open_spiel::IsParameterSpecified</qualifiedname>
        <param>
          <type>const <ref refid="namespaceopen__spiel_1ad7c4d931669b5e357cb5c7f84a6de094" kindref="member">GameParameters</ref> &amp;</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/game_parameters.h" line="202" column="13" bodyfile="open_spiel/game_parameters.h" bodystart="202" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a1e640b32f7c4fb2f9405803b79a93b19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T open_spiel::ParameterValue</definition>
        <argsstring>(const GameParameters &amp;params, const std::string &amp;key, absl::optional&lt; T &gt; default_value=absl::nullopt)</argsstring>
        <name>ParameterValue</name>
        <qualifiedname>open_spiel::ParameterValue</qualifiedname>
        <param>
          <type>const <ref refid="namespaceopen__spiel_1ad7c4d931669b5e357cb5c7f84a6de094" kindref="member">GameParameters</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>absl::optional&lt; T &gt;</type>
          <declname>default_value</declname>
          <defval>absl::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/game_parameters.h" line="208" column="3" bodyfile="open_spiel/game_parameters.h" bodystart="208" bodyend="221"/>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1ab19b15f183ec8ff4b20c30ea93d752ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classopen__spiel_1_1_observer" kindref="compound">Observer</ref> &gt;</type>
        <definition>std::shared_ptr&lt; Observer &gt; open_spiel::MakeSingleTensorObserver</definition>
        <argsstring>(const Game &amp;game, absl::optional&lt; IIGObservationType &gt; iig_obs_type, const GameParameters &amp;params)</argsstring>
        <name>MakeSingleTensorObserver</name>
        <qualifiedname>open_spiel::MakeSingleTensorObserver</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref> &amp;</type>
          <declname>game</declname>
        </param>
        <param>
          <type>absl::optional&lt; <ref refid="structopen__spiel_1_1_i_i_g_observation_type" kindref="compound">IIGObservationType</ref> &gt;</type>
          <declname>iig_obs_type</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceopen__spiel_1ad7c4d931669b5e357cb5c7f84a6de094" kindref="member">GameParameters</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/observer.cc" line="347" column="17" bodyfile="open_spiel/observer.cc" bodystart="347" bodyend="351"/>
        <references refid="classopen__spiel_1_1_game_1aa99f0ac0aeb14c3a190ae9fa56f428c3" compoundref="observer_8cc" startline="137" endline="175">open_spiel::Game::MakeBuiltInObserver</references>
        <referencedby refid="classopen__spiel_1_1_register_single_tensor_observer_1a5a2ceba6b6ae1086bf3e8c3836802069" compoundref="observer_8cc" startline="353" endline="357">open_spiel::RegisterSingleTensorObserver::RegisterSingleTensorObserver</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a91fe25f1b974060eec9ada51abe43b78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; open_spiel::TensorFromObserver</definition>
        <argsstring>(const State &amp;state, const Observer &amp;observer)</argsstring>
        <name>TensorFromObserver</name>
        <qualifiedname>open_spiel::TensorFromObserver</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_observer" kindref="compound">Observer</ref> &amp;</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/observer.cc" line="373" column="13" bodyfile="open_spiel/observer.cc" bodystart="373" bodyend="378" declfile="open_spiel/observer.h" declline="467" declcolumn="13"/>
        <references refid="classopen__spiel_1_1_tracking_vector_allocator_1a94caba8e758ac00e63ec5236932aa721" compoundref="observer_8h" startline="201" endline="201">open_spiel::TrackingVectorAllocator::data</references>
        <references refid="classopen__spiel_1_1_observer_1aeba70fb78b7502fb6c24182be2db861d">open_spiel::Observer::WriteTensor</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a03fc20c0c2c07f8c196ebe7dd9f0c251" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; open_spiel::ObserverTensorShape</definition>
        <argsstring>(const State &amp;state, const Observer &amp;observer)</argsstring>
        <name>ObserverTensorShape</name>
        <qualifiedname>open_spiel::ObserverTensorShape</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_observer" kindref="compound">Observer</ref> &amp;</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/observer.cc" line="380" column="13" bodyfile="open_spiel/observer.cc" bodystart="380" bodyend="389" declfile="open_spiel/observer.h" declline="473" declcolumn="13"/>
        <references refid="classopen__spiel_1_1_tracking_vector_allocator_1a94caba8e758ac00e63ec5236932aa721" compoundref="observer_8h" startline="201" endline="201">open_spiel::TrackingVectorAllocator::data</references>
        <references refid="classopen__spiel_1_1_tracking_vector_allocator_1a2b33c4f381cb9a2dfc4c6d8d00ff2e7a" compoundref="observer_8h" startline="199" endline="199">open_spiel::TrackingVectorAllocator::tensors_info</references>
        <references refid="classopen__spiel_1_1_observer_1aeba70fb78b7502fb6c24182be2db861d">open_spiel::Observer::WriteTensor</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1af107cfba13b9ff637482f49799818200" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void open_spiel::SetProb</definition>
        <argsstring>(ActionsAndProbs *actions_and_probs, Action action, double prob)</argsstring>
        <name>SetProb</name>
        <qualifiedname>open_spiel::SetProb</qualifiedname>
        <param>
          <type><ref refid="namespaceopen__spiel_1ac4ea6d9d7193ac74f6f333b954e3810f" kindref="member">ActionsAndProbs</ref> *</type>
          <declname>actions_and_probs</declname>
        </param>
        <param>
          <type><ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref></type>
          <declname>action</declname>
        </param>
        <param>
          <type>double</type>
          <declname>prob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.cc" line="41" column="6" bodyfile="open_spiel/policy.cc" bodystart="41" bodyend="49" declfile="open_spiel/policy.h" declline="35" declcolumn="6"/>
        <referencedby refid="classopen__spiel_1_1_tabular_policy_1aecf68dd4e96c21ef396b9c539c81e801" compoundref="policy_8h" startline="249" endline="256">open_spiel::TabularPolicy::SetProb</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1ac1d569f0265995b4a34226e420cd894c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double open_spiel::GetProb</definition>
        <argsstring>(const ActionsAndProbs &amp;action_and_probs, Action action)</argsstring>
        <name>GetProb</name>
        <qualifiedname>open_spiel::GetProb</qualifiedname>
        <param>
          <type>const <ref refid="namespaceopen__spiel_1ac4ea6d9d7193ac74f6f333b954e3810f" kindref="member">ActionsAndProbs</ref> &amp;</type>
          <declname>action_and_probs</declname>
        </param>
        <param>
          <type><ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref></type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.cc" line="51" column="8" bodyfile="open_spiel/policy.cc" bodystart="51" bodyend="58" declfile="open_spiel/policy.h" declline="32" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1ab6a13349730ac4084a90ffade1876871" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref></type>
        <definition>Action open_spiel::GetAction</definition>
        <argsstring>(const ActionsAndProbs &amp;action_and_probs)</argsstring>
        <name>GetAction</name>
        <qualifiedname>open_spiel::GetAction</qualifiedname>
        <param>
          <type>const <ref refid="namespaceopen__spiel_1ac4ea6d9d7193ac74f6f333b954e3810f" kindref="member">ActionsAndProbs</ref> &amp;</type>
          <declname>action_and_probs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.cc" line="60" column="8" bodyfile="open_spiel/policy.cc" bodystart="60" bodyend="67" declfile="open_spiel/policy.h" declline="39" declcolumn="8"/>
        <references refid="namespaceopen__spiel_1adbc825960a0651d53f5d6423343fafae" compoundref="spiel__globals_8h" startline="40">kInvalidAction</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a9b0fa4e52ca589e36be9ff944e76ff81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceopen__spiel_1ac4ea6d9d7193ac74f6f333b954e3810f" kindref="member">ActionsAndProbs</ref></type>
        <definition>ActionsAndProbs open_spiel::ToDeterministicPolicy</definition>
        <argsstring>(const ActionsAndProbs &amp;actions_and_probs, Action action)</argsstring>
        <name>ToDeterministicPolicy</name>
        <qualifiedname>open_spiel::ToDeterministicPolicy</qualifiedname>
        <param>
          <type>const <ref refid="namespaceopen__spiel_1ac4ea6d9d7193ac74f6f333b954e3810f" kindref="member">ActionsAndProbs</ref> &amp;</type>
          <declname>actions_and_probs</declname>
        </param>
        <param>
          <type><ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref></type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.cc" line="69" column="17" bodyfile="open_spiel/policy.cc" bodystart="69" bodyend="77" declfile="open_spiel/policy.h" declline="54" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a3bebea309b826c727a0e217110e13c0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool open_spiel::StatePoliciesEqual</definition>
        <argsstring>(const ActionsAndProbs &amp;state_policy1, const ActionsAndProbs &amp;state_policy2, double float_tolerance)</argsstring>
        <name>StatePoliciesEqual</name>
        <qualifiedname>open_spiel::StatePoliciesEqual</qualifiedname>
        <param>
          <type>const <ref refid="namespaceopen__spiel_1ac4ea6d9d7193ac74f6f333b954e3810f" kindref="member">ActionsAndProbs</ref> &amp;</type>
          <declname>state_policy1</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceopen__spiel_1ac4ea6d9d7193ac74f6f333b954e3810f" kindref="member">ActionsAndProbs</ref> &amp;</type>
          <declname>state_policy2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>float_tolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.cc" line="79" column="6" bodyfile="open_spiel/policy.cc" bodystart="79" bodyend="98" declfile="open_spiel/policy.h" declline="63" declcolumn="6"/>
        <references refid="namespaceopen__spiel_1ae9813a4514ea28067d143537f9109094" compoundref="spiel__utils_8h" startline="185" endline="189">Near</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a46d8a1243693d4ef5fce2f038a6653f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceopen__spiel_1ac4ea6d9d7193ac74f6f333b954e3810f" kindref="member">ActionsAndProbs</ref></type>
        <definition>ActionsAndProbs open_spiel::GetDeterministicPolicy</definition>
        <argsstring>(const std::vector&lt; Action &gt; &amp;legal_actions, Action action)</argsstring>
        <name>GetDeterministicPolicy</name>
        <qualifiedname>open_spiel::GetDeterministicPolicy</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref> &gt; &amp;</type>
          <declname>legal_actions</declname>
        </param>
        <param>
          <type><ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref></type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.cc" line="100" column="17" bodyfile="open_spiel/policy.cc" bodystart="100" bodyend="108" declfile="open_spiel/policy.h" declline="58" declcolumn="17"/>
        <referencedby refid="classopen__spiel_1_1_preferred_action_policy_1ad4cccc4bd0b7060f4d04a47f716a408a" compoundref="policy_8cc" startline="477" endline="486">open_spiel::PreferredActionPolicy::GetStatePolicy</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1ad329b96a775a4a21bebf491968d87cfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceopen__spiel_1ac4ea6d9d7193ac74f6f333b954e3810f" kindref="member">ActionsAndProbs</ref></type>
        <definition>ActionsAndProbs open_spiel::UniformStatePolicy</definition>
        <argsstring>(const std::vector&lt; Action &gt; &amp;actions)</argsstring>
        <name>UniformStatePolicy</name>
        <qualifiedname>open_spiel::UniformStatePolicy</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref> &gt; &amp;</type>
          <declname>actions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.cc" line="110" column="17" bodyfile="open_spiel/policy.cc" bodystart="110" bodyend="116"/>
        <referencedby refid="classopen__spiel_1_1_uniform_policy_1af74a3922b9944a32fd4a82024a3b5721" compoundref="policy_8h" startline="320" endline="328">open_spiel::UniformPolicy::GetStatePolicy</referencedby>
        <referencedby refid="namespaceopen__spiel_1a2623a181962410b277b49bcabb2e0d85" compoundref="policy_8cc" startline="118" endline="120">UniformStatePolicy</referencedby>
        <referencedby refid="namespaceopen__spiel_1a9e01ab3d3f27ef4d52ea88b66c09b8e0" compoundref="policy_8cc" startline="122" endline="124">UniformStatePolicy</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a2623a181962410b277b49bcabb2e0d85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceopen__spiel_1ac4ea6d9d7193ac74f6f333b954e3810f" kindref="member">ActionsAndProbs</ref></type>
        <definition>ActionsAndProbs open_spiel::UniformStatePolicy</definition>
        <argsstring>(const State &amp;state)</argsstring>
        <name>UniformStatePolicy</name>
        <qualifiedname>open_spiel::UniformStatePolicy</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.cc" line="118" column="17" bodyfile="open_spiel/policy.cc" bodystart="118" bodyend="120" declfile="open_spiel/policy.h" declline="44" declcolumn="17"/>
        <references refid="namespaceopen__spiel_1ad329b96a775a4a21bebf491968d87cfe" compoundref="policy_8cc" startline="110" endline="116">UniformStatePolicy</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a9e01ab3d3f27ef4d52ea88b66c09b8e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceopen__spiel_1ac4ea6d9d7193ac74f6f333b954e3810f" kindref="member">ActionsAndProbs</ref></type>
        <definition>ActionsAndProbs open_spiel::UniformStatePolicy</definition>
        <argsstring>(const State &amp;state, Player player)</argsstring>
        <name>UniformStatePolicy</name>
        <qualifiedname>open_spiel::UniformStatePolicy</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref></type>
          <declname>player</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.cc" line="122" column="17" bodyfile="open_spiel/policy.cc" bodystart="122" bodyend="124" declfile="open_spiel/policy.h" declline="45" declcolumn="17"/>
        <references refid="namespaceopen__spiel_1ad329b96a775a4a21bebf491968d87cfe" compoundref="policy_8cc" startline="110" endline="116">UniformStatePolicy</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a0ff11c30833a9d4a5c12510080596429" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceopen__spiel_1ac4ea6d9d7193ac74f6f333b954e3810f" kindref="member">ActionsAndProbs</ref></type>
        <definition>ActionsAndProbs open_spiel::FirstActionStatePolicy</definition>
        <argsstring>(const State &amp;state)</argsstring>
        <name>FirstActionStatePolicy</name>
        <qualifiedname>open_spiel::FirstActionStatePolicy</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.cc" line="126" column="17" bodyfile="open_spiel/policy.cc" bodystart="126" bodyend="128" declfile="open_spiel/policy.h" declline="49" declcolumn="17"/>
        <references refid="namespaceopen__spiel_1a0ff11c30833a9d4a5c12510080596429" compoundref="policy_8cc" startline="126" endline="128">FirstActionStatePolicy</references>
        <referencedby refid="namespaceopen__spiel_1a0ff11c30833a9d4a5c12510080596429" compoundref="policy_8cc" startline="126" endline="128">FirstActionStatePolicy</referencedby>
        <referencedby refid="classopen__spiel_1_1_first_action_policy_1af1170c5460cac64d6321ab2a6fa1a181" compoundref="policy_8h" startline="339" endline="347">open_spiel::FirstActionPolicy::GetStatePolicy</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1aed834f86ede12bcba10d92d82607bcdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceopen__spiel_1ac4ea6d9d7193ac74f6f333b954e3810f" kindref="member">ActionsAndProbs</ref></type>
        <definition>ActionsAndProbs open_spiel::FirstActionStatePolicy</definition>
        <argsstring>(const State &amp;state, Player player)</argsstring>
        <name>FirstActionStatePolicy</name>
        <qualifiedname>open_spiel::FirstActionStatePolicy</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref></type>
          <declname>player</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.cc" line="130" column="17" bodyfile="open_spiel/policy.cc" bodystart="130" bodyend="138" declfile="open_spiel/policy.h" declline="50" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a4aa4716074f62c6165c43e0b97119bfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classopen__spiel_1_1_policy" kindref="compound">Policy</ref> &gt;</type>
        <definition>std::unique_ptr&lt; Policy &gt; open_spiel::DeserializePolicy</definition>
        <argsstring>(const std::string &amp;serialized, std::string delimiter)</argsstring>
        <name>DeserializePolicy</name>
        <qualifiedname>open_spiel::DeserializePolicy</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>serialized</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>delimiter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.cc" line="140" column="17" bodyfile="open_spiel/policy.cc" bodystart="140" bodyend="156" declfile="open_spiel/policy.h" declline="149" declcolumn="17"/>
        <references refid="namespaceopen__spiel_1a0ed3e36da1be8bc1313510099d897c06" compoundref="policy_8cc" startline="161" endline="196">DeserializeTabularPolicy</references>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a0ed3e36da1be8bc1313510099d897c06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classopen__spiel_1_1_tabular_policy" kindref="compound">TabularPolicy</ref> &gt;</type>
        <definition>std::unique_ptr&lt; TabularPolicy &gt; open_spiel::DeserializeTabularPolicy</definition>
        <argsstring>(const std::string &amp;serialized, std::string delimiter)</argsstring>
        <name>DeserializeTabularPolicy</name>
        <qualifiedname>open_spiel::DeserializeTabularPolicy</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>serialized</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>delimiter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.cc" line="161" column="17" bodyfile="open_spiel/policy.cc" bodystart="161" bodyend="196" declfile="open_spiel/policy.h" declline="313" declcolumn="17"/>
        <references refid="spiel__utils_8h_1abcb08ef83297cd8a69ac67d47cfa5da2" compoundref="spiel__utils_8h" startline="259">SPIEL_CHECK_EQ</references>
        <references refid="spiel__utils_8h_1ac998e613afb013e8bd31b3da80f747ae" compoundref="spiel__utils_8h" startline="282" endline="285">SPIEL_CHECK_TRUE</references>
        <referencedby refid="namespaceopen__spiel_1a4aa4716074f62c6165c43e0b97119bfe" compoundref="policy_8cc" startline="140" endline="156">DeserializePolicy</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1aab6328ff82289cc5a639af623b07983f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classopen__spiel_1_1_tabular_policy" kindref="compound">TabularPolicy</ref></type>
        <definition>TabularPolicy open_spiel::GetEmptyTabularPolicy</definition>
        <argsstring>(const Game &amp;game, bool initialize_to_uniform, Player player)</argsstring>
        <name>GetEmptyTabularPolicy</name>
        <qualifiedname>open_spiel::GetEmptyTabularPolicy</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref> &amp;</type>
          <declname>game</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>initialize_to_uniform</declname>
        </param>
        <param>
          <type><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref></type>
          <declname>player</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.cc" line="275" column="15" bodyfile="open_spiel/policy.cc" bodystart="275" bodyend="321" declfile="open_spiel/policy.h" declline="387" declcolumn="15"/>
        <references refid="structopen__spiel_1_1_game_type_1ac1176bf5ed045dc24fb4b113af2750b8" compoundref="spiel_8h" startline="65">open_spiel::GameType::dynamics</references>
        <references refid="classopen__spiel_1_1_game_1ab43a710b19e2cebf48ceaeccd3c8961f" compoundref="spiel_8h" startline="809" endline="809">open_spiel::Game::GetType</references>
        <references refid="structopen__spiel_1_1_game_type_1a624349737f34cc67d0cf81fd7138c17baeb609b99f542b955302693c0f445ba0c">open_spiel::GameType::kSequential</references>
        <references refid="classopen__spiel_1_1_game_1a5696835fab2961be5e2a0a08e36999a5">open_spiel::Game::NewInitialState</references>
        <references refid="spiel__utils_8h_1a948872aa56d9cd14a37c436d9b4d8760" compoundref="spiel__utils_8h" startline="256">SPIEL_CHECK_GT</references>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
        <referencedby refid="namespaceopen__spiel_1aa722abb4a8f0f206a1b109c4ee77b2bd" compoundref="policy_8cc" startline="323" endline="325">GetUniformPolicy</referencedby>
        <referencedby refid="namespaceopen__spiel_1aef7d54d21976971293ba4dcef744dd82" compoundref="policy_8cc" startline="328" endline="363">SamplePolicy</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1aa722abb4a8f0f206a1b109c4ee77b2bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classopen__spiel_1_1_tabular_policy" kindref="compound">TabularPolicy</ref></type>
        <definition>TabularPolicy open_spiel::GetUniformPolicy</definition>
        <argsstring>(const Game &amp;game)</argsstring>
        <name>GetUniformPolicy</name>
        <qualifiedname>open_spiel::GetUniformPolicy</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref> &amp;</type>
          <declname>game</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.cc" line="323" column="15" bodyfile="open_spiel/policy.cc" bodystart="323" bodyend="325" declfile="open_spiel/policy.h" declline="390" declcolumn="15"/>
        <references refid="namespaceopen__spiel_1aab6328ff82289cc5a639af623b07983f" compoundref="policy_8cc" startline="275" endline="321">GetEmptyTabularPolicy</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1aef7d54d21976971293ba4dcef744dd82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RandomNumberDistribution</type>
          </param>
        </templateparamlist>
        <type><ref refid="classopen__spiel_1_1_tabular_policy" kindref="compound">TabularPolicy</ref></type>
        <definition>TabularPolicy open_spiel::SamplePolicy</definition>
        <argsstring>(const Game &amp;game, int seed, RandomNumberDistribution &amp;dist, Player player)</argsstring>
        <name>SamplePolicy</name>
        <qualifiedname>open_spiel::SamplePolicy</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref> &amp;</type>
          <declname>game</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>RandomNumberDistribution &amp;</type>
          <declname>dist</declname>
        </param>
        <param>
          <type><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref></type>
          <declname>player</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.cc" line="328" column="15" bodyfile="open_spiel/policy.cc" bodystart="328" bodyend="363"/>
        <references refid="namespaceopen__spiel_1aab6328ff82289cc5a639af623b07983f" compoundref="policy_8cc" startline="275" endline="321">GetEmptyTabularPolicy</references>
        <references refid="spiel__utils_8h_1a1d6eea934e8beba47b04b9b35176e563" compoundref="spiel__utils_8h" startline="273" endline="275">SPIEL_CHECK_FLOAT_EQ</references>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
        <referencedby refid="namespaceopen__spiel_1a8505b434fc79f0f377c33811bb1c42e4" compoundref="policy_8cc" startline="370" endline="374">GetFlatDirichletPolicy</referencedby>
        <referencedby refid="namespaceopen__spiel_1abf366a47eada8918036c7cfe054e263a" compoundref="policy_8cc" startline="365" endline="368">GetRandomPolicy</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1abf366a47eada8918036c7cfe054e263a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classopen__spiel_1_1_tabular_policy" kindref="compound">TabularPolicy</ref></type>
        <definition>TabularPolicy open_spiel::GetRandomPolicy</definition>
        <argsstring>(const Game &amp;game, int seed, Player player)</argsstring>
        <name>GetRandomPolicy</name>
        <qualifiedname>open_spiel::GetRandomPolicy</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref> &amp;</type>
          <declname>game</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <param>
          <type><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref></type>
          <declname>player</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.cc" line="365" column="15" bodyfile="open_spiel/policy.cc" bodystart="365" bodyend="368" declfile="open_spiel/policy.h" declline="391" declcolumn="15"/>
        <references refid="namespaceopen__spiel_1aef7d54d21976971293ba4dcef744dd82" compoundref="policy_8cc" startline="328" endline="363">SamplePolicy</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a8505b434fc79f0f377c33811bb1c42e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classopen__spiel_1_1_tabular_policy" kindref="compound">TabularPolicy</ref></type>
        <definition>TabularPolicy open_spiel::GetFlatDirichletPolicy</definition>
        <argsstring>(const Game &amp;game, int seed, Player player)</argsstring>
        <name>GetFlatDirichletPolicy</name>
        <qualifiedname>open_spiel::GetFlatDirichletPolicy</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref> &amp;</type>
          <declname>game</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <param>
          <type><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref></type>
          <declname>player</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.cc" line="370" column="15" bodyfile="open_spiel/policy.cc" bodystart="370" bodyend="374" declfile="open_spiel/policy.h" declline="393" declcolumn="15"/>
        <references refid="namespaceopen__spiel_1aef7d54d21976971293ba4dcef744dd82" compoundref="policy_8cc" startline="328" endline="363">SamplePolicy</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a5dc710e7fbd94c8c96e616086be2437d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classopen__spiel_1_1_tabular_policy" kindref="compound">TabularPolicy</ref></type>
        <definition>TabularPolicy open_spiel::GetRandomDeterministicPolicy</definition>
        <argsstring>(const Game &amp;game, int seed, Player player)</argsstring>
        <name>GetRandomDeterministicPolicy</name>
        <qualifiedname>open_spiel::GetRandomDeterministicPolicy</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref> &amp;</type>
          <declname>game</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <param>
          <type><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref></type>
          <declname>player</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.cc" line="376" column="15" bodyfile="open_spiel/policy.cc" bodystart="376" bodyend="430" declfile="open_spiel/policy.h" declline="395" declcolumn="15"/>
        <references refid="structopen__spiel_1_1_game_type_1ac1176bf5ed045dc24fb4b113af2750b8" compoundref="spiel_8h" startline="65">open_spiel::GameType::dynamics</references>
        <references refid="classopen__spiel_1_1_game_1ab43a710b19e2cebf48ceaeccd3c8961f" compoundref="spiel_8h" startline="809" endline="809">open_spiel::Game::GetType</references>
        <references refid="structopen__spiel_1_1_game_type_1a99e4ce5d58635d108e99367a5d12f589" compoundref="spiel_8h" startline="92">open_spiel::GameType::information</references>
        <references refid="structopen__spiel_1_1_game_type_1a0b4230b668f857b0815bd55f11b522aeacd60620d6401b630c39d1af12e6d701a">open_spiel::GameType::kPerfectInformation</references>
        <references refid="structopen__spiel_1_1_game_type_1a624349737f34cc67d0cf81fd7138c17baeb609b99f542b955302693c0f445ba0c">open_spiel::GameType::kSequential</references>
        <references refid="classopen__spiel_1_1_game_1a5696835fab2961be5e2a0a08e36999a5">open_spiel::Game::NewInitialState</references>
        <references refid="spiel__utils_8h_1a5fa701f61bd5416434d72f3628e093b7" compoundref="spiel__utils_8h" startline="255">SPIEL_CHECK_GE</references>
        <references refid="spiel__utils_8h_1a948872aa56d9cd14a37c436d9b4d8760" compoundref="spiel__utils_8h" startline="256">SPIEL_CHECK_GT</references>
        <references refid="spiel__utils_8h_1ad9b10d8a52955f75371525c0f9f21b69" compoundref="spiel__utils_8h" startline="258">SPIEL_CHECK_LT</references>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a0fa54efbbbe01ea0ece4b0323105158c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classopen__spiel_1_1_tabular_policy" kindref="compound">TabularPolicy</ref></type>
        <definition>TabularPolicy open_spiel::GetFirstActionPolicy</definition>
        <argsstring>(const Game &amp;game)</argsstring>
        <name>GetFirstActionPolicy</name>
        <qualifiedname>open_spiel::GetFirstActionPolicy</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref> &amp;</type>
          <declname>game</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.cc" line="432" column="15" bodyfile="open_spiel/policy.cc" bodystart="432" bodyend="475" declfile="open_spiel/policy.h" declline="397" declcolumn="15"/>
        <references refid="structopen__spiel_1_1_game_type_1ac1176bf5ed045dc24fb4b113af2750b8" compoundref="spiel_8h" startline="65">open_spiel::GameType::dynamics</references>
        <references refid="classopen__spiel_1_1_game_1ab43a710b19e2cebf48ceaeccd3c8961f" compoundref="spiel_8h" startline="809" endline="809">open_spiel::Game::GetType</references>
        <references refid="structopen__spiel_1_1_game_type_1a624349737f34cc67d0cf81fd7138c17baeb609b99f542b955302693c0f445ba0c">open_spiel::GameType::kSequential</references>
        <references refid="classopen__spiel_1_1_game_1a5696835fab2961be5e2a0a08e36999a5">open_spiel::Game::NewInitialState</references>
        <references refid="spiel__utils_8h_1a948872aa56d9cd14a37c436d9b4d8760" compoundref="spiel__utils_8h" startline="256">SPIEL_CHECK_GT</references>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a869a3dd2e31acc33871b10af3ce370d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classopen__spiel_1_1_tabular_policy" kindref="compound">TabularPolicy</ref></type>
        <definition>TabularPolicy open_spiel::ToTabularPolicy</definition>
        <argsstring>(const Game &amp;game, const Policy *policy)</argsstring>
        <name>ToTabularPolicy</name>
        <qualifiedname>open_spiel::ToTabularPolicy</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref> &amp;</type>
          <declname>game</declname>
        </param>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_policy" kindref="compound">Policy</ref> *</type>
          <declname>policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.cc" line="488" column="15" bodyfile="open_spiel/policy.cc" bodystart="488" bodyend="518" declfile="open_spiel/policy.h" declline="382" declcolumn="15"/>
        <references refid="classopen__spiel_1_1_game_1a5696835fab2961be5e2a0a08e36999a5">open_spiel::Game::NewInitialState</references>
        <references refid="classopen__spiel_1_1_game_1ade22718c6a0360525840cb7f7c68cab0">open_spiel::Game::NumPlayers</references>
        <references refid="classopen__spiel_1_1_tabular_policy_1a9e49a297648e0c5493b6d637b49ab97a" compoundref="policy_8h" startline="258" endline="261">open_spiel::TabularPolicy::SetStatePolicy</references>
        <referencedby refid="namespaceopen__spiel_1ab8ac671460647a64df4b861b3879f32b" compoundref="policy_8cc" startline="520" endline="524">GetPrefActionPolicy</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1ab8ac671460647a64df4b861b3879f32b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classopen__spiel_1_1_tabular_policy" kindref="compound">TabularPolicy</ref></type>
        <definition>TabularPolicy open_spiel::GetPrefActionPolicy</definition>
        <argsstring>(const Game &amp;game, const std::vector&lt; Action &gt; &amp;pref_actions)</argsstring>
        <name>GetPrefActionPolicy</name>
        <qualifiedname>open_spiel::GetPrefActionPolicy</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref> &amp;</type>
          <declname>game</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref> &gt; &amp;</type>
          <declname>pref_actions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.cc" line="520" column="15" bodyfile="open_spiel/policy.cc" bodystart="520" bodyend="524" declfile="open_spiel/policy.h" declline="400" declcolumn="15"/>
        <references refid="namespaceopen__spiel_1a869a3dd2e31acc33871b10af3ce370d0" compoundref="policy_8cc" startline="488" endline="518">ToTabularPolicy</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a9867a0567fef1b912a4ce027e7388ef2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string open_spiel::PrintPolicy</definition>
        <argsstring>(const ActionsAndProbs &amp;policy)</argsstring>
        <name>PrintPolicy</name>
        <qualifiedname>open_spiel::PrintPolicy</qualifiedname>
        <param>
          <type>const <ref refid="namespaceopen__spiel_1ac4ea6d9d7193ac74f6f333b954e3810f" kindref="member">ActionsAndProbs</ref> &amp;</type>
          <declname>policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.cc" line="526" column="13" bodyfile="open_spiel/policy.cc" bodystart="526" bodyend="532" declfile="open_spiel/policy.h" declline="403" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a9d4e65df2e25cb6f13ab027a35419458" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classopen__spiel_1_1_tabular_policy" kindref="compound">TabularPolicy</ref></type>
        <definition>TabularPolicy open_spiel::ToJointTabularPolicy</definition>
        <argsstring>(const std::vector&lt; TabularPolicy &gt; &amp;policies, bool check_no_overlap)</argsstring>
        <name>ToJointTabularPolicy</name>
        <qualifiedname>open_spiel::ToJointTabularPolicy</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="classopen__spiel_1_1_tabular_policy" kindref="compound">TabularPolicy</ref> &gt; &amp;</type>
          <declname>policies</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>check_no_overlap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/policy.cc" line="534" column="15" bodyfile="open_spiel/policy.cc" bodystart="534" bodyend="547" declfile="open_spiel/policy.h" declline="408" declcolumn="15"/>
        <references refid="classopen__spiel_1_1_tabular_policy_1aadd48620dda02dd41ddabbe9094be3cb" compoundref="policy_8h" startline="239" endline="244">open_spiel::TabularPolicy::ImportPolicy</references>
        <references refid="classopen__spiel_1_1_tabular_policy_1aeb80cea37a604e77f71a6a7c25c5d6de" compoundref="policy_8h" startline="263" endline="265">open_spiel::TabularPolicy::PolicyTable</references>
        <references refid="spiel__utils_8h_1ac998e613afb013e8bd31b3da80f747ae" compoundref="spiel__utils_8h" startline="282" endline="285">SPIEL_CHECK_TRUE</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a7a4f3573ff9d467ce5c64eecbe5ea8b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; open_spiel::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const StateType &amp;type)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>open_spiel::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceopen__spiel_1a236dc05d070fca4a27a4344aea799332" kindref="member">StateType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="96" column="1" bodyfile="open_spiel/spiel.cc" bodystart="96" bodyend="116" declfile="open_spiel/spiel.h" declline="189" declcolumn="1"/>
        <references refid="namespaceopen__spiel_1a236dc05d070fca4a27a4344aea799332add0bd69a737669b5dd8d6e357971e2dd">kChance</references>
        <references refid="namespaceopen__spiel_1a236dc05d070fca4a27a4344aea799332a81d16d84af3281936e1b3a437b2d7385">kDecision</references>
        <references refid="namespaceopen__spiel_1a236dc05d070fca4a27a4344aea799332a6a40bb1d52ea6251e5ce3b9e7d3577bd">kMeanField</references>
        <references refid="namespaceopen__spiel_1a236dc05d070fca4a27a4344aea799332a217dd2f6ef26065693bb5043fce241ea">kTerminal</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1adbb556e9d12546dd17acfe8c3887b869" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool open_spiel::IsGameRegistered</definition>
        <argsstring>(const std::string &amp;short_name)</argsstring>
        <name>IsGameRegistered</name>
        <qualifiedname>open_spiel::IsGameRegistered</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>short_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="193" column="6" bodyfile="open_spiel/spiel.cc" bodystart="193" bodyend="195" declfile="open_spiel/spiel.h" declline="1077" declcolumn="6"/>
        <references refid="classopen__spiel_1_1_game_registerer_1a656bdcb02ce81779bb05dda3fb2e7936" compoundref="spiel_8cc" startline="184" endline="186">open_spiel::GameRegisterer::IsValidName</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a5fc96e037a90ad323529c4f55d7d2cce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; open_spiel::RegisteredGames</definition>
        <argsstring>()</argsstring>
        <name>RegisteredGames</name>
        <qualifiedname>open_spiel::RegisteredGames</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="197" column="13" bodyfile="open_spiel/spiel.cc" bodystart="197" bodyend="199" declfile="open_spiel/spiel.h" declline="1080" declcolumn="13"/>
        <references refid="classopen__spiel_1_1_game_registerer_1a2dd29263f74ac828f1c9c4ee0161b04f" compoundref="spiel_8cc" startline="164" endline="170">open_spiel::GameRegisterer::RegisteredNames</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a79f969c1807e578a2090d314ab71bf68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structopen__spiel_1_1_game_type" kindref="compound">GameType</ref> &gt;</type>
        <definition>std::vector&lt; GameType &gt; open_spiel::RegisteredGameTypes</definition>
        <argsstring>()</argsstring>
        <name>RegisteredGameTypes</name>
        <qualifiedname>open_spiel::RegisteredGameTypes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="201" column="13" bodyfile="open_spiel/spiel.cc" bodystart="201" bodyend="203" declfile="open_spiel/spiel.h" declline="1083" declcolumn="13"/>
        <references refid="classopen__spiel_1_1_game_registerer_1ab0c87d50dfa049e12c70c2a665def26c" compoundref="spiel_8cc" startline="176" endline="182">open_spiel::GameRegisterer::RegisteredGames</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a46be5ac78a1c87daeef36b4b8dd67c3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; const <ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref> &gt;</type>
        <definition>std::shared_ptr&lt; const Game &gt; open_spiel::DeserializeGame</definition>
        <argsstring>(const std::string &amp;serialized)</argsstring>
        <name>DeserializeGame</name>
        <qualifiedname>open_spiel::DeserializeGame</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>serialized</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="205" column="17" bodyfile="open_spiel/spiel.cc" bodystart="205" bodyend="225" declfile="open_spiel/spiel.h" declline="1085" declcolumn="17"/>
        <references refid="namespaceopen__spiel_1afd4ac299a038385def0ea56521067137" compoundref="spiel_8cc" startline="227" endline="229">LoadGame</references>
        <referencedby refid="namespaceopen__spiel_1a523877157f33ec65d5c05fe6eb0cfb9e" compoundref="spiel_8cc" startline="467" endline="509">DeserializeGameAndState</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1afd4ac299a038385def0ea56521067137" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; const <ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref> &gt;</type>
        <definition>std::shared_ptr&lt; const Game &gt; open_spiel::LoadGame</definition>
        <argsstring>(const std::string &amp;game_string)</argsstring>
        <name>LoadGame</name>
        <qualifiedname>open_spiel::LoadGame</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>game_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="227" column="17" bodyfile="open_spiel/spiel.cc" bodystart="227" bodyend="229" declfile="open_spiel/spiel.h" declline="1089" declcolumn="17"/>
        <references refid="namespaceopen__spiel_1ab52b8891e58c4d116690500440ca8f4c" compoundref="game__parameters_8cc" startline="194" endline="225">GameParametersFromString</references>
        <references refid="namespaceopen__spiel_1afd4ac299a038385def0ea56521067137" compoundref="spiel_8cc" startline="227" endline="229">LoadGame</references>
        <referencedby refid="namespaceopen__spiel_1a8e5ff0d85e37788198b7cc387a7e5780" compoundref="spiel_8cc" startline="851" endline="891">BuildStateFromHistoryString</referencedby>
        <referencedby refid="namespaceopen__spiel_1a46be5ac78a1c87daeef36b4b8dd67c3c" compoundref="spiel_8cc" startline="205" endline="225">DeserializeGame</referencedby>
        <referencedby refid="namespaceopen__spiel_1afd4ac299a038385def0ea56521067137" compoundref="spiel_8cc" startline="227" endline="229">LoadGame</referencedby>
        <referencedby refid="kbg__test_8cc_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="kbg__test_8cc" startline="10" endline="64">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a041180755b50ef57ca83e4ca9f3827b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; const <ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref> &gt;</type>
        <definition>std::shared_ptr&lt; const Game &gt; open_spiel::LoadGame</definition>
        <argsstring>(const std::string &amp;short_name, const GameParameters &amp;params)</argsstring>
        <name>LoadGame</name>
        <qualifiedname>open_spiel::LoadGame</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>short_name</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceopen__spiel_1ad7c4d931669b5e357cb5c7f84a6de094" kindref="member">GameParameters</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="231" column="17" bodyfile="open_spiel/spiel.cc" bodystart="231" bodyend="239" declfile="open_spiel/spiel.h" declline="1092" declcolumn="17"/>
        <references refid="classopen__spiel_1_1_game_registerer_1a6e6f8091b1e3c521af50e71b0dce5717" compoundref="spiel_8cc" startline="143" endline="162">open_spiel::GameRegisterer::CreateByName</references>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1ab464ff98519dd7819e7cd8fc30234716" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; const <ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref> &gt;</type>
        <definition>std::shared_ptr&lt; const Game &gt; open_spiel::LoadGame</definition>
        <argsstring>(GameParameters params)</argsstring>
        <name>LoadGame</name>
        <qualifiedname>open_spiel::LoadGame</qualifiedname>
        <param>
          <type><ref refid="namespaceopen__spiel_1ad7c4d931669b5e357cb5c7f84a6de094" kindref="member">GameParameters</ref></type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="241" column="17" bodyfile="open_spiel/spiel.cc" bodystart="241" bodyend="256" declfile="open_spiel/spiel.h" declline="1098" declcolumn="17"/>
        <references refid="classopen__spiel_1_1_game_registerer_1a6e6f8091b1e3c521af50e71b0dce5717" compoundref="spiel_8cc" startline="143" endline="162">open_spiel::GameRegisterer::CreateByName</references>
        <references refid="namespaceopen__spiel_1aa0832688fe92be988164cf8e87089ada" compoundref="game__parameters_8cc" startline="153" endline="170">GameParametersToString</references>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1af4e1a06b98575bc24c84e635a12efec4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void open_spiel::NormalizePolicy</definition>
        <argsstring>(ActionsAndProbs *policy)</argsstring>
        <name>NormalizePolicy</name>
        <qualifiedname>open_spiel::NormalizePolicy</qualifiedname>
        <param>
          <type><ref refid="namespaceopen__spiel_1ac4ea6d9d7193ac74f6f333b954e3810f" kindref="member">ActionsAndProbs</ref> *</type>
          <declname>policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="264" column="6" bodyfile="open_spiel/spiel.cc" bodystart="264" bodyend="268" declfile="open_spiel/spiel.h" declline="1102" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a5eb64a0ea2eb4de455fbb51e4824c65b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; <ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref>, double &gt;</type>
        <definition>std::pair&lt; Action, double &gt; open_spiel::SampleAction</definition>
        <argsstring>(const ActionsAndProbs &amp;outcomes, absl::BitGenRef rng)</argsstring>
        <name>SampleAction</name>
        <qualifiedname>open_spiel::SampleAction</qualifiedname>
        <param>
          <type>const <ref refid="namespaceopen__spiel_1ac4ea6d9d7193ac74f6f333b954e3810f" kindref="member">ActionsAndProbs</ref> &amp;</type>
          <declname>outcomes</declname>
        </param>
        <param>
          <type>absl::BitGenRef</type>
          <declname>rng</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="270" column="11" bodyfile="open_spiel/spiel.cc" bodystart="270" bodyend="273" declfile="open_spiel/spiel.h" declline="1110" declcolumn="11"/>
        <references refid="namespaceopen__spiel_1a5eb64a0ea2eb4de455fbb51e4824c65b" compoundref="spiel_8cc" startline="270" endline="273">SampleAction</references>
        <referencedby refid="namespaceopen__spiel_1a5eb64a0ea2eb4de455fbb51e4824c65b" compoundref="spiel_8cc" startline="270" endline="273">SampleAction</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a4dccff40ce79f6186c72a0c0a4dc788e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; <ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref>, double &gt;</type>
        <definition>std::pair&lt; Action, double &gt; open_spiel::SampleAction</definition>
        <argsstring>(const ActionsAndProbs &amp;outcomes, double z)</argsstring>
        <name>SampleAction</name>
        <qualifiedname>open_spiel::SampleAction</qualifiedname>
        <param>
          <type>const <ref refid="namespaceopen__spiel_1ac4ea6d9d7193ac74f6f333b954e3810f" kindref="member">ActionsAndProbs</ref> &amp;</type>
          <declname>outcomes</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="274" column="11" bodyfile="open_spiel/spiel.cc" bodystart="274" bodyend="311" declfile="open_spiel/spiel.h" declline="1108" declcolumn="11"/>
        <references refid="spiel__utils_8h_1a1d6eea934e8beba47b04b9b35176e563" compoundref="spiel__utils_8h" startline="273" endline="275">SPIEL_CHECK_FLOAT_EQ</references>
        <references refid="spiel__utils_8h_1a5fa701f61bd5416434d72f3628e093b7" compoundref="spiel__utils_8h" startline="255">SPIEL_CHECK_GE</references>
        <references refid="spiel__utils_8h_1ad9b10d8a52955f75371525c0f9f21b69" compoundref="spiel__utils_8h" startline="258">SPIEL_CHECK_LT</references>
        <references refid="spiel__utils_8h_1acd960ab500145e2ff90ef3c382803b32" compoundref="spiel__utils_8h" startline="261" endline="264">SPIEL_CHECK_PROB</references>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a8c5224bc6b99621bd7c32c04dc9ddafa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string open_spiel::SerializeGameAndState</definition>
        <argsstring>(const Game &amp;game, const State &amp;state)</argsstring>
        <name>SerializeGameAndState</name>
        <qualifiedname>open_spiel::SerializeGameAndState</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref> &amp;</type>
          <declname>game</declname>
        </param>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="444" column="13" bodyfile="open_spiel/spiel.cc" bodystart="444" bodyend="464" declfile="open_spiel/spiel.h" declline="1134" declcolumn="13"/>
        <references refid="classopen__spiel_1_1_game_1a21a64ae854cebf2185bbc7aa1c8348f1" compoundref="spiel_8cc" startline="655" endline="662">open_spiel::Game::Serialize</references>
        <referencedby refid="namespaceopen__spiel_1aeb956daaab571492f9a18ed99000b016" compoundref="spiel_8cc" startline="842" endline="848">SpielFatalErrorWithStateInfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a523877157f33ec65d5c05fe6eb0cfb9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; std::shared_ptr&lt; const <ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref> &gt;, std::unique_ptr&lt; <ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref> &gt; &gt;</type>
        <definition>std::pair&lt; std::shared_ptr&lt; const Game &gt;, std::unique_ptr&lt; State &gt; &gt; open_spiel::DeserializeGameAndState</definition>
        <argsstring>(const std::string &amp;serialized_state)</argsstring>
        <name>DeserializeGameAndState</name>
        <qualifiedname>open_spiel::DeserializeGameAndState</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>serialized_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="467" column="1" bodyfile="open_spiel/spiel.cc" bodystart="467" bodyend="509" declfile="open_spiel/spiel.h" declline="1148" declcolumn="1"/>
        <references refid="namespaceopen__spiel_1a46be5ac78a1c87daeef36b4b8dd67c3c" compoundref="spiel_8cc" startline="205" endline="225">DeserializeGame</references>
        <references refid="spiel__utils_8h_1abcb08ef83297cd8a69ac67d47cfa5da2" compoundref="spiel__utils_8h" startline="259">SPIEL_CHECK_EQ</references>
        <references refid="spiel__utils_8h_1a32ffad2dd43a12e9d7443bc75f456bbb" compoundref="spiel__utils_8h" startline="260">SPIEL_CHECK_NE</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a1a2aa35ae5d7abab25a617359900db1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; open_spiel::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, GameType::Dynamics value)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>open_spiel::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="structopen__spiel_1_1_game_type_1a624349737f34cc67d0cf81fd7138c17b" kindref="member">GameType::Dynamics</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="511" column="1" bodyfile="open_spiel/spiel.cc" bodystart="511" bodyend="522" declfile="open_spiel/spiel.h" declline="191" declcolumn="1"/>
        <references refid="structopen__spiel_1_1_game_type_1a624349737f34cc67d0cf81fd7138c17ba6a40bb1d52ea6251e5ce3b9e7d3577bd">open_spiel::GameType::kMeanField</references>
        <references refid="structopen__spiel_1_1_game_type_1a624349737f34cc67d0cf81fd7138c17baeb609b99f542b955302693c0f445ba0c">open_spiel::GameType::kSequential</references>
        <references refid="structopen__spiel_1_1_game_type_1a624349737f34cc67d0cf81fd7138c17ba0ffc281e20028439b1995e0fa983ffcb">open_spiel::GameType::kSimultaneous</references>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a72910c80f8d652c30546d1157f267248" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; open_spiel::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;stream, GameType::Dynamics &amp;var)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>open_spiel::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="structopen__spiel_1_1_game_type_1a624349737f34cc67d0cf81fd7138c17b" kindref="member">GameType::Dynamics</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="524" column="14" bodyfile="open_spiel/spiel.cc" bodystart="524" bodyend="537"/>
        <references refid="structopen__spiel_1_1_game_type_1a624349737f34cc67d0cf81fd7138c17ba6a40bb1d52ea6251e5ce3b9e7d3577bd">open_spiel::GameType::kMeanField</references>
        <references refid="structopen__spiel_1_1_game_type_1a624349737f34cc67d0cf81fd7138c17baeb609b99f542b955302693c0f445ba0c">open_spiel::GameType::kSequential</references>
        <references refid="structopen__spiel_1_1_game_type_1a624349737f34cc67d0cf81fd7138c17ba0ffc281e20028439b1995e0fa983ffcb">open_spiel::GameType::kSimultaneous</references>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a244719d0f18bf3dd71a9a050c01b2f43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; open_spiel::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, GameType::ChanceMode value)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>open_spiel::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="structopen__spiel_1_1_game_type_1a1f22342e8a8c066323b49c0340a06d8e" kindref="member">GameType::ChanceMode</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="539" column="1" bodyfile="open_spiel/spiel.cc" bodystart="539" bodyend="550" declfile="open_spiel/spiel.h" declline="192" declcolumn="1"/>
        <references refid="structopen__spiel_1_1_game_type_1a1f22342e8a8c066323b49c0340a06d8eab1ebb5017b01aead05321c8dd2107ab0">open_spiel::GameType::kDeterministic</references>
        <references refid="structopen__spiel_1_1_game_type_1a1f22342e8a8c066323b49c0340a06d8ea10b2b50f4692475e7972d0dd6b73694b">open_spiel::GameType::kExplicitStochastic</references>
        <references refid="structopen__spiel_1_1_game_type_1a1f22342e8a8c066323b49c0340a06d8ea39686673a19498ee90ed998e494c5bc7">open_spiel::GameType::kSampledStochastic</references>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a6360dc41bdbd0a0c44f41055de815f7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; open_spiel::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, const State &amp;state)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>open_spiel::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="552" column="1" bodyfile="open_spiel/spiel.cc" bodystart="552" bodyend="554" declfile="open_spiel/spiel.h" declline="737" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1abf9e3bde94e120dee9ef024ea854a1ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; open_spiel::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;stream, GameType::ChanceMode &amp;var)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>open_spiel::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="structopen__spiel_1_1_game_type_1a1f22342e8a8c066323b49c0340a06d8e" kindref="member">GameType::ChanceMode</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="556" column="14" bodyfile="open_spiel/spiel.cc" bodystart="556" bodyend="569"/>
        <references refid="structopen__spiel_1_1_game_type_1a1f22342e8a8c066323b49c0340a06d8eab1ebb5017b01aead05321c8dd2107ab0">open_spiel::GameType::kDeterministic</references>
        <references refid="structopen__spiel_1_1_game_type_1a1f22342e8a8c066323b49c0340a06d8ea10b2b50f4692475e7972d0dd6b73694b">open_spiel::GameType::kExplicitStochastic</references>
        <references refid="structopen__spiel_1_1_game_type_1a1f22342e8a8c066323b49c0340a06d8ea39686673a19498ee90ed998e494c5bc7">open_spiel::GameType::kSampledStochastic</references>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a12e701d9ce3203e9de0acfc6d00266b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; open_spiel::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, GameType::Information value)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>open_spiel::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="structopen__spiel_1_1_game_type_1a0b4230b668f857b0815bd55f11b522ae" kindref="member">GameType::Information</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="571" column="1" bodyfile="open_spiel/spiel.cc" bodystart="571" bodyend="582" declfile="open_spiel/spiel.h" declline="193" declcolumn="1"/>
        <references refid="structopen__spiel_1_1_game_type_1a0b4230b668f857b0815bd55f11b522aeac9856f08bbc3ba2427a640b6bfdcb9f1">open_spiel::GameType::kImperfectInformation</references>
        <references refid="structopen__spiel_1_1_game_type_1a0b4230b668f857b0815bd55f11b522aea21e6a5b3710e0b13334d892e2b8a4be3">open_spiel::GameType::kOneShot</references>
        <references refid="structopen__spiel_1_1_game_type_1a0b4230b668f857b0815bd55f11b522aeacd60620d6401b630c39d1af12e6d701a">open_spiel::GameType::kPerfectInformation</references>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a0d925ee0330bff28ef0e80bd074619b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; open_spiel::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;stream, GameType::Information &amp;var)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>open_spiel::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="structopen__spiel_1_1_game_type_1a0b4230b668f857b0815bd55f11b522ae" kindref="member">GameType::Information</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="584" column="14" bodyfile="open_spiel/spiel.cc" bodystart="584" bodyend="597"/>
        <references refid="structopen__spiel_1_1_game_type_1a0b4230b668f857b0815bd55f11b522aeac9856f08bbc3ba2427a640b6bfdcb9f1">open_spiel::GameType::kImperfectInformation</references>
        <references refid="structopen__spiel_1_1_game_type_1a0b4230b668f857b0815bd55f11b522aea21e6a5b3710e0b13334d892e2b8a4be3">open_spiel::GameType::kOneShot</references>
        <references refid="structopen__spiel_1_1_game_type_1a0b4230b668f857b0815bd55f11b522aeacd60620d6401b630c39d1af12e6d701a">open_spiel::GameType::kPerfectInformation</references>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a37646bb5adaf51428409c128b77db425" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; open_spiel::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, GameType::Utility value)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>open_spiel::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="structopen__spiel_1_1_game_type_1a1ac5c4948c36c41709023b391bb58ef3" kindref="member">GameType::Utility</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="599" column="1" bodyfile="open_spiel/spiel.cc" bodystart="599" bodyend="612" declfile="open_spiel/spiel.h" declline="194" declcolumn="1"/>
        <references refid="structopen__spiel_1_1_game_type_1a1ac5c4948c36c41709023b391bb58ef3a6a09f3b5a2bec5deeb985ff0c06067b5">open_spiel::GameType::kConstantSum</references>
        <references refid="structopen__spiel_1_1_game_type_1a1ac5c4948c36c41709023b391bb58ef3a986cbc0a359db75471832f86381b190e">open_spiel::GameType::kGeneralSum</references>
        <references refid="structopen__spiel_1_1_game_type_1a1ac5c4948c36c41709023b391bb58ef3a2addd5cc0adb04673609d0c5475e022e">open_spiel::GameType::kIdentical</references>
        <references refid="structopen__spiel_1_1_game_type_1a1ac5c4948c36c41709023b391bb58ef3a1cf995c896f7178e2472254ada88096f">open_spiel::GameType::kZeroSum</references>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a62a174de78bb7c3ef9de89024f471af0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; open_spiel::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;stream, GameType::Utility &amp;var)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>open_spiel::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="structopen__spiel_1_1_game_type_1a1ac5c4948c36c41709023b391bb58ef3" kindref="member">GameType::Utility</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="614" column="14" bodyfile="open_spiel/spiel.cc" bodystart="614" bodyend="629"/>
        <references refid="structopen__spiel_1_1_game_type_1a1ac5c4948c36c41709023b391bb58ef3a6a09f3b5a2bec5deeb985ff0c06067b5">open_spiel::GameType::kConstantSum</references>
        <references refid="structopen__spiel_1_1_game_type_1a1ac5c4948c36c41709023b391bb58ef3a986cbc0a359db75471832f86381b190e">open_spiel::GameType::kGeneralSum</references>
        <references refid="structopen__spiel_1_1_game_type_1a1ac5c4948c36c41709023b391bb58ef3a2addd5cc0adb04673609d0c5475e022e">open_spiel::GameType::kIdentical</references>
        <references refid="structopen__spiel_1_1_game_type_1a1ac5c4948c36c41709023b391bb58ef3a1cf995c896f7178e2472254ada88096f">open_spiel::GameType::kZeroSum</references>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1af5c94daedba1dff4ad35c98e409bce79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; open_spiel::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, GameType::RewardModel value)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>open_spiel::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="structopen__spiel_1_1_game_type_1a5a5f739de73ade6cfe6961fd4a2f41a5" kindref="member">GameType::RewardModel</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="631" column="1" bodyfile="open_spiel/spiel.cc" bodystart="631" bodyend="640" declfile="open_spiel/spiel.h" declline="195" declcolumn="1"/>
        <references refid="structopen__spiel_1_1_game_type_1a5a5f739de73ade6cfe6961fd4a2f41a5a5feb2f9f9be894b60ede74a61a0f27f5">open_spiel::GameType::kRewards</references>
        <references refid="structopen__spiel_1_1_game_type_1a5a5f739de73ade6cfe6961fd4a2f41a5a217dd2f6ef26065693bb5043fce241ea">open_spiel::GameType::kTerminal</references>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1ade7f49ebc7e29de2107b5f48fcad505d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; open_spiel::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;stream, GameType::RewardModel &amp;var)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>open_spiel::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="structopen__spiel_1_1_game_type_1a5a5f739de73ade6cfe6961fd4a2f41a5" kindref="member">GameType::RewardModel</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="642" column="14" bodyfile="open_spiel/spiel.cc" bodystart="642" bodyend="653"/>
        <references refid="structopen__spiel_1_1_game_type_1a5a5f739de73ade6cfe6961fd4a2f41a5a5feb2f9f9be894b60ede74a61a0f27f5">open_spiel::GameType::kRewards</references>
        <references refid="structopen__spiel_1_1_game_type_1a5a5f739de73ade6cfe6961fd4a2f41a5a217dd2f6ef26065693bb5043fce241ea">open_spiel::GameType::kTerminal</references>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1ad0ffb6361129cb7a813fc9b9afbf8bac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string open_spiel::GameTypeToString</definition>
        <argsstring>(const GameType &amp;game_type)</argsstring>
        <name>GameTypeToString</name>
        <qualifiedname>open_spiel::GameTypeToString</qualifiedname>
        <param>
          <type>const <ref refid="structopen__spiel_1_1_game_type" kindref="compound">GameType</ref> &amp;</type>
          <declname>game_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="670" column="13" bodyfile="open_spiel/spiel.cc" bodystart="670" bodyend="721" declfile="open_spiel/spiel.h" declline="1155" declcolumn="13"/>
        <references refid="structopen__spiel_1_1_game_type_1a7a1a6c9e079e58933da6b62c4d04279e" compoundref="spiel_8h" startline="84">open_spiel::GameType::chance_mode</references>
        <references refid="structopen__spiel_1_1_game_type_1ac1176bf5ed045dc24fb4b113af2750b8" compoundref="spiel_8h" startline="65">open_spiel::GameType::dynamics</references>
        <references refid="structopen__spiel_1_1_game_type_1a99e4ce5d58635d108e99367a5d12f589" compoundref="spiel_8h" startline="92">open_spiel::GameType::information</references>
        <references refid="structopen__spiel_1_1_game_type_1a89c154ac202bd4a659b9e4ea3d28ebbb" compoundref="spiel_8h" startline="55">open_spiel::GameType::long_name</references>
        <references refid="structopen__spiel_1_1_game_type_1acb7c9c12c353ccb42a4273e026bd61cf" compoundref="spiel_8h" startline="114">open_spiel::GameType::max_num_players</references>
        <references refid="structopen__spiel_1_1_game_type_1a8156a1d7578c71dd5425d6b22c171611" compoundref="spiel_8h" startline="115">open_spiel::GameType::min_num_players</references>
        <references refid="structopen__spiel_1_1_game_type_1a2d265bb0c5d0be4d64222ac322bf3510" compoundref="spiel_8h" startline="130">open_spiel::GameType::parameter_specification</references>
        <references refid="structopen__spiel_1_1_game_type_1ad0f911229d1f5b893dc2225069703c36" compoundref="spiel_8h" startline="143">open_spiel::GameType::provides_factored_observation_string</references>
        <references refid="structopen__spiel_1_1_game_type_1a909f5d7264115920cd4e63527fa80bc3" compoundref="spiel_8h" startline="120">open_spiel::GameType::provides_information_state_string</references>
        <references refid="structopen__spiel_1_1_game_type_1a0e75001913b46cb55660c87ff67ec72b" compoundref="spiel_8h" startline="121">open_spiel::GameType::provides_information_state_tensor</references>
        <references refid="structopen__spiel_1_1_game_type_1aefe22999e3f3866dfac4512fefa09259" compoundref="spiel_8h" startline="127">open_spiel::GameType::provides_observation_string</references>
        <references refid="structopen__spiel_1_1_game_type_1aa7926b4919729c6aba36bcb5cd55895c" compoundref="spiel_8h" startline="128">open_spiel::GameType::provides_observation_tensor</references>
        <references refid="structopen__spiel_1_1_game_type_1aa72d7337710404c4a4c85cad77ad9992" compoundref="spiel_8h" startline="110">open_spiel::GameType::reward_model</references>
        <references refid="namespaceopen__spiel_1af4fbe25f93445525489169ed595bb330" compoundref="game__parameters_8cc" startline="120" endline="134">SerializeGameParameters</references>
        <references refid="structopen__spiel_1_1_game_type_1a7dc97c2b88971ea7c5180d3c2fe29cf1" compoundref="spiel_8h" startline="52">open_spiel::GameType::short_name</references>
        <references refid="spiel__utils_8h_1ac998e613afb013e8bd31b3da80f747ae" compoundref="spiel__utils_8h" startline="282" endline="285">SPIEL_CHECK_TRUE</references>
        <references refid="namespaceopen__spiel_1_1internal_1a8bcbdcb0a975ffcdf757709e755ab92e" compoundref="spiel__utils_8h" startline="124" endline="128">open_spiel::internal::SpielStrCat</references>
        <references refid="structopen__spiel_1_1_game_type_1a97241a4820868fc48068e6585ab142a6" compoundref="spiel_8h" startline="101">open_spiel::GameType::utility</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1abdd13dce1b32767e9b820f7f63638215" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structopen__spiel_1_1_game_type" kindref="compound">GameType</ref></type>
        <definition>GameType open_spiel::GameTypeFromString</definition>
        <argsstring>(const std::string &amp;game_type_str)</argsstring>
        <name>GameTypeFromString</name>
        <qualifiedname>open_spiel::GameTypeFromString</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>game_type_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="723" column="10" bodyfile="open_spiel/spiel.cc" bodystart="723" bodyend="768" declfile="open_spiel/spiel.h" declline="1156" declcolumn="10"/>
        <references refid="structopen__spiel_1_1_game_type_1a7a1a6c9e079e58933da6b62c4d04279e" compoundref="spiel_8h" startline="84">open_spiel::GameType::chance_mode</references>
        <references refid="namespaceopen__spiel_1a5409de787fa4c65008c7668559d3dd0c" compoundref="game__parameters_8cc" startline="136" endline="151">DeserializeGameParameters</references>
        <references refid="structopen__spiel_1_1_game_type_1ac1176bf5ed045dc24fb4b113af2750b8" compoundref="spiel_8h" startline="65">open_spiel::GameType::dynamics</references>
        <references refid="structopen__spiel_1_1_game_type_1a99e4ce5d58635d108e99367a5d12f589" compoundref="spiel_8h" startline="92">open_spiel::GameType::information</references>
        <references refid="structopen__spiel_1_1_game_type_1a89c154ac202bd4a659b9e4ea3d28ebbb" compoundref="spiel_8h" startline="55">open_spiel::GameType::long_name</references>
        <references refid="structopen__spiel_1_1_game_type_1acb7c9c12c353ccb42a4273e026bd61cf" compoundref="spiel_8h" startline="114">open_spiel::GameType::max_num_players</references>
        <references refid="structopen__spiel_1_1_game_type_1a8156a1d7578c71dd5425d6b22c171611" compoundref="spiel_8h" startline="115">open_spiel::GameType::min_num_players</references>
        <references refid="structopen__spiel_1_1_game_type_1a2d265bb0c5d0be4d64222ac322bf3510" compoundref="spiel_8h" startline="130">open_spiel::GameType::parameter_specification</references>
        <references refid="structopen__spiel_1_1_game_type_1ad0f911229d1f5b893dc2225069703c36" compoundref="spiel_8h" startline="143">open_spiel::GameType::provides_factored_observation_string</references>
        <references refid="structopen__spiel_1_1_game_type_1a909f5d7264115920cd4e63527fa80bc3" compoundref="spiel_8h" startline="120">open_spiel::GameType::provides_information_state_string</references>
        <references refid="structopen__spiel_1_1_game_type_1a0e75001913b46cb55660c87ff67ec72b" compoundref="spiel_8h" startline="121">open_spiel::GameType::provides_information_state_tensor</references>
        <references refid="structopen__spiel_1_1_game_type_1aefe22999e3f3866dfac4512fefa09259" compoundref="spiel_8h" startline="127">open_spiel::GameType::provides_observation_string</references>
        <references refid="structopen__spiel_1_1_game_type_1aa7926b4919729c6aba36bcb5cd55895c" compoundref="spiel_8h" startline="128">open_spiel::GameType::provides_observation_tensor</references>
        <references refid="structopen__spiel_1_1_game_type_1aa72d7337710404c4a4c85cad77ad9992" compoundref="spiel_8h" startline="110">open_spiel::GameType::reward_model</references>
        <references refid="structopen__spiel_1_1_game_type_1a7dc97c2b88971ea7c5180d3c2fe29cf1" compoundref="spiel_8h" startline="52">open_spiel::GameType::short_name</references>
        <references refid="spiel__utils_8h_1abcb08ef83297cd8a69ac67d47cfa5da2" compoundref="spiel__utils_8h" startline="259">SPIEL_CHECK_EQ</references>
        <references refid="spiel__utils_8h_1ac998e613afb013e8bd31b3da80f747ae" compoundref="spiel__utils_8h" startline="282" endline="285">SPIEL_CHECK_TRUE</references>
        <references refid="structopen__spiel_1_1_game_type_1a97241a4820868fc48068e6585ab142a6" compoundref="spiel_8h" startline="101">open_spiel::GameType::utility</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a3c960b5e0e3ff1fa28344fb4a60bd0d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; open_spiel::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const State::PlayerAction &amp;action)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>open_spiel::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopen__spiel_1_1_state_1_1_player_action" kindref="compound">State::PlayerAction</ref> &amp;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="822" column="1" bodyfile="open_spiel/spiel.cc" bodystart="822" bodyend="826" declfile="open_spiel/spiel.h" declline="1158" declcolumn="1"/>
        <references refid="structopen__spiel_1_1_state_1_1_player_action_1a0a1fcb179ed63120c1aa4a694bc97a1e" compoundref="spiel_8h" startline="402">open_spiel::State::PlayerAction::action</references>
        <references refid="structopen__spiel_1_1_state_1_1_player_action_1a38760e9677be3b392aa0d0cd6eb8bc30" compoundref="spiel_8h" startline="401">open_spiel::State::PlayerAction::player</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a273ef5cc5b21091a3c4f4c09b9af7713" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; open_spiel::ActionsToStrings</definition>
        <argsstring>(const State &amp;state, const std::vector&lt; Action &gt; &amp;actions)</argsstring>
        <name>ActionsToStrings</name>
        <qualifiedname>open_spiel::ActionsToStrings</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref> &gt; &amp;</type>
          <declname>actions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="828" column="13" bodyfile="open_spiel/spiel.cc" bodystart="828" bodyend="834" declfile="open_spiel/spiel.h" declline="1162" declcolumn="13"/>
        <referencedby refid="namespaceopen__spiel_1a4f436837944c34a3007b2722e77a2c09" compoundref="spiel_8cc" startline="836" endline="840">ActionsToString</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a4f436837944c34a3007b2722e77a2c09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string open_spiel::ActionsToString</definition>
        <argsstring>(const State &amp;state, const std::vector&lt; Action &gt; &amp;actions)</argsstring>
        <name>ActionsToString</name>
        <qualifiedname>open_spiel::ActionsToString</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref> &gt; &amp;</type>
          <declname>actions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="836" column="13" bodyfile="open_spiel/spiel.cc" bodystart="836" bodyend="840" declfile="open_spiel/spiel.h" declline="1167" declcolumn="13"/>
        <references refid="namespaceopen__spiel_1a273ef5cc5b21091a3c4f4c09b9af7713" compoundref="spiel_8cc" startline="828" endline="834">ActionsToStrings</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1aeb956daaab571492f9a18ed99000b016" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void open_spiel::SpielFatalErrorWithStateInfo</definition>
        <argsstring>(const std::string &amp;error_msg, const Game &amp;game, const State &amp;state)</argsstring>
        <name>SpielFatalErrorWithStateInfo</name>
        <qualifiedname>open_spiel::SpielFatalErrorWithStateInfo</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>error_msg</declname>
        </param>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref> &amp;</type>
          <declname>game</declname>
        </param>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="842" column="6" bodyfile="open_spiel/spiel.cc" bodystart="842" bodyend="848" declfile="open_spiel/spiel.h" declline="1172" declcolumn="6"/>
        <references refid="namespaceopen__spiel_1a8c5224bc6b99621bd7c32c04dc9ddafa" compoundref="spiel_8cc" startline="444" endline="464">SerializeGameAndState</references>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a8e5ff0d85e37788198b7cc387a7e5780" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; std::shared_ptr&lt; const <ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref> &gt;, std::unique_ptr&lt; <ref refid="classopen__spiel_1_1_state" kindref="compound">State</ref> &gt; &gt;</type>
        <definition>std::pair&lt; std::shared_ptr&lt; const Game &gt;, std::unique_ptr&lt; State &gt; &gt; open_spiel::BuildStateFromHistoryString</definition>
        <argsstring>(const std::string &amp;game_string, const std::string &amp;history, int max_steps)</argsstring>
        <name>BuildStateFromHistoryString</name>
        <qualifiedname>open_spiel::BuildStateFromHistoryString</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>game_string</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>history</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel.cc" line="851" column="2" bodyfile="open_spiel/spiel.cc" bodystart="851" bodyend="891" declfile="open_spiel/spiel.h" declline="1184" declcolumn="2"/>
        <references refid="namespaceopen__spiel_1afd4ac299a038385def0ea56521067137" compoundref="spiel_8cc" startline="227" endline="229">LoadGame</references>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a2a36dd228935af0a2a2deaf25f7e0d88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classopen__spiel_1_1_bot" kindref="compound">Bot</ref> &gt;</type>
        <definition>std::unique_ptr&lt; Bot &gt; open_spiel::MakeUniformRandomBot</definition>
        <argsstring>(Player player_id, int seed)</argsstring>
        <name>MakeUniformRandomBot</name>
        <qualifiedname>open_spiel::MakeUniformRandomBot</qualifiedname>
        <param>
          <type><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref></type>
          <declname>player_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_bots.cc" line="201" column="17" bodyfile="open_spiel/spiel_bots.cc" bodystart="201" bodyend="203" declfile="open_spiel/spiel_bots.h" declline="194" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a250e5d3ee400ca1527e8bdbaa0d69631" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classopen__spiel_1_1_bot" kindref="compound">Bot</ref> &gt;</type>
        <definition>std::unique_ptr&lt; Bot &gt; open_spiel::MakePolicyBot</definition>
        <argsstring>(int seed, std::shared_ptr&lt; Policy &gt; policy)</argsstring>
        <name>MakePolicyBot</name>
        <qualifiedname>open_spiel::MakePolicyBot</qualifiedname>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classopen__spiel_1_1_policy" kindref="compound">Policy</ref> &gt;</type>
          <declname>policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_bots.cc" line="231" column="17" bodyfile="open_spiel/spiel_bots.cc" bodystart="231" bodyend="233" declfile="open_spiel/spiel_bots.h" declline="202" declcolumn="17"/>
        <referencedby refid="namespaceopen__spiel_1a45ab582eb50e38c3548fe05476b86385" compoundref="spiel__bots_8cc" startline="234" endline="237">MakePolicyBot</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a45ab582eb50e38c3548fe05476b86385" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classopen__spiel_1_1_bot" kindref="compound">Bot</ref> &gt;</type>
        <definition>std::unique_ptr&lt; Bot &gt; open_spiel::MakePolicyBot</definition>
        <argsstring>(const Game &amp;game, Player player_id, int seed, std::shared_ptr&lt; Policy &gt; policy)</argsstring>
        <name>MakePolicyBot</name>
        <qualifiedname>open_spiel::MakePolicyBot</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref> &amp;</type>
          <declname>game</declname>
        </param>
        <param>
          <type><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref></type>
          <declname>player_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classopen__spiel_1_1_policy" kindref="compound">Policy</ref> &gt;</type>
          <declname>policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_bots.cc" line="234" column="17" bodyfile="open_spiel/spiel_bots.cc" bodystart="234" bodyend="237" declfile="open_spiel/spiel_bots.h" declline="203" declcolumn="17"/>
        <references refid="namespaceopen__spiel_1a250e5d3ee400ca1527e8bdbaa0d69631" compoundref="spiel__bots_8cc" startline="231" endline="233">MakePolicyBot</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a12d12514131fbde3653c9d50182e6a1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classopen__spiel_1_1_bot" kindref="compound">Bot</ref> &gt;</type>
        <definition>std::unique_ptr&lt; Bot &gt; open_spiel::MakeFixedActionPreferenceBot</definition>
        <argsstring>(Player player_id, const std::vector&lt; Action &gt; &amp;actions)</argsstring>
        <name>MakeFixedActionPreferenceBot</name>
        <qualifiedname>open_spiel::MakeFixedActionPreferenceBot</qualifiedname>
        <param>
          <type><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref></type>
          <declname>player_id</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref> &gt; &amp;</type>
          <declname>actions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_bots.cc" line="240" column="17" bodyfile="open_spiel/spiel_bots.cc" bodystart="240" bodyend="243" declfile="open_spiel/spiel_bots.h" declline="208" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a0133263b17139cfadf624a3b290fdb25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classopen__spiel_1_1_bot" kindref="compound">Bot</ref> &gt;</type>
        <definition>std::unique_ptr&lt; Bot &gt; open_spiel::MakeStatefulRandomBot</definition>
        <argsstring>(const Game &amp;game, Player player_id, int seed)</argsstring>
        <name>MakeStatefulRandomBot</name>
        <qualifiedname>open_spiel::MakeStatefulRandomBot</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref> &amp;</type>
          <declname>game</declname>
        </param>
        <param>
          <type><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref></type>
          <declname>player_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_bots.cc" line="277" column="17" bodyfile="open_spiel/spiel_bots.cc" bodystart="277" bodyend="280" declfile="open_spiel/spiel_bots.h" declline="198" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a28d19e65fe9bd9cd5849dbc620d12d5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; open_spiel::RegisteredBots</definition>
        <argsstring>()</argsstring>
        <name>RegisteredBots</name>
        <qualifiedname>open_spiel::RegisteredBots</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_bots.cc" line="339" column="13" bodyfile="open_spiel/spiel_bots.cc" bodystart="339" bodyend="341" declfile="open_spiel/spiel_bots.h" declline="247" declcolumn="13"/>
        <references refid="classopen__spiel_1_1_bot_registerer_1acda325423331a4326b118934c89143ef" compoundref="spiel__bots_8cc" startline="333" endline="337">open_spiel::BotRegisterer::RegisteredBots</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a81c2cfd16725f2a50eff8e6db4383e0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool open_spiel::IsBotRegistered</definition>
        <argsstring>(const std::string &amp;bot_name)</argsstring>
        <name>IsBotRegistered</name>
        <qualifiedname>open_spiel::IsBotRegistered</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>bot_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_bots.cc" line="347" column="6" bodyfile="open_spiel/spiel_bots.cc" bodystart="347" bodyend="349" declfile="open_spiel/spiel_bots.h" declline="244" declcolumn="6"/>
        <references refid="classopen__spiel_1_1_bot_registerer_1a7df6413dfd4fc49e44d163f9c464561a" compoundref="spiel__bots_8cc" startline="343" endline="345">open_spiel::BotRegisterer::IsBotRegistered</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a9f69c0d1c3937873613115448ef856e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classopen__spiel_1_1_bot" kindref="compound">Bot</ref> &gt;</type>
        <definition>std::unique_ptr&lt; Bot &gt; open_spiel::LoadBot</definition>
        <argsstring>(const std::string &amp;bot_name, const std::shared_ptr&lt; const Game &gt; &amp;game, Player player_id)</argsstring>
        <name>LoadBot</name>
        <qualifiedname>open_spiel::LoadBot</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>bot_name</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; const <ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref> &gt; &amp;</type>
          <declname>game</declname>
        </param>
        <param>
          <type><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref></type>
          <declname>player_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_bots.cc" line="351" column="17" bodyfile="open_spiel/spiel_bots.cc" bodystart="351" bodyend="361" declfile="open_spiel/spiel_bots.h" declline="261" declcolumn="17"/>
        <references refid="namespaceopen__spiel_1ab52b8891e58c4d116690500440ca8f4c" compoundref="game__parameters_8cc" startline="194" endline="225">GameParametersFromString</references>
        <references refid="namespaceopen__spiel_1a9f69c0d1c3937873613115448ef856e7" compoundref="spiel__bots_8cc" startline="351" endline="361">LoadBot</references>
        <referencedby refid="namespaceopen__spiel_1a9f69c0d1c3937873613115448ef856e7" compoundref="spiel__bots_8cc" startline="351" endline="361">LoadBot</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1adf7d52b8cc21ea6b1bc3963837073829" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classopen__spiel_1_1_bot" kindref="compound">Bot</ref> &gt;</type>
        <definition>std::unique_ptr&lt; Bot &gt; open_spiel::LoadBot</definition>
        <argsstring>(const std::string &amp;bot_name, const std::shared_ptr&lt; const Game &gt; &amp;game, Player player_id, const GameParameters &amp;params)</argsstring>
        <name>LoadBot</name>
        <qualifiedname>open_spiel::LoadBot</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>bot_name</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; const <ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref> &gt; &amp;</type>
          <declname>game</declname>
        </param>
        <param>
          <type><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref></type>
          <declname>player_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceopen__spiel_1ad7c4d931669b5e357cb5c7f84a6de094" kindref="member">GameParameters</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_bots.cc" line="363" column="17" bodyfile="open_spiel/spiel_bots.cc" bodystart="363" bodyend="372" declfile="open_spiel/spiel_bots.h" declline="266" declcolumn="17"/>
        <references refid="classopen__spiel_1_1_bot_registerer_1a541147e08ab383cd9fb40e58e12789eb" compoundref="spiel__bots_8cc" startline="287" endline="300">open_spiel::BotRegisterer::CreateByName</references>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1ad1a5e5758d75373ec551327b963ca887" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; open_spiel::BotsThatCanPlayGame</definition>
        <argsstring>(const Game &amp;game, Player player_id)</argsstring>
        <name>BotsThatCanPlayGame</name>
        <qualifiedname>open_spiel::BotsThatCanPlayGame</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref> &amp;</type>
          <declname>game</declname>
        </param>
        <param>
          <type><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref></type>
          <declname>player_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_bots.cc" line="374" column="13" bodyfile="open_spiel/spiel_bots.cc" bodystart="374" bodyend="377" declfile="open_spiel/spiel_bots.h" declline="251" declcolumn="13"/>
        <references refid="classopen__spiel_1_1_bot_registerer_1a14f4d786c80eb75555552cf61a9b1074" compoundref="spiel__bots_8cc" startline="302" endline="311">open_spiel::BotRegisterer::BotsThatCanPlayGame</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1ad83b581d5a6bd67815e9f878cdd8dafc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; open_spiel::BotsThatCanPlayGame</definition>
        <argsstring>(const Game &amp;game)</argsstring>
        <name>BotsThatCanPlayGame</name>
        <qualifiedname>open_spiel::BotsThatCanPlayGame</qualifiedname>
        <param>
          <type>const <ref refid="classopen__spiel_1_1_game" kindref="compound">Game</ref> &amp;</type>
          <declname>game</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_bots.cc" line="379" column="13" bodyfile="open_spiel/spiel_bots.cc" bodystart="379" bodyend="381" declfile="open_spiel/spiel_bots.h" declline="256" declcolumn="13"/>
        <references refid="classopen__spiel_1_1_bot_registerer_1a14f4d786c80eb75555552cf61a9b1074" compoundref="spiel__bots_8cc" startline="302" endline="311">open_spiel::BotRegisterer::BotsThatCanPlayGame</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a3ec07f0616c12613b3ea6630a891ff79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int open_spiel::NextPlayerRoundRobin</definition>
        <argsstring>(Player player, int nplayers)</argsstring>
        <name>NextPlayerRoundRobin</name>
        <qualifiedname>open_spiel::NextPlayerRoundRobin</qualifiedname>
        <param>
          <type><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref></type>
          <declname>player</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nplayers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.cc" line="32" column="5" bodyfile="open_spiel/spiel_utils.cc" bodystart="32" bodyend="38" declfile="open_spiel/spiel_utils.h" declline="154" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1adbd05d10e217d2315441d4a34ca9a30b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int open_spiel::PreviousPlayerRoundRobin</definition>
        <argsstring>(Player player, int nplayers)</argsstring>
        <name>PreviousPlayerRoundRobin</name>
        <qualifiedname>open_spiel::PreviousPlayerRoundRobin</qualifiedname>
        <param>
          <type><ref refid="namespaceopen__spiel_1a8e9bf6a040c687a9f0c8393728dc0121" kindref="member">Player</ref></type>
          <declname>player</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nplayers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.cc" line="41" column="5" bodyfile="open_spiel/spiel_utils.cc" bodystart="41" bodyend="47" declfile="open_spiel/spiel_utils.h" declline="157" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1ae4b6143776ec2ce03945edf965aceb91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref></type>
        <definition>Action open_spiel::RankActionMixedBase</definition>
        <argsstring>(const std::vector&lt; int &gt; &amp;bases, const std::vector&lt; int &gt; &amp;digits)</argsstring>
        <name>RankActionMixedBase</name>
        <qualifiedname>open_spiel::RankActionMixedBase</qualifiedname>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>bases</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>digits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.cc" line="50" column="8" bodyfile="open_spiel/spiel_utils.cc" bodystart="50" bodyend="67" declfile="open_spiel/spiel_utils.h" declline="147" declcolumn="8"/>
        <references refid="spiel__utils_8h_1abcb08ef83297cd8a69ac67d47cfa5da2" compoundref="spiel__utils_8h" startline="259">SPIEL_CHECK_EQ</references>
        <references refid="spiel__utils_8h_1a5fa701f61bd5416434d72f3628e093b7" compoundref="spiel__utils_8h" startline="255">SPIEL_CHECK_GE</references>
        <references refid="spiel__utils_8h_1a948872aa56d9cd14a37c436d9b4d8760" compoundref="spiel__utils_8h" startline="256">SPIEL_CHECK_GT</references>
        <references refid="spiel__utils_8h_1ad9b10d8a52955f75371525c0f9f21b69" compoundref="spiel__utils_8h" startline="258">SPIEL_CHECK_LT</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a9039e595b94e0462902c6632c4458746" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; open_spiel::UnrankActionMixedBase</definition>
        <argsstring>(Action action, const std::vector&lt; int &gt; &amp;bases)</argsstring>
        <name>UnrankActionMixedBase</name>
        <qualifiedname>open_spiel::UnrankActionMixedBase</qualifiedname>
        <param>
          <type><ref refid="namespaceopen__spiel_1a8aa5fc5cff0ef466697b1df5cbfcbd3a" kindref="member">Action</ref></type>
          <declname>action</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>bases</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.cc" line="69" column="13" bodyfile="open_spiel/spiel_utils.cc" bodystart="69" bodyend="79" declfile="open_spiel/spiel_utils.h" declline="150" declcolumn="13"/>
        <references refid="spiel__utils_8h_1abcb08ef83297cd8a69ac67d47cfa5da2" compoundref="spiel__utils_8h" startline="259">SPIEL_CHECK_EQ</references>
        <references refid="spiel__utils_8h_1a948872aa56d9cd14a37c436d9b4d8760" compoundref="spiel__utils_8h" startline="256">SPIEL_CHECK_GT</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1afdcbbde2d768dd78863a5096bf02f9fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>absl::optional&lt; std::string &gt;</type>
        <definition>absl::optional&lt; std::string &gt; open_spiel::FindFile</definition>
        <argsstring>(const std::string &amp;filename, int levels)</argsstring>
        <name>FindFile</name>
        <qualifiedname>open_spiel::FindFile</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>levels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.cc" line="81" column="16" bodyfile="open_spiel/spiel_utils.cc" bodystart="81" bodyend="98" declfile="open_spiel/spiel_utils.h" declline="163" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1afd524fdd6cfba8c1bc6055624f5bfe7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string open_spiel::FormatDouble</definition>
        <argsstring>(double value)</argsstring>
        <name>FormatDouble</name>
        <qualifiedname>open_spiel::FormatDouble</qualifiedname>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.cc" line="100" column="13" bodyfile="open_spiel/spiel_utils.cc" bodystart="100" bodyend="117" declfile="open_spiel/spiel_utils.h" declline="171" declcolumn="13"/>
        <referencedby refid="classopen__spiel_1_1_game_parameter_1af70e5458038ffcdc8a2680404daf9493" compoundref="game__parameters_8cc" startline="57" endline="75">open_spiel::GameParameter::ToString</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a040d5baa2e99ba84b7671f0f31c46604" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void open_spiel::SpielDefaultErrorHandler</definition>
        <argsstring>(const std::string &amp;error_msg)</argsstring>
        <name>SpielDefaultErrorHandler</name>
        <qualifiedname>open_spiel::SpielDefaultErrorHandler</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>error_msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.cc" line="119" column="6" bodyfile="open_spiel/spiel_utils.cc" bodystart="119" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a89d903f6b3280f76e4e08ea13f07774d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void open_spiel::SetErrorHandler</definition>
        <argsstring>(ErrorHandler new_error_handler)</argsstring>
        <name>SetErrorHandler</name>
        <qualifiedname>open_spiel::SetErrorHandler</qualifiedname>
        <param>
          <type><ref refid="namespaceopen__spiel_1a6ae50259664bd4ee81332e34b49d2ebd" kindref="member">ErrorHandler</ref></type>
          <declname>new_error_handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.cc" line="128" column="6" bodyfile="open_spiel/spiel_utils.cc" bodystart="128" bodyend="130" declfile="open_spiel/spiel_utils.h" declline="356" declcolumn="6"/>
        <references refid="namespaceopen__spiel_1a86dca063f97b8704cfd331658af92261" compoundref="spiel__utils_8cc" startline="126">error_handler</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void open_spiel::SpielFatalError</definition>
        <argsstring>(const std::string &amp;error_msg)</argsstring>
        <name>SpielFatalError</name>
        <qualifiedname>open_spiel::SpielFatalError</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>error_msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.cc" line="132" column="6" bodyfile="open_spiel/spiel_utils.cc" bodystart="132" bodyend="137" declfile="open_spiel/spiel_utils.h" declline="352" declcolumn="7"/>
        <references refid="namespaceopen__spiel_1a86dca063f97b8704cfd331658af92261" compoundref="spiel__utils_8cc" startline="126">error_handler</references>
        <referencedby refid="classopen__spiel_1_1_state_1af8cc963b423ec2a56e6b5292a8d9f6df" compoundref="spiel_8h" startline="682" endline="687">open_spiel::State::ActionsConsistentWithInformationFrom</referencedby>
        <referencedby refid="classopen__spiel_1_1matrix__game_1_1_matrix_game_1a42356a06a9bc76e7c88767bdae84afdd" compoundref="matrix__game_8h" startline="90" endline="107">open_spiel::matrix_game::MatrixGame::ActionToString</referencedby>
        <referencedby refid="classopen__spiel_1_1_state_1a479150baad280f0f236d2cced41ddc13" compoundref="spiel_8cc" startline="373" endline="385">open_spiel::State::ApplyActionsWithLegalityChecks</referencedby>
        <referencedby refid="classopen__spiel_1_1_state_1a6fcd275fa47ab9d26a473321c60e0a95" compoundref="spiel_8cc" startline="350" endline="360">open_spiel::State::ApplyActionWithLegalityCheck</referencedby>
        <referencedby refid="namespaceopen__spiel_1a8e5ff0d85e37788198b7cc387a7e5780" compoundref="spiel_8cc" startline="851" endline="891">BuildStateFromHistoryString</referencedby>
        <referencedby refid="classopen__spiel_1_1_state_1aa177f864d35f39d38aaa7551e21b9b3b" compoundref="spiel_8h" startline="616" endline="618">open_spiel::State::ChanceOutcomes</referencedby>
        <referencedby refid="classopen__spiel_1_1_bot_1a98f07d0444b04513d593fed7b6edc062" compoundref="spiel__bots_8h" startline="174" endline="176">open_spiel::Bot::Clone</referencedby>
        <referencedby refid="classopen__spiel_1_1_bot_registerer_1a541147e08ab383cd9fb40e58e12789eb" compoundref="spiel__bots_8cc" startline="287" endline="300">open_spiel::BotRegisterer::CreateByName</referencedby>
        <referencedby refid="classopen__spiel_1_1_game_registerer_1a6e6f8091b1e3c521af50e71b0dce5717" compoundref="spiel_8cc" startline="143" endline="162">open_spiel::GameRegisterer::CreateByName</referencedby>
        <referencedby refid="classopen__spiel_1_1_observer_registerer_1a758f476da1265e23e37d42253be73b07" compoundref="observer_8cc" startline="359" endline="371">open_spiel::ObserverRegisterer::CreateByName</referencedby>
        <referencedby refid="classopen__spiel_1_1_observation_1a4c80d6da14f27eac718ee4b0f237c4d5" compoundref="observer_8cc" startline="311" endline="322">open_spiel::Observation::Decompress</referencedby>
        <referencedby refid="namespaceopen__spiel_1ad272c6703ae8bac4d974608f1c58a9e9" compoundref="game__parameters_8cc" startline="93" endline="118">DeserializeGameParameter</referencedby>
        <referencedby refid="namespaceopen__spiel_1a4aa4716074f62c6165c43e0b97119bfe" compoundref="policy_8cc" startline="140" endline="156">DeserializePolicy</referencedby>
        <referencedby refid="classopen__spiel_1_1_state_1a51e334578eba7ca7ce10518964021179" compoundref="spiel_8h" startline="700" endline="702">open_spiel::State::DistributionSupport</referencedby>
        <referencedby refid="classopen__spiel_1_1_state_1af2b72b90cb27986377e1867bb713f07d" compoundref="spiel_8h" startline="718" endline="720">open_spiel::State::DoApplyAction</referencedby>
        <referencedby refid="classopen__spiel_1_1_state_1aec9dc1eda262140e878bd4dcfedca13b" compoundref="spiel_8h" startline="722" endline="724">open_spiel::State::DoApplyActions</referencedby>
        <referencedby refid="namespaceopen__spiel_1a13e94371d9454bf08643fdb22064a4ae" compoundref="spiel__utils_8h" startline="412" endline="424">down_cast</referencedby>
        <referencedby refid="namespaceopen__spiel_1a2abc2a9bf725d541a7da3b6f3c4c6ec4" compoundref="spiel__utils_8h" startline="397" endline="408">down_cast</referencedby>
        <referencedby refid="classopen__spiel_1_1_bot_1a0022d99994e0dc09b97b2d2c387e63da" compoundref="spiel__bots_8h" startline="123" endline="132">open_spiel::Bot::ForceAction</referencedby>
        <referencedby refid="namespaceopen__spiel_1ab52b8891e58c4d116690500440ca8f4c" compoundref="game__parameters_8cc" startline="194" endline="225">GameParametersFromString</referencedby>
        <referencedby refid="namespaceopen__spiel_1a9bc31aee9bea953807b92aa4399d1d10" compoundref="game__parameters_8cc" startline="227" endline="244">GameParameterTypeToString</referencedby>
        <referencedby refid="namespaceopen__spiel_1aab6328ff82289cc5a639af623b07983f" compoundref="policy_8cc" startline="275" endline="321">GetEmptyTabularPolicy</referencedby>
        <referencedby refid="namespaceopen__spiel_1a0fa54efbbbe01ea0ece4b0323105158c" compoundref="policy_8cc" startline="432" endline="475">GetFirstActionPolicy</referencedby>
        <referencedby refid="classopen__spiel_1_1_bot_1ab9a38a83389cc6f48dbec28ecd243519" compoundref="spiel__bots_8h" startline="137" endline="147">open_spiel::Bot::GetPolicy</referencedby>
        <referencedby refid="namespaceopen__spiel_1a5dc710e7fbd94c8c96e616086be2437d" compoundref="policy_8cc" startline="376" endline="430">GetRandomDeterministicPolicy</referencedby>
        <referencedby refid="classopen__spiel_1_1_game_1ad8e566fa7343c252e2895a46ef6cdd31" compoundref="spiel_8h" startline="931" endline="933">open_spiel::Game::GetRNGState</referencedby>
        <referencedby refid="classopen__spiel_1_1_policy_1abbe4e1b820b5ca95e67b60de92d38370" compoundref="policy_8h" startline="132" endline="134">open_spiel::Policy::GetStatePolicy</referencedby>
        <referencedby refid="classopen__spiel_1_1_preferred_action_policy_1ad4cccc4bd0b7060f4d04a47f716a408a" compoundref="policy_8cc" startline="477" endline="486">open_spiel::PreferredActionPolicy::GetStatePolicy</referencedby>
        <referencedby refid="classopen__spiel_1_1_state_1a31bb588b60127656dbc189c9886e2155" compoundref="spiel_8h" startline="481" endline="483">open_spiel::State::InformationStateString</referencedby>
        <referencedby refid="classopen__spiel_1_1_state_1ae3c75cd43d2bdc470399171d25bf3f1f" compoundref="spiel_8h" startline="505" endline="508">open_spiel::State::InformationStateTensor</referencedby>
        <referencedby refid="classopen__spiel_1_1_game_1a209f3549db02ccfd23e5f534f49c6b9c" compoundref="spiel_8h" startline="820" endline="822">open_spiel::Game::InformationStateTensorShape</referencedby>
        <referencedby refid="namespaceopen__spiel_1adf7d52b8cc21ea6b1bc3963837073829" compoundref="spiel__bots_8cc" startline="363" endline="372">LoadBot</referencedby>
        <referencedby refid="namespaceopen__spiel_1a041180755b50ef57ca83e4ca9f3827b0" compoundref="spiel_8cc" startline="231" endline="239">LoadGame</referencedby>
        <referencedby refid="namespaceopen__spiel_1ab464ff98519dd7819e7cd8fc30234716" compoundref="spiel_8cc" startline="241" endline="256">LoadGame</referencedby>
        <referencedby refid="classopen__spiel_1_1_game_1a28537d9c2a657634e611724e12d2f32f" compoundref="observer_8cc" startline="125" endline="135">open_spiel::Game::MakeRegisteredObserver</referencedby>
        <referencedby refid="classopen__spiel_1_1_game_1a817f5d34cf3d2bcf5e890357f9c2ef1f" compoundref="spiel_8h" startline="882" endline="887">open_spiel::Game::MaxChanceNodesInHistory</referencedby>
        <referencedby refid="classopen__spiel_1_1_game_1af0bbcc085789b58460771b4277e5adb2" compoundref="spiel_8h" startline="897" endline="907">open_spiel::Game::MaxHistoryLength</referencedby>
        <referencedby refid="classopen__spiel_1_1_state_1ac721b1cb2b8dccaec4350278fc5cb724" compoundref="spiel_8cc" startline="813" endline="820">open_spiel::State::MeanFieldPopulation</referencedby>
        <referencedby refid="classopen__spiel_1_1_game_1aa76d3480113257e022575019af601df1" compoundref="spiel_8h" startline="769" endline="771">open_spiel::Game::NewInitialState</referencedby>
        <referencedby refid="classopen__spiel_1_1_game_1ac46c5cfeeb05478188b382fa4d182efd" compoundref="spiel_8h" startline="974" endline="977">open_spiel::Game::NewInitialStateForPopulation</referencedby>
        <referencedby refid="classopen__spiel_1_1_state_1ad2bbdb6b0d9513ea5f9fc4d8d16a2f8e" compoundref="spiel_8h" startline="540" endline="542">open_spiel::State::ObservationString</referencedby>
        <referencedby refid="classopen__spiel_1_1_state_1a0d367e1c9121ecbf6c0467f200fd4b96" compoundref="spiel_8h" startline="552" endline="555">open_spiel::State::ObservationTensor</referencedby>
        <referencedby refid="classopen__spiel_1_1_game_1a36bc618e4f23f2b81cb479e68dadf310" compoundref="spiel_8h" startline="840" endline="842">open_spiel::Game::ObservationTensorShape</referencedby>
        <referencedby refid="classopen__spiel_1_1_sampler_from_rng_1a6f5569c54d6bd6f94970ea5cac49ab92" compoundref="spiel__utils_8cc" startline="183" endline="199">open_spiel::SamplerFromRng::operator()</referencedby>
        <referencedby refid="namespaceopen__spiel_1a244719d0f18bf3dd71a9a050c01b2f43" compoundref="spiel_8cc" startline="539" endline="550">operator&lt;&lt;</referencedby>
        <referencedby refid="namespaceopen__spiel_1a1a2aa35ae5d7abab25a617359900db1f" compoundref="spiel_8cc" startline="511" endline="522">operator&lt;&lt;</referencedby>
        <referencedby refid="namespaceopen__spiel_1a12e701d9ce3203e9de0acfc6d00266b1" compoundref="spiel_8cc" startline="571" endline="582">operator&lt;&lt;</referencedby>
        <referencedby refid="namespaceopen__spiel_1af5c94daedba1dff4ad35c98e409bce79" compoundref="spiel_8cc" startline="631" endline="640">operator&lt;&lt;</referencedby>
        <referencedby refid="namespaceopen__spiel_1a37646bb5adaf51428409c128b77db425" compoundref="spiel_8cc" startline="599" endline="612">operator&lt;&lt;</referencedby>
        <referencedby refid="namespaceopen__spiel_1abf9e3bde94e120dee9ef024ea854a1ef" compoundref="spiel_8cc" startline="556" endline="569">operator&gt;&gt;</referencedby>
        <referencedby refid="namespaceopen__spiel_1a72910c80f8d652c30546d1157f267248" compoundref="spiel_8cc" startline="524" endline="537">operator&gt;&gt;</referencedby>
        <referencedby refid="namespaceopen__spiel_1a0d925ee0330bff28ef0e80bd074619b0" compoundref="spiel_8cc" startline="584" endline="597">operator&gt;&gt;</referencedby>
        <referencedby refid="namespaceopen__spiel_1ade7f49ebc7e29de2107b5f48fcad505d" compoundref="spiel_8cc" startline="642" endline="653">operator&gt;&gt;</referencedby>
        <referencedby refid="namespaceopen__spiel_1a62a174de78bb7c3ef9de89024f471af0" compoundref="spiel_8cc" startline="614" endline="629">operator&gt;&gt;</referencedby>
        <referencedby refid="classopen__spiel_1_1_game_1ab6156eb0a128486d9de8a054ab7365a9" compoundref="spiel_8h" startline="988" endline="1029">open_spiel::Game::ParameterValue</referencedby>
        <referencedby refid="namespaceopen__spiel_1a1e640b32f7c4fb2f9405803b79a93b19" compoundref="game__parameters_8h" startline="208" endline="221">ParameterValue</referencedby>
        <referencedby refid="classopen__spiel_1_1_observer_registerer_1a39b06045bb6b5017f3496bd379cb7ae8" compoundref="observer_8cc" startline="336" endline="345">open_spiel::ObserverRegisterer::RegisterObserver</referencedby>
        <referencedby refid="classopen__spiel_1_1_state_1a1bee92c295ffd0404712cd6004ab9df0" compoundref="spiel_8h" startline="657" endline="660">open_spiel::State::ResampleFromInfostate</referencedby>
        <referencedby refid="classopen__spiel_1_1_bot_1aceae4d02f217fad76c55f74b1fb91d5e" compoundref="spiel__bots_8h" startline="113" endline="115">open_spiel::Bot::RestartAt</referencedby>
        <referencedby refid="namespaceopen__spiel_1a4dccff40ce79f6186c72a0c0a4dc788e" compoundref="spiel_8cc" startline="274" endline="311">SampleAction</referencedby>
        <referencedby refid="namespaceopen__spiel_1aef7d54d21976971293ba4dcef744dd82" compoundref="policy_8cc" startline="328" endline="363">SamplePolicy</referencedby>
        <referencedby refid="classopen__spiel_1_1_policy_1a53e9086029e7365dc2f5d4a3fda33124" compoundref="policy_8h" startline="143" endline="146">open_spiel::Policy::Serialize</referencedby>
        <referencedby refid="classopen__spiel_1_1_preferred_action_policy_1a7d159ec9a8610fab3795cb18f3e83b6b" compoundref="policy_8h" startline="371" endline="374">open_spiel::PreferredActionPolicy::Serialize</referencedby>
        <referencedby refid="classopen__spiel_1_1_tabular_policy_1a933b8698b3924573c2f1c55b31f3c7a1" compoundref="policy_8h" startline="198" endline="234">open_spiel::TabularPolicy::Serialize</referencedby>
        <referencedby refid="classopen__spiel_1_1_game_1a04741ccd0d5da41a454501dd2953af69" compoundref="spiel_8h" startline="937" endline="939">open_spiel::Game::SetRNGState</referencedby>
        <referencedby refid="namespaceopen__spiel_1aeb956daaab571492f9a18ed99000b016" compoundref="spiel_8cc" startline="842" endline="848">SpielFatalErrorWithStateInfo</referencedby>
        <referencedby refid="classopen__spiel_1_1_bot_1ae48130d7b9291f22e9d7460d88f2e87c" compoundref="spiel__bots_8h" startline="148" endline="159">open_spiel::Bot::StepWithPolicy</referencedby>
        <referencedby refid="classopen__spiel_1_1_state_1acbd1f66c9496f350693594ad38fc7907" compoundref="spiel_8cc" startline="329" endline="336">open_spiel::State::StringToAction</referencedby>
        <referencedby refid="classopen__spiel_1_1_game_parameter_1acb636ac727b441b3c9fba4782a4580cb" compoundref="game__parameters_8cc" startline="35" endline="55">open_spiel::GameParameter::ToReprString</referencedby>
        <referencedby refid="classopen__spiel_1_1_game_parameter_1af70e5458038ffcdc8a2680404daf9493" compoundref="game__parameters_8cc" startline="57" endline="75">open_spiel::GameParameter::ToString</referencedby>
        <referencedby refid="classopen__spiel_1_1_state_1ab355df7c0595648cb657eb9aa1ab9a50" compoundref="spiel_8h" startline="577" endline="579">open_spiel::State::UndoAction</referencedby>
        <referencedby refid="classopen__spiel_1_1_state_1a0e4105f5d7a425bc9d7393ae56f1f854" compoundref="spiel_8h" startline="707" endline="709">open_spiel::State::UpdateDistribution</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a80d248e677c27688d959f928432a258d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; open_spiel::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, const absl::nullopt_t &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>open_spiel::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const absl::nullopt_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.cc" line="139" column="1" bodyfile="open_spiel/spiel_utils.cc" bodystart="139" bodyend="141" declfile="open_spiel/spiel_utils.h" declline="59" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a76fab47e00dab81b9c71bb5515b240a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void open_spiel::Normalize</definition>
        <argsstring>(absl::Span&lt; double &gt; weights)</argsstring>
        <name>Normalize</name>
        <qualifiedname>open_spiel::Normalize</qualifiedname>
        <param>
          <type>absl::Span&lt; double &gt;</type>
          <declname>weights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.cc" line="143" column="6" bodyfile="open_spiel/spiel_utils.cc" bodystart="143" bodyend="151" declfile="open_spiel/spiel_utils.h" declline="166" declcolumn="6"/>
        <references refid="spiel__utils_8h_1aff340fc0f81ce83d807cc1aa674db999" compoundref="spiel__utils_8h" startline="297" endline="300">SPIEL_CHECK_FALSE</references>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1aec4bf62bb68e2ffac219ae496afd9348" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string open_spiel::BoolToStr</definition>
        <argsstring>(bool b)</argsstring>
        <name>BoolToStr</name>
        <qualifiedname>open_spiel::BoolToStr</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.cc" line="153" column="13" bodyfile="open_spiel/spiel_utils.cc" bodystart="153" bodyend="153" declfile="open_spiel/spiel_utils.h" declline="174" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a61a557cb24b0691b2d821e956bb9fb01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
          <param>
            <type>class B</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string open_spiel::VectorOfPairsToString</definition>
        <argsstring>(std::vector&lt; std::pair&lt; A, B &gt; &gt; &amp;vec, const std::string &amp;delimiter, const std::string &amp;pair_delimiter)</argsstring>
        <name>VectorOfPairsToString</name>
        <qualifiedname>open_spiel::VectorOfPairsToString</qualifiedname>
        <param>
          <type>std::vector&lt; std::pair&lt; A, B &gt; &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>delimiter</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>pair_delimiter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.cc" line="156" column="13" bodyfile="open_spiel/spiel_utils.cc" bodystart="156" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a403f1beb9bb544d9736ac2b6b529a52c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool open_spiel::StrContainsIgnoreCase</definition>
        <argsstring>(const std::string &amp;haystack, const std::string &amp;needle)</argsstring>
        <name>StrContainsIgnoreCase</name>
        <qualifiedname>open_spiel::StrContainsIgnoreCase</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>haystack</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>needle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.cc" line="170" column="6" bodyfile="open_spiel/spiel_utils.cc" bodystart="170" bodyend="181" declfile="open_spiel/spiel_utils.h" declline="215" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1ad63540b3b9a3adb7ae4c9b96170cc8f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; open_spiel::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, const std::unique_ptr&lt; T &gt; &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>open_spiel::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const std::unique_ptr&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.h" line="87" column="1" bodyfile="open_spiel/spiel_utils.h" bodystart="87" bodyend="89" declfile="open_spiel/spiel_utils.h" declline="50" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a3c7bd4efc56f1c9d159b16bbf6ade090" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; open_spiel::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, const std::pair&lt; T, U &gt; &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>open_spiel::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const std::pair&lt; T, U &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.h" line="95" column="1" bodyfile="open_spiel/spiel_utils.h" bodystart="95" bodyend="98" declfile="open_spiel/spiel_utils.h" declline="52" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1ad08dc0d0b9ef5c3cb6dde8afbb322df8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; open_spiel::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, const std::vector&lt; T &gt; &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>open_spiel::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.h" line="74" column="1" bodyfile="open_spiel/spiel_utils.h" bodystart="74" bodyend="76" declfile="open_spiel/spiel_utils.h" declline="54" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1aef60acf7e128b58ecde2b6bc60d1db40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; open_spiel::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, const std::array&lt; T, N &gt; &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>open_spiel::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const std::array&lt; T, N &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.h" line="78" column="1" bodyfile="open_spiel/spiel_utils.h" bodystart="78" bodyend="85" declfile="open_spiel/spiel_utils.h" declline="56" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a232bc93e26b50e9e808514a5ff406d02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; open_spiel::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, const absl::optional&lt; T &gt; &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>open_spiel::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const absl::optional&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.h" line="91" column="1" bodyfile="open_spiel/spiel_utils.h" bodystart="91" bodyend="93" declfile="open_spiel/spiel_utils.h" declline="58" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1af10c7d6ac2e339f096a748b1ca6f8a7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; open_spiel::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, absl::Span&lt; T &gt; v)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>open_spiel::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>absl::Span&lt; T &gt;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.h" line="65" column="1" bodyfile="open_spiel/spiel_utils.h" bodystart="65" bodyend="72" declfile="open_spiel/spiel_utils.h" declline="61" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a58285a1331f569b904adeb64997e4551" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float open_spiel::FloatingPointDefaultTolerance</definition>
        <argsstring>()</argsstring>
        <name>FloatingPointDefaultTolerance</name>
        <qualifiedname>open_spiel::FloatingPointDefaultTolerance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.h" line="136" column="24" bodyfile="open_spiel/spiel_utils.h" bodystart="136" bodyend="136"/>
        <referencedby refid="namespaceopen__spiel_1ae9813a4514ea28067d143537f9109094" compoundref="spiel__utils_8h" startline="185" endline="189">Near</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a8f45b953a694ee1f2b061b17d9641f26" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float open_spiel::ProbabilityDefaultTolerance</definition>
        <argsstring>()</argsstring>
        <name>ProbabilityDefaultTolerance</name>
        <qualifiedname>open_spiel::ProbabilityDefaultTolerance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.h" line="139" column="24" bodyfile="open_spiel/spiel_utils.h" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a395023729c68459e2f93589a1d875685" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
          <param>
            <type>class B</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string open_spiel::VectorOfPairsToString</definition>
        <argsstring>(const std::vector&lt; std::pair&lt; A, B &gt; &gt; &amp;vec, const std::string &amp;delimiter, const std::string &amp;pair_delimiter)</argsstring>
        <name>VectorOfPairsToString</name>
        <qualifiedname>open_spiel::VectorOfPairsToString</qualifiedname>
        <param>
          <type>const std::vector&lt; std::pair&lt; A, B &gt; &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>delimiter</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>pair_delimiter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.h" line="178" column="13" declfile="open_spiel/spiel_utils.h" declline="178" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1ae9813a4514ea28067d143537f9109094" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool open_spiel::Near</definition>
        <argsstring>(T a, T b)</argsstring>
        <name>Near</name>
        <qualifiedname>open_spiel::Near</qualifiedname>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.h" line="185" column="6" bodyfile="open_spiel/spiel_utils.h" bodystart="185" bodyend="189"/>
        <references refid="namespaceopen__spiel_1a58285a1331f569b904adeb64997e4551" compoundref="spiel__utils_8h" startline="136" endline="136">FloatingPointDefaultTolerance</references>
        <referencedby refid="namespaceopen__spiel_1ae00c0c4427507797bc362d31541ff684" compoundref="spiel__utils_8h" startline="200" endline="211">AllNear</referencedby>
        <referencedby refid="namespaceopen__spiel_1a3bebea309b826c727a0e217110e13c0c" compoundref="policy_8cc" startline="79" endline="98">StatePoliciesEqual</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a75a8fd3e4d9b82057d3b6ac740fbc385" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool open_spiel::Near</definition>
        <argsstring>(T a, T b, T epsilon)</argsstring>
        <name>Near</name>
        <qualifiedname>open_spiel::Near</qualifiedname>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>b</declname>
        </param>
        <param>
          <type>T</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.h" line="193" column="6" bodyfile="open_spiel/spiel_utils.h" bodystart="193" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1ae00c0c4427507797bc362d31541ff684" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool open_spiel::AllNear</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;vector1, const std::vector&lt; T &gt; &amp;vector2, T epsilon)</argsstring>
        <name>AllNear</name>
        <qualifiedname>open_spiel::AllNear</qualifiedname>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>vector1</declname>
        </param>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>vector2</declname>
        </param>
        <param>
          <type>T</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.h" line="200" column="6" bodyfile="open_spiel/spiel_utils.h" bodystart="200" bodyend="211"/>
        <references refid="namespaceopen__spiel_1ae9813a4514ea28067d143537f9109094" compoundref="spiel__utils_8h" startline="185" endline="189">Near</references>
        <referencedby refid="classopen__spiel_1_1matrix__game_1_1_matrix_game_1a82911b10d26c92f982fb61f22aeb6db2" compoundref="matrix__game_8h" startline="156" endline="162">open_spiel::matrix_game::MatrixGame::ApproxEqual</referencedby>
        <referencedby refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1a421e14a97cd15a0ba6970c1bde5751d0" compoundref="tensor__game_8h" startline="101" endline="112">open_spiel::tensor_game::TensorGame::ApproxEqual</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a2abc2a9bf725d541a7da3b6f3c4c6ec4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename To</type>
          </param>
          <param>
            <type>typename From</type>
          </param>
        </templateparamlist>
        <type>To</type>
        <definition>To open_spiel::down_cast</definition>
        <argsstring>(From *f)</argsstring>
        <name>down_cast</name>
        <qualifiedname>open_spiel::down_cast</qualifiedname>
        <param>
          <type>From *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.h" line="397" column="11" bodyfile="open_spiel/spiel_utils.h" bodystart="397" bodyend="408"/>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
        <referencedby refid="classopen__spiel_1_1matrix__game_1_1_matrix_game_1a82911b10d26c92f982fb61f22aeb6db2" compoundref="matrix__game_8h" startline="156" endline="162">open_spiel::matrix_game::MatrixGame::ApproxEqual</referencedby>
        <referencedby refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1a421e14a97cd15a0ba6970c1bde5751d0" compoundref="tensor__game_8h" startline="101" endline="112">open_spiel::tensor_game::TensorGame::ApproxEqual</referencedby>
        <referencedby refid="classopen__spiel_1_1matrix__game_1_1_matrix_game_1a1e7d72bf6f1a12f87ea448e6f83a82e4" compoundref="matrix__game_8h" startline="148" endline="154">open_spiel::matrix_game::MatrixGame::operator==</referencedby>
        <referencedby refid="classopen__spiel_1_1tensor__game_1_1_tensor_game_1af8206eecf92a2adf8172a6702c1b1f2b" compoundref="tensor__game_8h" startline="96" endline="99">open_spiel::tensor_game::TensorGame::operator==</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceopen__spiel_1a13e94371d9454bf08643fdb22064a4ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename To</type>
          </param>
          <param>
            <type>typename From</type>
          </param>
        </templateparamlist>
        <type>To</type>
        <definition>To open_spiel::down_cast</definition>
        <argsstring>(From &amp;f)</argsstring>
        <name>down_cast</name>
        <qualifiedname>open_spiel::down_cast</qualifiedname>
        <param>
          <type>From &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="open_spiel/spiel_utils.h" line="412" column="11" bodyfile="open_spiel/spiel_utils.h" bodystart="412" bodyend="424"/>
        <references refid="namespaceopen__spiel_1a43513b6f8f3a26ce1a64a1a807df9011" compoundref="spiel__utils_8cc" startline="132" endline="137">SpielFatalError</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="open_spiel/__init__.py" line="1" column="1"/>
  </compounddef>
</doxygen>
